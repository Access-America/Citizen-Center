{"version":3,"file":"arm-resources.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/operationsMappers.ts","../src/models/parameters.ts","../src/operations/operations.ts","../src/models/deploymentsMappers.ts","../src/operations/deployments.ts","../src/models/providersMappers.ts","../src/operations/providers.ts","../src/models/resourcesMappers.ts","../src/operations/resources.ts","../src/models/resourceGroupsMappers.ts","../src/operations/resourceGroups.ts","../src/models/tagsMappers.ts","../src/operations/tags.ts","../src/models/deploymentOperationsMappers.ts","../src/operations/deploymentOperations.ts","../src/operations/index.ts","../src/resourceManagementClientContext.ts","../src/resourceManagementClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { BaseResource, CloudError, AzureServiceClientOptions } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport { BaseResource, CloudError };\n\n/**\n * Deployment filter.\n */\nexport interface DeploymentExtendedFilter {\n  /**\n   * The provisioning state.\n   */\n  provisioningState?: string;\n}\n\n/**\n * Resource filter.\n */\nexport interface GenericResourceFilter {\n  /**\n   * The resource type.\n   */\n  resourceType?: string;\n  /**\n   * The tag name.\n   */\n  tagname?: string;\n  /**\n   * The tag value.\n   */\n  tagvalue?: string;\n}\n\n/**\n * Resource group filter.\n */\nexport interface ResourceGroupFilter {\n  /**\n   * The tag name.\n   */\n  tagName?: string;\n  /**\n   * The tag value.\n   */\n  tagValue?: string;\n}\n\n/**\n * Entity representing the reference to the template.\n */\nexport interface TemplateLink {\n  /**\n   * The URI of the template to deploy.\n   */\n  uri: string;\n  /**\n   * If included, must match the ContentVersion in the template.\n   */\n  contentVersion?: string;\n}\n\n/**\n * Entity representing the reference to the deployment parameters.\n */\nexport interface ParametersLink {\n  /**\n   * The URI of the parameters file.\n   */\n  uri: string;\n  /**\n   * If included, must match the ContentVersion in the template.\n   */\n  contentVersion?: string;\n}\n\n/**\n * The debug setting.\n */\nexport interface DebugSetting {\n  /**\n   * Specifies the type of information to log for debugging. The permitted values are none,\n   * requestContent, responseContent, or both requestContent and responseContent separated by a\n   * comma. The default is none. When setting this value, carefully consider the type of\n   * information you are passing in during deployment. By logging information about the request or\n   * response, you could potentially expose sensitive data that is retrieved through the deployment\n   * operations.\n   */\n  detailLevel?: string;\n}\n\n/**\n * Deployment on error behavior.\n */\nexport interface OnErrorDeployment {\n  /**\n   * The deployment on error behavior type. Possible values are LastSuccessful and\n   * SpecificDeployment. Possible values include: 'LastSuccessful', 'SpecificDeployment'\n   */\n  type?: OnErrorDeploymentType;\n  /**\n   * The deployment to be used on error case.\n   */\n  deploymentName?: string;\n}\n\n/**\n * Deployment properties.\n */\nexport interface DeploymentProperties {\n  /**\n   * The template content. You use this element when you want to pass the template syntax directly\n   * in the request rather than link to an existing template. It can be a JObject or well-formed\n   * JSON string. Use either the templateLink property or the template property, but not both.\n   */\n  template?: any;\n  /**\n   * The URI of the template. Use either the templateLink property or the template property, but\n   * not both.\n   */\n  templateLink?: TemplateLink;\n  /**\n   * Name and value pairs that define the deployment parameters for the template. You use this\n   * element when you want to provide the parameter values directly in the request rather than link\n   * to an existing parameter file. Use either the parametersLink property or the parameters\n   * property, but not both. It can be a JObject or a well formed JSON string.\n   */\n  parameters?: any;\n  /**\n   * The URI of parameters file. You use this element to link to an existing parameters file. Use\n   * either the parametersLink property or the parameters property, but not both.\n   */\n  parametersLink?: ParametersLink;\n  /**\n   * The mode that is used to deploy resources. This value can be either Incremental or Complete.\n   * In Incremental mode, resources are deployed without deleting existing resources that are not\n   * included in the template. In Complete mode, resources are deployed and existing resources in\n   * the resource group that are not included in the template are deleted. Be careful when using\n   * Complete mode as you may unintentionally delete resources. Possible values include:\n   * 'Incremental', 'Complete'\n   */\n  mode: DeploymentMode;\n  /**\n   * The debug setting of the deployment.\n   */\n  debugSetting?: DebugSetting;\n  /**\n   * The deployment on error behavior.\n   */\n  onErrorDeployment?: OnErrorDeployment;\n}\n\n/**\n * Deployment operation parameters.\n */\nexport interface Deployment {\n  /**\n   * The location to store the deployment data.\n   */\n  location?: string;\n  /**\n   * The deployment properties.\n   */\n  properties: DeploymentProperties;\n}\n\n/**\n * The deployment export result.\n */\nexport interface DeploymentExportResult {\n  /**\n   * The template content.\n   */\n  template?: any;\n}\n\n/**\n * The detailed error message of resource management.\n */\nexport interface ResourceManagementErrorWithDetails {\n  /**\n   * The error code returned when exporting the template.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly code?: string;\n  /**\n   * The error message describing the export error.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly message?: string;\n  /**\n   * The target of the error.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly target?: string;\n  /**\n   * Validation error.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly details?: ResourceManagementErrorWithDetails[];\n}\n\n/**\n * The type of the paths for alias.\n */\nexport interface AliasPathType {\n  /**\n   * The path of an alias.\n   */\n  path?: string;\n  /**\n   * The API versions.\n   */\n  apiVersions?: string[];\n}\n\n/**\n * The alias type.\n */\nexport interface AliasType {\n  /**\n   * The alias name.\n   */\n  name?: string;\n  /**\n   * The paths for an alias.\n   */\n  paths?: AliasPathType[];\n}\n\n/**\n * Resource type managed by the resource provider.\n */\nexport interface ProviderResourceType {\n  /**\n   * The resource type.\n   */\n  resourceType?: string;\n  /**\n   * The collection of locations where this resource type can be created.\n   */\n  locations?: string[];\n  /**\n   * The aliases that are supported by this resource type.\n   */\n  aliases?: AliasType[];\n  /**\n   * The API version.\n   */\n  apiVersions?: string[];\n  /**\n   * The additional capabilities offered by this resource type.\n   */\n  capabilities?: string;\n  /**\n   * The properties.\n   */\n  properties?: { [propertyName: string]: string };\n}\n\n/**\n * Resource provider information.\n */\nexport interface Provider {\n  /**\n   * The provider ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The namespace of the resource provider.\n   */\n  namespace?: string;\n  /**\n   * The registration state of the resource provider.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly registrationState?: string;\n  /**\n   * The registration policy of the resource provider.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly registrationPolicy?: string;\n  /**\n   * The collection of provider resource types.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly resourceTypes?: ProviderResourceType[];\n}\n\n/**\n * Deployment dependency information.\n */\nexport interface BasicDependency {\n  /**\n   * The ID of the dependency.\n   */\n  id?: string;\n  /**\n   * The dependency resource type.\n   */\n  resourceType?: string;\n  /**\n   * The dependency resource name.\n   */\n  resourceName?: string;\n}\n\n/**\n * Deployment dependency information.\n */\nexport interface Dependency {\n  /**\n   * The list of dependencies.\n   */\n  dependsOn?: BasicDependency[];\n  /**\n   * The ID of the dependency.\n   */\n  id?: string;\n  /**\n   * The dependency resource type.\n   */\n  resourceType?: string;\n  /**\n   * The dependency resource name.\n   */\n  resourceName?: string;\n}\n\n/**\n * Deployment on error behavior with additional details.\n */\nexport interface OnErrorDeploymentExtended {\n  /**\n   * The state of the provisioning for the on error deployment.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningState?: string;\n  /**\n   * The deployment on error behavior type. Possible values are LastSuccessful and\n   * SpecificDeployment. Possible values include: 'LastSuccessful', 'SpecificDeployment'\n   */\n  type?: OnErrorDeploymentType;\n  /**\n   * The deployment to be used on error case.\n   */\n  deploymentName?: string;\n}\n\n/**\n * Deployment properties with additional details.\n */\nexport interface DeploymentPropertiesExtended {\n  /**\n   * The state of the provisioning.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningState?: string;\n  /**\n   * The correlation ID of the deployment.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly correlationId?: string;\n  /**\n   * The timestamp of the template deployment.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly timestamp?: Date;\n  /**\n   * The duration of the template deployment.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly duration?: string;\n  /**\n   * Key/value pairs that represent deployment output.\n   */\n  outputs?: any;\n  /**\n   * The list of resource providers needed for the deployment.\n   */\n  providers?: Provider[];\n  /**\n   * The list of deployment dependencies.\n   */\n  dependencies?: Dependency[];\n  /**\n   * The template content. Use only one of Template or TemplateLink.\n   */\n  template?: any;\n  /**\n   * The URI referencing the template. Use only one of Template or TemplateLink.\n   */\n  templateLink?: TemplateLink;\n  /**\n   * Deployment parameters. Use only one of Parameters or ParametersLink.\n   */\n  parameters?: any;\n  /**\n   * The URI referencing the parameters. Use only one of Parameters or ParametersLink.\n   */\n  parametersLink?: ParametersLink;\n  /**\n   * The deployment mode. Possible values are Incremental and Complete. Possible values include:\n   * 'Incremental', 'Complete'\n   */\n  mode?: DeploymentMode;\n  /**\n   * The debug setting of the deployment.\n   */\n  debugSetting?: DebugSetting;\n  /**\n   * The deployment on error behavior.\n   */\n  onErrorDeployment?: OnErrorDeploymentExtended;\n}\n\n/**\n * Information from validate template deployment response.\n */\nexport interface DeploymentValidateResult {\n  /**\n   * Validation error.\n   */\n  error?: ResourceManagementErrorWithDetails;\n  /**\n   * The template deployment properties.\n   */\n  properties?: DeploymentPropertiesExtended;\n}\n\n/**\n * Deployment information.\n */\nexport interface DeploymentExtended extends BaseResource {\n  /**\n   * The ID of the deployment.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The name of the deployment.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The type of the deployment.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * the location of the deployment.\n   */\n  location?: string;\n  /**\n   * Deployment properties.\n   */\n  properties?: DeploymentPropertiesExtended;\n}\n\n/**\n * Plan for the resource.\n */\nexport interface Plan {\n  /**\n   * The plan ID.\n   */\n  name?: string;\n  /**\n   * The publisher ID.\n   */\n  publisher?: string;\n  /**\n   * The offer ID.\n   */\n  product?: string;\n  /**\n   * The promotion code.\n   */\n  promotionCode?: string;\n  /**\n   * The plan's version.\n   */\n  version?: string;\n}\n\n/**\n * SKU for the resource.\n */\nexport interface Sku {\n  /**\n   * The SKU name.\n   */\n  name?: string;\n  /**\n   * The SKU tier.\n   */\n  tier?: string;\n  /**\n   * The SKU size.\n   */\n  size?: string;\n  /**\n   * The SKU family.\n   */\n  family?: string;\n  /**\n   * The SKU model.\n   */\n  model?: string;\n  /**\n   * The SKU capacity.\n   */\n  capacity?: number;\n}\n\n/**\n * An interface representing IdentityUserAssignedIdentitiesValue.\n */\nexport interface IdentityUserAssignedIdentitiesValue {\n  /**\n   * The principal id of user assigned identity.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly principalId?: string;\n  /**\n   * The client id of user assigned identity.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly clientId?: string;\n}\n\n/**\n * Identity for the resource.\n */\nexport interface Identity {\n  /**\n   * The principal ID of resource identity.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant ID of resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly tenantId?: string;\n  /**\n   * The identity type. Possible values include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned,\n   * UserAssigned', 'None'\n   */\n  type?: ResourceIdentityType;\n  /**\n   * The list of user identities associated with the resource. The user identity dictionary key\n   * references will be ARM resource ids in the form:\n   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n   */\n  userAssignedIdentities?: { [propertyName: string]: IdentityUserAssignedIdentitiesValue };\n}\n\n/**\n * Specified resource.\n */\nexport interface Resource extends BaseResource {\n  /**\n   * Resource ID\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Resource name\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Resource location\n   */\n  location?: string;\n  /**\n   * Resource tags\n   */\n  tags?: { [propertyName: string]: string };\n}\n\n/**\n * Resource information.\n */\nexport interface GenericResource extends Resource {\n  /**\n   * The plan of the resource.\n   */\n  plan?: Plan;\n  /**\n   * The resource properties.\n   */\n  properties?: any;\n  /**\n   * The kind of the resource.\n   */\n  kind?: string;\n  /**\n   * ID of the resource that manages this resource.\n   */\n  managedBy?: string;\n  /**\n   * The SKU of the resource.\n   */\n  sku?: Sku;\n  /**\n   * The identity of the resource.\n   */\n  identity?: Identity;\n}\n\n/**\n * The resource group properties.\n */\nexport interface ResourceGroupProperties {\n  /**\n   * The provisioning state.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningState?: string;\n}\n\n/**\n * Resource group information.\n */\nexport interface ResourceGroup extends BaseResource {\n  /**\n   * The ID of the resource group.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource group.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource group.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * The resource group properties.\n   */\n  properties?: ResourceGroupProperties;\n  /**\n   * The location of the resource group. It cannot be changed after the resource group has been\n   * created. It must be one of the supported Azure locations.\n   */\n  location: string;\n  /**\n   * The ID of the resource that manages this resource group.\n   */\n  managedBy?: string;\n  /**\n   * The tags attached to the resource group.\n   */\n  tags?: { [propertyName: string]: string };\n}\n\n/**\n * Resource group information.\n */\nexport interface ResourceGroupPatchable {\n  /**\n   * The name of the resource group.\n   */\n  name?: string;\n  /**\n   * The resource group properties.\n   */\n  properties?: ResourceGroupProperties;\n  /**\n   * The ID of the resource that manages this resource group.\n   */\n  managedBy?: string;\n  /**\n   * The tags attached to the resource group.\n   */\n  tags?: { [propertyName: string]: string };\n}\n\n/**\n * Parameters of move resources.\n */\nexport interface ResourcesMoveInfo {\n  /**\n   * The IDs of the resources.\n   */\n  resources?: string[];\n  /**\n   * The target resource group.\n   */\n  targetResourceGroup?: string;\n}\n\n/**\n * Export resource group template request parameters.\n */\nexport interface ExportTemplateRequest {\n  /**\n   * The IDs of the resources. The only supported string currently is '*' (all resources). Future\n   * updates will support exporting specific resources.\n   */\n  resources?: string[];\n  /**\n   * The export template options. Supported values include 'IncludeParameterDefaultValue',\n   * 'IncludeComments' or 'IncludeParameterDefaultValue, IncludeComments\n   */\n  options?: string;\n}\n\n/**\n * Tag count.\n */\nexport interface TagCount {\n  /**\n   * Type of count.\n   */\n  type?: string;\n  /**\n   * Value of count.\n   */\n  value?: number;\n}\n\n/**\n * Tag information.\n */\nexport interface TagValue extends BaseResource {\n  /**\n   * The tag ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The tag value.\n   */\n  tagValue?: string;\n  /**\n   * The tag value count.\n   */\n  count?: TagCount;\n}\n\n/**\n * Tag details.\n */\nexport interface TagDetails {\n  /**\n   * The tag ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The tag name.\n   */\n  tagName?: string;\n  /**\n   * The total number of resources that use the resource tag. When a tag is initially created and\n   * has no associated resources, the value is 0.\n   */\n  count?: TagCount;\n  /**\n   * The list of tag values.\n   */\n  values?: TagValue[];\n}\n\n/**\n * Target resource.\n */\nexport interface TargetResource {\n  /**\n   * The ID of the resource.\n   */\n  id?: string;\n  /**\n   * The name of the resource.\n   */\n  resourceName?: string;\n  /**\n   * The type of the resource.\n   */\n  resourceType?: string;\n}\n\n/**\n * HTTP message.\n */\nexport interface HttpMessage {\n  /**\n   * HTTP message content.\n   */\n  content?: any;\n}\n\n/**\n * Deployment operation properties.\n */\nexport interface DeploymentOperationProperties {\n  /**\n   * The state of the provisioning.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningState?: string;\n  /**\n   * The date and time of the operation.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly timestamp?: Date;\n  /**\n   * The duration of the operation.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly duration?: string;\n  /**\n   * Deployment operation service request id.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serviceRequestId?: string;\n  /**\n   * Operation status code.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly statusCode?: string;\n  /**\n   * Operation status message.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly statusMessage?: any;\n  /**\n   * The target resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly targetResource?: TargetResource;\n  /**\n   * The HTTP request message.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly request?: HttpMessage;\n  /**\n   * The HTTP response message.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly response?: HttpMessage;\n}\n\n/**\n * Deployment operation information.\n */\nexport interface DeploymentOperation {\n  /**\n   * Full deployment operation ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Deployment operation ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly operationId?: string;\n  /**\n   * Deployment properties.\n   */\n  properties?: DeploymentOperationProperties;\n}\n\n/**\n * Resource provider operation's display properties.\n */\nexport interface ResourceProviderOperationDisplayProperties {\n  /**\n   * Operation description.\n   */\n  publisher?: string;\n  /**\n   * Operation provider.\n   */\n  provider?: string;\n  /**\n   * Operation resource.\n   */\n  resource?: string;\n  /**\n   * Resource provider operation.\n   */\n  operation?: string;\n  /**\n   * Operation description.\n   */\n  description?: string;\n}\n\n/**\n * Sub-resource.\n */\nexport interface SubResource extends BaseResource {\n  /**\n   * Resource ID\n   */\n  id?: string;\n}\n\n/**\n * Resource group export result.\n */\nexport interface ResourceGroupExportResult {\n  /**\n   * The template content.\n   */\n  template?: any;\n  /**\n   * The error.\n   */\n  error?: ResourceManagementErrorWithDetails;\n}\n\n/**\n * The object that represents the operation.\n */\nexport interface OperationDisplay {\n  /**\n   * Service provider: Microsoft.Resources\n   */\n  provider?: string;\n  /**\n   * Resource on which the operation is performed: Profile, endpoint, etc.\n   */\n  resource?: string;\n  /**\n   * Operation type: Read, write, delete, etc.\n   */\n  operation?: string;\n  /**\n   * Description of the operation.\n   */\n  description?: string;\n}\n\n/**\n * Microsoft.Resources operation\n */\nexport interface Operation {\n  /**\n   * Operation name: {provider}/{resource}/{operation}\n   */\n  name?: string;\n  /**\n   * The object that represents the operation.\n   */\n  display?: OperationDisplay;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentsListAtManagementGroupScopeOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n   * '{state}'.\n   */\n  filter?: string;\n  /**\n   * The number of results to get. If null is passed, returns all deployments.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentsListAtSubscriptionScopeOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n   * '{state}'.\n   */\n  filter?: string;\n  /**\n   * The number of results to get. If null is passed, returns all deployments.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentsListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n   * '{state}'.\n   */\n  filter?: string;\n  /**\n   * The number of results to get. If null is passed, returns all deployments.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ProvidersListOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return. If null is passed returns all deployments.\n   */\n  top?: number;\n  /**\n   * The properties to include in the results. For example, use &$expand=metadata in the query\n   * string to retrieve resource provider metadata. To include property aliases in response, use\n   * $expand=resourceTypes/aliases.\n   */\n  expand?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ProvidersGetOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The $expand query parameter. For example, to include property aliases in response, use\n   * $expand=resourceTypes/aliases.\n   */\n  expand?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ResourcesListByResourceGroupOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne\n   * (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId,\n   * plan, plan/publisher, plan/product, plan/name, plan/version, and\n   * plan/promotionCode.<br><br>For example, to filter by a resource type, use:\n   * $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use\n   * substringof(value, property) in the filter. The properties you can use for substring are: name\n   * and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name,\n   * use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together\n   * by adding and/or operators.<br><br>You can filter by tag names and values. For example, to\n   * filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq\n   * 'Value1'<br><br>You can use some properties together when filtering. The combinations you can\n   * use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and\n   * identity/principalId.\n   */\n  filter?: string;\n  /**\n   * The $expand query parameter. You can expand createdTime and changedTime. For example, to\n   * expand both properties, use $expand=changedTime,createdTime\n   */\n  expand?: string;\n  /**\n   * The number of results to return. If null is passed, returns all resources.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ResourcesListOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne\n   * (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId,\n   * plan, plan/publisher, plan/product, plan/name, plan/version, and\n   * plan/promotionCode.<br><br>For example, to filter by a resource type, use:\n   * $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use\n   * substringof(value, property) in the filter. The properties you can use for substring are: name\n   * and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name,\n   * use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together\n   * by adding and/or operators.<br><br>You can filter by tag names and values. For example, to\n   * filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq\n   * 'Value1'<br><br>You can use some properties together when filtering. The combinations you can\n   * use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and\n   * identity/principalId.\n   */\n  filter?: string;\n  /**\n   * The $expand query parameter. You can expand createdTime and changedTime. For example, to\n   * expand both properties, use $expand=changedTime,createdTime\n   */\n  expand?: string;\n  /**\n   * The number of results to return. If null is passed, returns all resource groups.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ResourceGroupsListOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The filter to apply on the operation.<br><br>You can filter by tag names and values. For\n   * example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq\n   * 'Value1'\n   */\n  filter?: string;\n  /**\n   * The number of results to return. If null is passed, returns all resource groups.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentOperationsListAtManagementGroupScopeOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentOperationsListAtSubscriptionScopeOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return.\n   */\n  top?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface DeploymentOperationsListOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The number of results to return.\n   */\n  top?: number;\n}\n\n/**\n * An interface representing ResourceManagementClientOptions.\n */\nexport interface ResourceManagementClientOptions extends AzureServiceClientOptions {\n  baseUri?: string;\n}\n\n/**\n * @interface\n * Result of the request to list Microsoft.Resources operations. It contains a list of operations\n * and a URL link to get the next set of results.\n * @extends Array<Operation>\n */\nexport interface OperationListResult extends Array<Operation> {\n  /**\n   * URL to get the next set of operation list results if there are any.\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * List of deployments.\n * @extends Array<DeploymentExtended>\n */\nexport interface DeploymentListResult extends Array<DeploymentExtended> {\n  /**\n   * The URL to use for getting the next set of results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * @interface\n * List of resource providers.\n * @extends Array<Provider>\n */\nexport interface ProviderListResult extends Array<Provider> {\n  /**\n   * The URL to use for getting the next set of results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * @interface\n * List of resource groups.\n * @extends Array<GenericResource>\n */\nexport interface ResourceListResult extends Array<GenericResource> {\n  /**\n   * The URL to use for getting the next set of results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * @interface\n * List of resource groups.\n * @extends Array<ResourceGroup>\n */\nexport interface ResourceGroupListResult extends Array<ResourceGroup> {\n  /**\n   * The URL to use for getting the next set of results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * @interface\n * List of subscription tags.\n * @extends Array<TagDetails>\n */\nexport interface TagsListResult extends Array<TagDetails> {\n  /**\n   * The URL to use for getting the next set of results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * @interface\n * List of deployment operations.\n * @extends Array<DeploymentOperation>\n */\nexport interface DeploymentOperationsListResult extends Array<DeploymentOperation> {\n  /**\n   * The URL to use for getting the next set of results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * Defines values for DeploymentMode.\n * Possible values include: 'Incremental', 'Complete'\n * @readonly\n * @enum {string}\n */\nexport type DeploymentMode = 'Incremental' | 'Complete';\n\n/**\n * Defines values for OnErrorDeploymentType.\n * Possible values include: 'LastSuccessful', 'SpecificDeployment'\n * @readonly\n * @enum {string}\n */\nexport type OnErrorDeploymentType = 'LastSuccessful' | 'SpecificDeployment';\n\n/**\n * Defines values for ResourceIdentityType.\n * Possible values include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned',\n * 'None'\n * @readonly\n * @enum {string}\n */\nexport type ResourceIdentityType = 'SystemAssigned' | 'UserAssigned' | 'SystemAssigned, UserAssigned' | 'None';\n\n/**\n * Contains response data for the list operation.\n */\nexport type OperationsListResponse = OperationListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: OperationListResult;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type OperationsListNextResponse = OperationListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: OperationListResult;\n    };\n};\n\n/**\n * Contains response data for the checkExistenceAtManagementGroupScope operation.\n */\nexport type DeploymentsCheckExistenceAtManagementGroupScopeResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: boolean;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: boolean;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdateAtManagementGroupScope operation.\n */\nexport type DeploymentsCreateOrUpdateAtManagementGroupScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentExtended;\n    };\n};\n\n/**\n * Contains response data for the getAtManagementGroupScope operation.\n */\nexport type DeploymentsGetAtManagementGroupScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentExtended;\n    };\n};\n\n/**\n * Contains response data for the validateAtManagementGroupScope operation.\n */\nexport type DeploymentsValidateAtManagementGroupScopeResponse = DeploymentValidateResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentValidateResult;\n    };\n};\n\n/**\n * Contains response data for the exportTemplateAtManagementGroupScope operation.\n */\nexport type DeploymentsExportTemplateAtManagementGroupScopeResponse = DeploymentExportResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentExportResult;\n    };\n};\n\n/**\n * Contains response data for the listAtManagementGroupScope operation.\n */\nexport type DeploymentsListAtManagementGroupScopeResponse = DeploymentListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentListResult;\n    };\n};\n\n/**\n * Contains response data for the checkExistenceAtSubscriptionScope operation.\n */\nexport type DeploymentsCheckExistenceAtSubscriptionScopeResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: boolean;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: boolean;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdateAtSubscriptionScope operation.\n */\nexport type DeploymentsCreateOrUpdateAtSubscriptionScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentExtended;\n    };\n};\n\n/**\n * Contains response data for the getAtSubscriptionScope operation.\n */\nexport type DeploymentsGetAtSubscriptionScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentExtended;\n    };\n};\n\n/**\n * Contains response data for the validateAtSubscriptionScope operation.\n */\nexport type DeploymentsValidateAtSubscriptionScopeResponse = DeploymentValidateResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentValidateResult;\n    };\n};\n\n/**\n * Contains response data for the exportTemplateAtSubscriptionScope operation.\n */\nexport type DeploymentsExportTemplateAtSubscriptionScopeResponse = DeploymentExportResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentExportResult;\n    };\n};\n\n/**\n * Contains response data for the listAtSubscriptionScope operation.\n */\nexport type DeploymentsListAtSubscriptionScopeResponse = DeploymentListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentListResult;\n    };\n};\n\n/**\n * Contains response data for the checkExistence operation.\n */\nexport type DeploymentsCheckExistenceResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: boolean;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: boolean;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type DeploymentsCreateOrUpdateResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentExtended;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type DeploymentsGetResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentExtended;\n    };\n};\n\n/**\n * Contains response data for the validate operation.\n */\nexport type DeploymentsValidateResponse = DeploymentValidateResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentValidateResult;\n    };\n};\n\n/**\n * Contains response data for the exportTemplate operation.\n */\nexport type DeploymentsExportTemplateResponse = DeploymentExportResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentExportResult;\n    };\n};\n\n/**\n * Contains response data for the listByResourceGroup operation.\n */\nexport type DeploymentsListByResourceGroupResponse = DeploymentListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentListResult;\n    };\n};\n\n/**\n * Contains response data for the beginCreateOrUpdateAtManagementGroupScope operation.\n */\nexport type DeploymentsBeginCreateOrUpdateAtManagementGroupScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentExtended;\n    };\n};\n\n/**\n * Contains response data for the beginCreateOrUpdateAtSubscriptionScope operation.\n */\nexport type DeploymentsBeginCreateOrUpdateAtSubscriptionScopeResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentExtended;\n    };\n};\n\n/**\n * Contains response data for the beginCreateOrUpdate operation.\n */\nexport type DeploymentsBeginCreateOrUpdateResponse = DeploymentExtended & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentExtended;\n    };\n};\n\n/**\n * Contains response data for the listAtManagementGroupScopeNext operation.\n */\nexport type DeploymentsListAtManagementGroupScopeNextResponse = DeploymentListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentListResult;\n    };\n};\n\n/**\n * Contains response data for the listAtSubscriptionScopeNext operation.\n */\nexport type DeploymentsListAtSubscriptionScopeNextResponse = DeploymentListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentListResult;\n    };\n};\n\n/**\n * Contains response data for the listByResourceGroupNext operation.\n */\nexport type DeploymentsListByResourceGroupNextResponse = DeploymentListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentListResult;\n    };\n};\n\n/**\n * Contains response data for the unregister operation.\n */\nexport type ProvidersUnregisterResponse = Provider & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Provider;\n    };\n};\n\n/**\n * Contains response data for the register operation.\n */\nexport type ProvidersRegisterResponse = Provider & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Provider;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type ProvidersListResponse = ProviderListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProviderListResult;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type ProvidersGetResponse = Provider & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Provider;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type ProvidersListNextResponse = ProviderListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ProviderListResult;\n    };\n};\n\n/**\n * Contains response data for the listByResourceGroup operation.\n */\nexport type ResourcesListByResourceGroupResponse = ResourceListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ResourceListResult;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type ResourcesListResponse = ResourceListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ResourceListResult;\n    };\n};\n\n/**\n * Contains response data for the checkExistence operation.\n */\nexport type ResourcesCheckExistenceResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: boolean;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: boolean;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type ResourcesCreateOrUpdateResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: GenericResource;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type ResourcesUpdateResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: GenericResource;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type ResourcesGetResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: GenericResource;\n    };\n};\n\n/**\n * Contains response data for the checkExistenceById operation.\n */\nexport type ResourcesCheckExistenceByIdResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: boolean;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: boolean;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdateById operation.\n */\nexport type ResourcesCreateOrUpdateByIdResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: GenericResource;\n    };\n};\n\n/**\n * Contains response data for the updateById operation.\n */\nexport type ResourcesUpdateByIdResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: GenericResource;\n    };\n};\n\n/**\n * Contains response data for the getById operation.\n */\nexport type ResourcesGetByIdResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: GenericResource;\n    };\n};\n\n/**\n * Contains response data for the beginCreateOrUpdate operation.\n */\nexport type ResourcesBeginCreateOrUpdateResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: GenericResource;\n    };\n};\n\n/**\n * Contains response data for the beginUpdate operation.\n */\nexport type ResourcesBeginUpdateResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: GenericResource;\n    };\n};\n\n/**\n * Contains response data for the beginCreateOrUpdateById operation.\n */\nexport type ResourcesBeginCreateOrUpdateByIdResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: GenericResource;\n    };\n};\n\n/**\n * Contains response data for the beginUpdateById operation.\n */\nexport type ResourcesBeginUpdateByIdResponse = GenericResource & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: GenericResource;\n    };\n};\n\n/**\n * Contains response data for the listByResourceGroupNext operation.\n */\nexport type ResourcesListByResourceGroupNextResponse = ResourceListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ResourceListResult;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type ResourcesListNextResponse = ResourceListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ResourceListResult;\n    };\n};\n\n/**\n * Contains response data for the checkExistence operation.\n */\nexport type ResourceGroupsCheckExistenceResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: boolean;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: boolean;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type ResourceGroupsCreateOrUpdateResponse = ResourceGroup & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ResourceGroup;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type ResourceGroupsGetResponse = ResourceGroup & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ResourceGroup;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type ResourceGroupsUpdateResponse = ResourceGroup & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ResourceGroup;\n    };\n};\n\n/**\n * Contains response data for the exportTemplate operation.\n */\nexport type ResourceGroupsExportTemplateResponse = ResourceGroupExportResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ResourceGroupExportResult;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type ResourceGroupsListResponse = ResourceGroupListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ResourceGroupListResult;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type ResourceGroupsListNextResponse = ResourceGroupListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ResourceGroupListResult;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdateValue operation.\n */\nexport type TagsCreateOrUpdateValueResponse = TagValue & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TagValue;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type TagsCreateOrUpdateResponse = TagDetails & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TagDetails;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type TagsListResponse = TagsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TagsListResult;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type TagsListNextResponse = TagsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TagsListResult;\n    };\n};\n\n/**\n * Contains response data for the getAtManagementGroupScope operation.\n */\nexport type DeploymentOperationsGetAtManagementGroupScopeResponse = DeploymentOperation & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentOperation;\n    };\n};\n\n/**\n * Contains response data for the listAtManagementGroupScope operation.\n */\nexport type DeploymentOperationsListAtManagementGroupScopeResponse = DeploymentOperationsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentOperationsListResult;\n    };\n};\n\n/**\n * Contains response data for the getAtSubscriptionScope operation.\n */\nexport type DeploymentOperationsGetAtSubscriptionScopeResponse = DeploymentOperation & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentOperation;\n    };\n};\n\n/**\n * Contains response data for the listAtSubscriptionScope operation.\n */\nexport type DeploymentOperationsListAtSubscriptionScopeResponse = DeploymentOperationsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentOperationsListResult;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type DeploymentOperationsGetResponse = DeploymentOperation & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentOperation;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type DeploymentOperationsListResponse = DeploymentOperationsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentOperationsListResult;\n    };\n};\n\n/**\n * Contains response data for the listAtManagementGroupScopeNext operation.\n */\nexport type DeploymentOperationsListAtManagementGroupScopeNextResponse = DeploymentOperationsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentOperationsListResult;\n    };\n};\n\n/**\n * Contains response data for the listAtSubscriptionScopeNext operation.\n */\nexport type DeploymentOperationsListAtSubscriptionScopeNextResponse = DeploymentOperationsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentOperationsListResult;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type DeploymentOperationsListNextResponse = DeploymentOperationsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DeploymentOperationsListResult;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CloudErrorMapper, BaseResourceMapper } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const CloudError = CloudErrorMapper;\nexport const BaseResource = BaseResourceMapper;\n\nexport const DeploymentExtendedFilter: msRest.CompositeMapper = {\n  serializedName: \"DeploymentExtendedFilter\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtendedFilter\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GenericResourceFilter: msRest.CompositeMapper = {\n  serializedName: \"GenericResourceFilter\",\n  type: {\n    name: \"Composite\",\n    className: \"GenericResourceFilter\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tagname: {\n        serializedName: \"tagname\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tagvalue: {\n        serializedName: \"tagvalue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroupFilter: msRest.CompositeMapper = {\n  serializedName: \"ResourceGroupFilter\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupFilter\",\n    modelProperties: {\n      tagName: {\n        serializedName: \"tagName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tagValue: {\n        serializedName: \"tagValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TemplateLink: msRest.CompositeMapper = {\n  serializedName: \"TemplateLink\",\n  type: {\n    name: \"Composite\",\n    className: \"TemplateLink\",\n    modelProperties: {\n      uri: {\n        required: true,\n        serializedName: \"uri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentVersion: {\n        serializedName: \"contentVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ParametersLink: msRest.CompositeMapper = {\n  serializedName: \"ParametersLink\",\n  type: {\n    name: \"Composite\",\n    className: \"ParametersLink\",\n    modelProperties: {\n      uri: {\n        required: true,\n        serializedName: \"uri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentVersion: {\n        serializedName: \"contentVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DebugSetting: msRest.CompositeMapper = {\n  serializedName: \"DebugSetting\",\n  type: {\n    name: \"Composite\",\n    className: \"DebugSetting\",\n    modelProperties: {\n      detailLevel: {\n        serializedName: \"detailLevel\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnErrorDeployment: msRest.CompositeMapper = {\n  serializedName: \"OnErrorDeployment\",\n  type: {\n    name: \"Composite\",\n    className: \"OnErrorDeployment\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"LastSuccessful\",\n            \"SpecificDeployment\"\n          ]\n        }\n      },\n      deploymentName: {\n        serializedName: \"deploymentName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentProperties: msRest.CompositeMapper = {\n  serializedName: \"DeploymentProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentProperties\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      templateLink: {\n        serializedName: \"templateLink\",\n        type: {\n          name: \"Composite\",\n          className: \"TemplateLink\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      parametersLink: {\n        serializedName: \"parametersLink\",\n        type: {\n          name: \"Composite\",\n          className: \"ParametersLink\"\n        }\n      },\n      mode: {\n        required: true,\n        serializedName: \"mode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Incremental\",\n            \"Complete\"\n          ]\n        }\n      },\n      debugSetting: {\n        serializedName: \"debugSetting\",\n        type: {\n          name: \"Composite\",\n          className: \"DebugSetting\"\n        }\n      },\n      onErrorDeployment: {\n        serializedName: \"onErrorDeployment\",\n        type: {\n          name: \"Composite\",\n          className: \"OnErrorDeployment\"\n        }\n      }\n    }\n  }\n};\n\nexport const Deployment: msRest.CompositeMapper = {\n  serializedName: \"Deployment\",\n  type: {\n    name: \"Composite\",\n    className: \"Deployment\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        required: true,\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentExportResult: msRest.CompositeMapper = {\n  serializedName: \"DeploymentExportResult\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExportResult\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Object\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceManagementErrorWithDetails: msRest.CompositeMapper = {\n  serializedName: \"ResourceManagementErrorWithDetails\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceManagementErrorWithDetails\",\n    modelProperties: {\n      code: {\n        readOnly: true,\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        readOnly: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        readOnly: true,\n        serializedName: \"target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        readOnly: true,\n        serializedName: \"details\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceManagementErrorWithDetails\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AliasPathType: msRest.CompositeMapper = {\n  serializedName: \"AliasPathType\",\n  type: {\n    name: \"Composite\",\n    className: \"AliasPathType\",\n    modelProperties: {\n      path: {\n        serializedName: \"path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      apiVersions: {\n        serializedName: \"apiVersions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AliasType: msRest.CompositeMapper = {\n  serializedName: \"AliasType\",\n  type: {\n    name: \"Composite\",\n    className: \"AliasType\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      paths: {\n        serializedName: \"paths\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AliasPathType\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ProviderResourceType: msRest.CompositeMapper = {\n  serializedName: \"ProviderResourceType\",\n  type: {\n    name: \"Composite\",\n    className: \"ProviderResourceType\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      locations: {\n        serializedName: \"locations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      aliases: {\n        serializedName: \"aliases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AliasType\"\n            }\n          }\n        }\n      },\n      apiVersions: {\n        serializedName: \"apiVersions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Provider: msRest.CompositeMapper = {\n  serializedName: \"Provider\",\n  type: {\n    name: \"Composite\",\n    className: \"Provider\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      namespace: {\n        serializedName: \"namespace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      registrationState: {\n        readOnly: true,\n        serializedName: \"registrationState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      registrationPolicy: {\n        readOnly: true,\n        serializedName: \"registrationPolicy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceTypes: {\n        readOnly: true,\n        serializedName: \"resourceTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderResourceType\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BasicDependency: msRest.CompositeMapper = {\n  serializedName: \"BasicDependency\",\n  type: {\n    name: \"Composite\",\n    className: \"BasicDependency\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Dependency: msRest.CompositeMapper = {\n  serializedName: \"Dependency\",\n  type: {\n    name: \"Composite\",\n    className: \"Dependency\",\n    modelProperties: {\n      dependsOn: {\n        serializedName: \"dependsOn\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BasicDependency\"\n            }\n          }\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OnErrorDeploymentExtended: msRest.CompositeMapper = {\n  serializedName: \"OnErrorDeploymentExtended\",\n  type: {\n    name: \"Composite\",\n    className: \"OnErrorDeploymentExtended\",\n    modelProperties: {\n      provisioningState: {\n        readOnly: true,\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"LastSuccessful\",\n            \"SpecificDeployment\"\n          ]\n        }\n      },\n      deploymentName: {\n        serializedName: \"deploymentName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentPropertiesExtended: msRest.CompositeMapper = {\n  serializedName: \"DeploymentPropertiesExtended\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentPropertiesExtended\",\n    modelProperties: {\n      provisioningState: {\n        readOnly: true,\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      correlationId: {\n        readOnly: true,\n        serializedName: \"correlationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timestamp: {\n        readOnly: true,\n        serializedName: \"timestamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      duration: {\n        readOnly: true,\n        serializedName: \"duration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      outputs: {\n        serializedName: \"outputs\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      providers: {\n        serializedName: \"providers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Provider\"\n            }\n          }\n        }\n      },\n      dependencies: {\n        serializedName: \"dependencies\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Dependency\"\n            }\n          }\n        }\n      },\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      templateLink: {\n        serializedName: \"templateLink\",\n        type: {\n          name: \"Composite\",\n          className: \"TemplateLink\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      parametersLink: {\n        serializedName: \"parametersLink\",\n        type: {\n          name: \"Composite\",\n          className: \"ParametersLink\"\n        }\n      },\n      mode: {\n        serializedName: \"mode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Incremental\",\n            \"Complete\"\n          ]\n        }\n      },\n      debugSetting: {\n        serializedName: \"debugSetting\",\n        type: {\n          name: \"Composite\",\n          className: \"DebugSetting\"\n        }\n      },\n      onErrorDeployment: {\n        serializedName: \"onErrorDeployment\",\n        type: {\n          name: \"Composite\",\n          className: \"OnErrorDeploymentExtended\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentValidateResult: msRest.CompositeMapper = {\n  serializedName: \"DeploymentValidateResult\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentValidateResult\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceManagementErrorWithDetails\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentPropertiesExtended\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentExtended: msRest.CompositeMapper = {\n  serializedName: \"DeploymentExtended\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentExtended\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentPropertiesExtended\"\n        }\n      }\n    }\n  }\n};\n\nexport const Plan: msRest.CompositeMapper = {\n  serializedName: \"Plan\",\n  type: {\n    name: \"Composite\",\n    className: \"Plan\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publisher: {\n        serializedName: \"publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      product: {\n        serializedName: \"product\",\n        type: {\n          name: \"String\"\n        }\n      },\n      promotionCode: {\n        serializedName: \"promotionCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Sku: msRest.CompositeMapper = {\n  serializedName: \"Sku\",\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        serializedName: \"size\",\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        serializedName: \"family\",\n        type: {\n          name: \"String\"\n        }\n      },\n      model: {\n        serializedName: \"model\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const IdentityUserAssignedIdentitiesValue: msRest.CompositeMapper = {\n  serializedName: \"Identity_userAssignedIdentitiesValue\",\n  type: {\n    name: \"Composite\",\n    className: \"IdentityUserAssignedIdentitiesValue\",\n    modelProperties: {\n      principalId: {\n        readOnly: true,\n        serializedName: \"principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        readOnly: true,\n        serializedName: \"clientId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Identity: msRest.CompositeMapper = {\n  serializedName: \"Identity\",\n  type: {\n    name: \"Composite\",\n    className: \"Identity\",\n    modelProperties: {\n      principalId: {\n        readOnly: true,\n        serializedName: \"principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        readOnly: true,\n        serializedName: \"tenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"SystemAssigned\",\n            \"UserAssigned\",\n            \"SystemAssigned, UserAssigned\",\n            \"None\"\n          ]\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"IdentityUserAssignedIdentitiesValue\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: msRest.CompositeMapper = {\n  serializedName: \"Resource\",\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GenericResource: msRest.CompositeMapper = {\n  serializedName: \"GenericResource\",\n  type: {\n    name: \"Composite\",\n    className: \"GenericResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      plan: {\n        serializedName: \"plan\",\n        type: {\n          name: \"Composite\",\n          className: \"Plan\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        constraints: {\n          Pattern: /^[-\\w\\._,\\(\\)]+$/\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroupProperties: msRest.CompositeMapper = {\n  serializedName: \"ResourceGroupProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupProperties\",\n    modelProperties: {\n      provisioningState: {\n        readOnly: true,\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroup: msRest.CompositeMapper = {\n  serializedName: \"ResourceGroup\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroup\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceGroupProperties\"\n        }\n      },\n      location: {\n        required: true,\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroupPatchable: msRest.CompositeMapper = {\n  serializedName: \"ResourceGroupPatchable\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupPatchable\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceGroupProperties\"\n        }\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourcesMoveInfo: msRest.CompositeMapper = {\n  serializedName: \"ResourcesMoveInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourcesMoveInfo\",\n    modelProperties: {\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      targetResourceGroup: {\n        serializedName: \"targetResourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExportTemplateRequest: msRest.CompositeMapper = {\n  serializedName: \"ExportTemplateRequest\",\n  type: {\n    name: \"Composite\",\n    className: \"ExportTemplateRequest\",\n    modelProperties: {\n      resources: {\n        serializedName: \"resources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TagCount: msRest.CompositeMapper = {\n  serializedName: \"TagCount\",\n  type: {\n    name: \"Composite\",\n    className: \"TagCount\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const TagValue: msRest.CompositeMapper = {\n  serializedName: \"TagValue\",\n  type: {\n    name: \"Composite\",\n    className: \"TagValue\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tagValue: {\n        serializedName: \"tagValue\",\n        type: {\n          name: \"String\"\n        }\n      },\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Composite\",\n          className: \"TagCount\"\n        }\n      }\n    }\n  }\n};\n\nexport const TagDetails: msRest.CompositeMapper = {\n  serializedName: \"TagDetails\",\n  type: {\n    name: \"Composite\",\n    className: \"TagDetails\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tagName: {\n        serializedName: \"tagName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Composite\",\n          className: \"TagCount\"\n        }\n      },\n      values: {\n        serializedName: \"values\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TagValue\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TargetResource: msRest.CompositeMapper = {\n  serializedName: \"TargetResource\",\n  type: {\n    name: \"Composite\",\n    className: \"TargetResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HttpMessage: msRest.CompositeMapper = {\n  serializedName: \"HttpMessage\",\n  type: {\n    name: \"Composite\",\n    className: \"HttpMessage\",\n    modelProperties: {\n      content: {\n        serializedName: \"content\",\n        type: {\n          name: \"Object\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentOperationProperties: msRest.CompositeMapper = {\n  serializedName: \"DeploymentOperationProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperationProperties\",\n    modelProperties: {\n      provisioningState: {\n        readOnly: true,\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timestamp: {\n        readOnly: true,\n        serializedName: \"timestamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      duration: {\n        readOnly: true,\n        serializedName: \"duration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceRequestId: {\n        readOnly: true,\n        serializedName: \"serviceRequestId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      statusCode: {\n        readOnly: true,\n        serializedName: \"statusCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      statusMessage: {\n        readOnly: true,\n        serializedName: \"statusMessage\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      targetResource: {\n        readOnly: true,\n        serializedName: \"targetResource\",\n        type: {\n          name: \"Composite\",\n          className: \"TargetResource\"\n        }\n      },\n      request: {\n        readOnly: true,\n        serializedName: \"request\",\n        type: {\n          name: \"Composite\",\n          className: \"HttpMessage\"\n        }\n      },\n      response: {\n        readOnly: true,\n        serializedName: \"response\",\n        type: {\n          name: \"Composite\",\n          className: \"HttpMessage\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentOperation: msRest.CompositeMapper = {\n  serializedName: \"DeploymentOperation\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperation\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operationId: {\n        readOnly: true,\n        serializedName: \"operationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentOperationProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceProviderOperationDisplayProperties: msRest.CompositeMapper = {\n  serializedName: \"ResourceProviderOperationDisplayProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceProviderOperationDisplayProperties\",\n    modelProperties: {\n      publisher: {\n        serializedName: \"publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubResource: msRest.CompositeMapper = {\n  serializedName: \"SubResource\",\n  type: {\n    name: \"Composite\",\n    className: \"SubResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroupExportResult: msRest.CompositeMapper = {\n  serializedName: \"ResourceGroupExportResult\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupExportResult\",\n    modelProperties: {\n      template: {\n        serializedName: \"template\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceManagementErrorWithDetails\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: msRest.CompositeMapper = {\n  serializedName: \"Operation_display\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: msRest.CompositeMapper = {\n  serializedName: \"Operation\",\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationListResult: msRest.CompositeMapper = {\n  serializedName: \"OperationListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentListResult: msRest.CompositeMapper = {\n  serializedName: \"DeploymentListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentExtended\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProviderListResult: msRest.CompositeMapper = {\n  serializedName: \"ProviderListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"ProviderListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Provider\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceListResult: msRest.CompositeMapper = {\n  serializedName: \"ResourceListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GenericResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceGroupListResult: msRest.CompositeMapper = {\n  serializedName: \"ResourceGroupListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"ResourceGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TagsListResult: msRest.CompositeMapper = {\n  serializedName: \"TagsListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"TagsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TagDetails\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentOperationsListResult: msRest.CompositeMapper = {\n  serializedName: \"DeploymentOperationsListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentOperationsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentOperation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  CloudError,\n  Operation,\n  OperationDisplay,\n  OperationListResult\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const acceptLanguage: msRest.OperationParameter = {\n  parameterPath: \"acceptLanguage\",\n  mapper: {\n    serializedName: \"accept-language\",\n    defaultValue: 'en-US',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const apiVersion: msRest.OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    required: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const deploymentName: msRest.OperationURLParameter = {\n  parameterPath: \"deploymentName\",\n  mapper: {\n    required: true,\n    serializedName: \"deploymentName\",\n    constraints: {\n      MaxLength: 64,\n      MinLength: 1,\n      Pattern: /^[-\\w\\._\\(\\)]+$/\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const expand: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"expand\"\n  ],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const filter: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"filter\"\n  ],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const groupId: msRest.OperationURLParameter = {\n  parameterPath: \"groupId\",\n  mapper: {\n    required: true,\n    serializedName: \"groupId\",\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const nextPageLink: msRest.OperationURLParameter = {\n  parameterPath: \"nextPageLink\",\n  mapper: {\n    required: true,\n    serializedName: \"nextLink\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const operationId: msRest.OperationURLParameter = {\n  parameterPath: \"operationId\",\n  mapper: {\n    required: true,\n    serializedName: \"operationId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const parentResourcePath: msRest.OperationURLParameter = {\n  parameterPath: \"parentResourcePath\",\n  mapper: {\n    required: true,\n    serializedName: \"parentResourcePath\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const resourceGroupName: msRest.OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceGroupName\",\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1,\n      Pattern: /^[-\\w\\._\\(\\)]+$/\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const resourceId: msRest.OperationURLParameter = {\n  parameterPath: \"resourceId\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceId\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const resourceName: msRest.OperationURLParameter = {\n  parameterPath: \"resourceName\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const resourceProviderNamespace: msRest.OperationURLParameter = {\n  parameterPath: \"resourceProviderNamespace\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceProviderNamespace\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const resourceType: msRest.OperationURLParameter = {\n  parameterPath: \"resourceType\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceType\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const sourceResourceGroupName: msRest.OperationURLParameter = {\n  parameterPath: \"sourceResourceGroupName\",\n  mapper: {\n    required: true,\n    serializedName: \"sourceResourceGroupName\",\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1,\n      Pattern: /^[-\\w\\._\\(\\)]+$/\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const subscriptionId: msRest.OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    required: true,\n    serializedName: \"subscriptionId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const tagName: msRest.OperationURLParameter = {\n  parameterPath: \"tagName\",\n  mapper: {\n    required: true,\n    serializedName: \"tagName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const tagValue: msRest.OperationURLParameter = {\n  parameterPath: \"tagValue\",\n  mapper: {\n    required: true,\n    serializedName: \"tagValue\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const top: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"top\"\n  ],\n  mapper: {\n    serializedName: \"$top\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/operationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClientContext } from \"../resourceManagementClientContext\";\n\n/** Class representing a Operations. */\nexport class Operations {\n  private readonly client: ResourceManagementClientContext;\n\n  /**\n   * Create a Operations.\n   * @param {ResourceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ResourceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available Microsoft.Resources REST API operations.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.OperationsListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.OperationsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.OperationListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationListResult>): void;\n  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationListResult>, callback?: msRest.ServiceCallback<Models.OperationListResult>): Promise<Models.OperationsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.OperationsListResponse>;\n  }\n\n  /**\n   * Lists all of the available Microsoft.Resources REST API operations.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.OperationsListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.OperationsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.OperationListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationListResult>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationListResult>, callback?: msRest.ServiceCallback<Models.OperationListResult>): Promise<Models.OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.OperationsListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.Resources/operations\",\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  AliasPathType,\n  AliasType,\n  BaseResource,\n  BasicDependency,\n  CloudError,\n  DebugSetting,\n  Dependency,\n  Deployment,\n  DeploymentExportResult,\n  DeploymentExtended,\n  DeploymentListResult,\n  DeploymentProperties,\n  DeploymentPropertiesExtended,\n  DeploymentValidateResult,\n  GenericResource,\n  Identity,\n  IdentityUserAssignedIdentitiesValue,\n  OnErrorDeployment,\n  OnErrorDeploymentExtended,\n  ParametersLink,\n  Plan,\n  Provider,\n  ProviderResourceType,\n  Resource,\n  ResourceGroup,\n  ResourceGroupProperties,\n  ResourceManagementErrorWithDetails,\n  Sku,\n  SubResource,\n  TagCount,\n  TagValue,\n  TemplateLink\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/deploymentsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClientContext } from \"../resourceManagementClientContext\";\n\n/** Class representing a Deployments. */\nexport class Deployments {\n  private readonly client: ResourceManagementClientContext;\n\n  /**\n   * Create a Deployments.\n   * @param {ResourceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ResourceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template\n   * deployment removes the associated deployment operations. This is an asynchronous operation that\n   * returns a status of 202 until the template deployment is successfully deleted. The Location\n   * response header contains the URI that is used to obtain the status of the process. While the\n   * process is running, a call to the URI in the Location header returns a status of 202. When the\n   * process finishes, the URI in the Location header returns a status of 204 on success. If the\n   * asynchronous request failed, the URI in the Location header returns an error-level status code.\n   * @summary Deletes a deployment from the deployment history.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteAtManagementGroupScope(groupId: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginDeleteAtManagementGroupScope(groupId,deploymentName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsCheckExistenceAtManagementGroupScopeResponse>\n   */\n  checkExistenceAtManagementGroupScope(groupId: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsCheckExistenceAtManagementGroupScopeResponse>;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  checkExistenceAtManagementGroupScope(groupId: string, deploymentName: string, callback: msRest.ServiceCallback<boolean>): void;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkExistenceAtManagementGroupScope(groupId: string, deploymentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<boolean>): void;\n  checkExistenceAtManagementGroupScope(groupId: string, deploymentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<boolean>, callback?: msRest.ServiceCallback<boolean>): Promise<Models.DeploymentsCheckExistenceAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupId,\n        deploymentName,\n        options\n      },\n      checkExistenceAtManagementGroupScopeOperationSpec,\n      callback) as Promise<Models.DeploymentsCheckExistenceAtManagementGroupScopeResponse>;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @summary Deploys resources at management group scope.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsCreateOrUpdateAtManagementGroupScopeResponse>\n   */\n  createOrUpdateAtManagementGroupScope(groupId: string, deploymentName: string, parameters: Models.Deployment, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsCreateOrUpdateAtManagementGroupScopeResponse> {\n    return this.beginCreateOrUpdateAtManagementGroupScope(groupId,deploymentName,parameters,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.DeploymentsCreateOrUpdateAtManagementGroupScopeResponse>;\n  }\n\n  /**\n   * Gets a deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsGetAtManagementGroupScopeResponse>\n   */\n  getAtManagementGroupScope(groupId: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsGetAtManagementGroupScopeResponse>;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  getAtManagementGroupScope(groupId: string, deploymentName: string, callback: msRest.ServiceCallback<Models.DeploymentExtended>): void;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAtManagementGroupScope(groupId: string, deploymentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentExtended>): void;\n  getAtManagementGroupScope(groupId: string, deploymentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentExtended>, callback?: msRest.ServiceCallback<Models.DeploymentExtended>): Promise<Models.DeploymentsGetAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupId,\n        deploymentName,\n        options\n      },\n      getAtManagementGroupScopeOperationSpec,\n      callback) as Promise<Models.DeploymentsGetAtManagementGroupScopeResponse>;\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template\n   * deployment stops the currently running template deployment and leaves the resources partially\n   * deployed.\n   * @summary Cancels a currently running template deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  cancelAtManagementGroupScope(groupId: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  cancelAtManagementGroupScope(groupId: string, deploymentName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  cancelAtManagementGroupScope(groupId: string, deploymentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  cancelAtManagementGroupScope(groupId: string, deploymentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupId,\n        deploymentName,\n        options\n      },\n      cancelAtManagementGroupScopeOperationSpec,\n      callback);\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsValidateAtManagementGroupScopeResponse>\n   */\n  validateAtManagementGroupScope(groupId: string, deploymentName: string, parameters: Models.Deployment, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsValidateAtManagementGroupScopeResponse>;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param callback The callback\n   */\n  validateAtManagementGroupScope(groupId: string, deploymentName: string, parameters: Models.Deployment, callback: msRest.ServiceCallback<Models.DeploymentValidateResult>): void;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  validateAtManagementGroupScope(groupId: string, deploymentName: string, parameters: Models.Deployment, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentValidateResult>): void;\n  validateAtManagementGroupScope(groupId: string, deploymentName: string, parameters: Models.Deployment, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentValidateResult>, callback?: msRest.ServiceCallback<Models.DeploymentValidateResult>): Promise<Models.DeploymentsValidateAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupId,\n        deploymentName,\n        parameters,\n        options\n      },\n      validateAtManagementGroupScopeOperationSpec,\n      callback) as Promise<Models.DeploymentsValidateAtManagementGroupScopeResponse>;\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsExportTemplateAtManagementGroupScopeResponse>\n   */\n  exportTemplateAtManagementGroupScope(groupId: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsExportTemplateAtManagementGroupScopeResponse>;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  exportTemplateAtManagementGroupScope(groupId: string, deploymentName: string, callback: msRest.ServiceCallback<Models.DeploymentExportResult>): void;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  exportTemplateAtManagementGroupScope(groupId: string, deploymentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentExportResult>): void;\n  exportTemplateAtManagementGroupScope(groupId: string, deploymentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentExportResult>, callback?: msRest.ServiceCallback<Models.DeploymentExportResult>): Promise<Models.DeploymentsExportTemplateAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupId,\n        deploymentName,\n        options\n      },\n      exportTemplateAtManagementGroupScopeOperationSpec,\n      callback) as Promise<Models.DeploymentsExportTemplateAtManagementGroupScopeResponse>;\n  }\n\n  /**\n   * Get all the deployments for a management group.\n   * @param groupId The management group ID.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsListAtManagementGroupScopeResponse>\n   */\n  listAtManagementGroupScope(groupId: string, options?: Models.DeploymentsListAtManagementGroupScopeOptionalParams): Promise<Models.DeploymentsListAtManagementGroupScopeResponse>;\n  /**\n   * @param groupId The management group ID.\n   * @param callback The callback\n   */\n  listAtManagementGroupScope(groupId: string, callback: msRest.ServiceCallback<Models.DeploymentListResult>): void;\n  /**\n   * @param groupId The management group ID.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtManagementGroupScope(groupId: string, options: Models.DeploymentsListAtManagementGroupScopeOptionalParams, callback: msRest.ServiceCallback<Models.DeploymentListResult>): void;\n  listAtManagementGroupScope(groupId: string, options?: Models.DeploymentsListAtManagementGroupScopeOptionalParams | msRest.ServiceCallback<Models.DeploymentListResult>, callback?: msRest.ServiceCallback<Models.DeploymentListResult>): Promise<Models.DeploymentsListAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupId,\n        options\n      },\n      listAtManagementGroupScopeOperationSpec,\n      callback) as Promise<Models.DeploymentsListAtManagementGroupScopeResponse>;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template\n   * deployment removes the associated deployment operations. This is an asynchronous operation that\n   * returns a status of 202 until the template deployment is successfully deleted. The Location\n   * response header contains the URI that is used to obtain the status of the process. While the\n   * process is running, a call to the URI in the Location header returns a status of 202. When the\n   * process finishes, the URI in the Location header returns a status of 204 on success. If the\n   * asynchronous request failed, the URI in the Location header returns an error-level status code.\n   * @summary Deletes a deployment from the deployment history.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteAtSubscriptionScope(deploymentName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginDeleteAtSubscriptionScope(deploymentName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsCheckExistenceAtSubscriptionScopeResponse>\n   */\n  checkExistenceAtSubscriptionScope(deploymentName: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsCheckExistenceAtSubscriptionScopeResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  checkExistenceAtSubscriptionScope(deploymentName: string, callback: msRest.ServiceCallback<boolean>): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkExistenceAtSubscriptionScope(deploymentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<boolean>): void;\n  checkExistenceAtSubscriptionScope(deploymentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<boolean>, callback?: msRest.ServiceCallback<boolean>): Promise<Models.DeploymentsCheckExistenceAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        options\n      },\n      checkExistenceAtSubscriptionScopeOperationSpec,\n      callback) as Promise<Models.DeploymentsCheckExistenceAtSubscriptionScopeResponse>;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @summary Deploys resources at subscription scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsCreateOrUpdateAtSubscriptionScopeResponse>\n   */\n  createOrUpdateAtSubscriptionScope(deploymentName: string, parameters: Models.Deployment, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsCreateOrUpdateAtSubscriptionScopeResponse> {\n    return this.beginCreateOrUpdateAtSubscriptionScope(deploymentName,parameters,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.DeploymentsCreateOrUpdateAtSubscriptionScopeResponse>;\n  }\n\n  /**\n   * Gets a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsGetAtSubscriptionScopeResponse>\n   */\n  getAtSubscriptionScope(deploymentName: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsGetAtSubscriptionScopeResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  getAtSubscriptionScope(deploymentName: string, callback: msRest.ServiceCallback<Models.DeploymentExtended>): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAtSubscriptionScope(deploymentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentExtended>): void;\n  getAtSubscriptionScope(deploymentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentExtended>, callback?: msRest.ServiceCallback<Models.DeploymentExtended>): Promise<Models.DeploymentsGetAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        options\n      },\n      getAtSubscriptionScopeOperationSpec,\n      callback) as Promise<Models.DeploymentsGetAtSubscriptionScopeResponse>;\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template\n   * deployment stops the currently running template deployment and leaves the resources partially\n   * deployed.\n   * @summary Cancels a currently running template deployment.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  cancelAtSubscriptionScope(deploymentName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  cancelAtSubscriptionScope(deploymentName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  cancelAtSubscriptionScope(deploymentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  cancelAtSubscriptionScope(deploymentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        options\n      },\n      cancelAtSubscriptionScopeOperationSpec,\n      callback);\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsValidateAtSubscriptionScopeResponse>\n   */\n  validateAtSubscriptionScope(deploymentName: string, parameters: Models.Deployment, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsValidateAtSubscriptionScopeResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param callback The callback\n   */\n  validateAtSubscriptionScope(deploymentName: string, parameters: Models.Deployment, callback: msRest.ServiceCallback<Models.DeploymentValidateResult>): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  validateAtSubscriptionScope(deploymentName: string, parameters: Models.Deployment, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentValidateResult>): void;\n  validateAtSubscriptionScope(deploymentName: string, parameters: Models.Deployment, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentValidateResult>, callback?: msRest.ServiceCallback<Models.DeploymentValidateResult>): Promise<Models.DeploymentsValidateAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        parameters,\n        options\n      },\n      validateAtSubscriptionScopeOperationSpec,\n      callback) as Promise<Models.DeploymentsValidateAtSubscriptionScopeResponse>;\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsExportTemplateAtSubscriptionScopeResponse>\n   */\n  exportTemplateAtSubscriptionScope(deploymentName: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsExportTemplateAtSubscriptionScopeResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  exportTemplateAtSubscriptionScope(deploymentName: string, callback: msRest.ServiceCallback<Models.DeploymentExportResult>): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  exportTemplateAtSubscriptionScope(deploymentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentExportResult>): void;\n  exportTemplateAtSubscriptionScope(deploymentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentExportResult>, callback?: msRest.ServiceCallback<Models.DeploymentExportResult>): Promise<Models.DeploymentsExportTemplateAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        options\n      },\n      exportTemplateAtSubscriptionScopeOperationSpec,\n      callback) as Promise<Models.DeploymentsExportTemplateAtSubscriptionScopeResponse>;\n  }\n\n  /**\n   * Get all the deployments for a subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsListAtSubscriptionScopeResponse>\n   */\n  listAtSubscriptionScope(options?: Models.DeploymentsListAtSubscriptionScopeOptionalParams): Promise<Models.DeploymentsListAtSubscriptionScopeResponse>;\n  /**\n   * @param callback The callback\n   */\n  listAtSubscriptionScope(callback: msRest.ServiceCallback<Models.DeploymentListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtSubscriptionScope(options: Models.DeploymentsListAtSubscriptionScopeOptionalParams, callback: msRest.ServiceCallback<Models.DeploymentListResult>): void;\n  listAtSubscriptionScope(options?: Models.DeploymentsListAtSubscriptionScopeOptionalParams | msRest.ServiceCallback<Models.DeploymentListResult>, callback?: msRest.ServiceCallback<Models.DeploymentListResult>): Promise<Models.DeploymentsListAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listAtSubscriptionScopeOperationSpec,\n      callback) as Promise<Models.DeploymentsListAtSubscriptionScopeResponse>;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template\n   * deployment removes the associated deployment operations. Deleting a template deployment does not\n   * affect the state of the resource group. This is an asynchronous operation that returns a status\n   * of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running,\n   * a call to the URI in the Location header returns a status of 202. When the process finishes, the\n   * URI in the Location header returns a status of 204 on success. If the asynchronous request\n   * failed, the URI in the Location header returns an error-level status code.\n   * @summary Deletes a deployment from the deployment history.\n   * @param resourceGroupName The name of the resource group with the deployment to delete. The name\n   * is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(resourceGroupName: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginDeleteMethod(resourceGroupName,deploymentName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * Checks whether the deployment exists.\n   * @param resourceGroupName The name of the resource group with the deployment to check. The name\n   * is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsCheckExistenceResponse>\n   */\n  checkExistence(resourceGroupName: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsCheckExistenceResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group with the deployment to check. The name\n   * is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  checkExistence(resourceGroupName: string, deploymentName: string, callback: msRest.ServiceCallback<boolean>): void;\n  /**\n   * @param resourceGroupName The name of the resource group with the deployment to check. The name\n   * is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkExistence(resourceGroupName: string, deploymentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<boolean>): void;\n  checkExistence(resourceGroupName: string, deploymentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<boolean>, callback?: msRest.ServiceCallback<boolean>): Promise<Models.DeploymentsCheckExistenceResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        options\n      },\n      checkExistenceOperationSpec,\n      callback) as Promise<Models.DeploymentsCheckExistenceResponse>;\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @summary Deploys resources to a resource group.\n   * @param resourceGroupName The name of the resource group to deploy the resources to. The name is\n   * case insensitive. The resource group must already exist.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsCreateOrUpdateResponse>\n   */\n  createOrUpdate(resourceGroupName: string, deploymentName: string, parameters: Models.Deployment, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsCreateOrUpdateResponse> {\n    return this.beginCreateOrUpdate(resourceGroupName,deploymentName,parameters,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.DeploymentsCreateOrUpdateResponse>;\n  }\n\n  /**\n   * Gets a deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsGetResponse>\n   */\n  get(resourceGroupName: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsGetResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, deploymentName: string, callback: msRest.ServiceCallback<Models.DeploymentExtended>): void;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, deploymentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentExtended>): void;\n  get(resourceGroupName: string, deploymentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentExtended>, callback?: msRest.ServiceCallback<Models.DeploymentExtended>): Promise<Models.DeploymentsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.DeploymentsGetResponse>;\n  }\n\n  /**\n   * You can cancel a deployment only if the provisioningState is Accepted or Running. After the\n   * deployment is canceled, the provisioningState is set to Canceled. Canceling a template\n   * deployment stops the currently running template deployment and leaves the resource group\n   * partially deployed.\n   * @summary Cancels a currently running template deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  cancel(resourceGroupName: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  cancel(resourceGroupName: string, deploymentName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  cancel(resourceGroupName: string, deploymentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  cancel(resourceGroupName: string, deploymentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        options\n      },\n      cancelOperationSpec,\n      callback);\n  }\n\n  /**\n   * Validates whether the specified template is syntactically correct and will be accepted by Azure\n   * Resource Manager..\n   * @param resourceGroupName The name of the resource group the template will be deployed to. The\n   * name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsValidateResponse>\n   */\n  validate(resourceGroupName: string, deploymentName: string, parameters: Models.Deployment, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsValidateResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group the template will be deployed to. The\n   * name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param callback The callback\n   */\n  validate(resourceGroupName: string, deploymentName: string, parameters: Models.Deployment, callback: msRest.ServiceCallback<Models.DeploymentValidateResult>): void;\n  /**\n   * @param resourceGroupName The name of the resource group the template will be deployed to. The\n   * name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Parameters to validate.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  validate(resourceGroupName: string, deploymentName: string, parameters: Models.Deployment, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentValidateResult>): void;\n  validate(resourceGroupName: string, deploymentName: string, parameters: Models.Deployment, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentValidateResult>, callback?: msRest.ServiceCallback<Models.DeploymentValidateResult>): Promise<Models.DeploymentsValidateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        parameters,\n        options\n      },\n      validateOperationSpec,\n      callback) as Promise<Models.DeploymentsValidateResponse>;\n  }\n\n  /**\n   * Exports the template used for specified deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsExportTemplateResponse>\n   */\n  exportTemplate(resourceGroupName: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsExportTemplateResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  exportTemplate(resourceGroupName: string, deploymentName: string, callback: msRest.ServiceCallback<Models.DeploymentExportResult>): void;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  exportTemplate(resourceGroupName: string, deploymentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentExportResult>): void;\n  exportTemplate(resourceGroupName: string, deploymentName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentExportResult>, callback?: msRest.ServiceCallback<Models.DeploymentExportResult>): Promise<Models.DeploymentsExportTemplateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        options\n      },\n      exportTemplateOperationSpec,\n      callback) as Promise<Models.DeploymentsExportTemplateResponse>;\n  }\n\n  /**\n   * Get all the deployments for a resource group.\n   * @param resourceGroupName The name of the resource group with the deployments to get. The name is\n   * case insensitive.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsListByResourceGroupResponse>\n   */\n  listByResourceGroup(resourceGroupName: string, options?: Models.DeploymentsListByResourceGroupOptionalParams): Promise<Models.DeploymentsListByResourceGroupResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group with the deployments to get. The name is\n   * case insensitive.\n   * @param callback The callback\n   */\n  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.DeploymentListResult>): void;\n  /**\n   * @param resourceGroupName The name of the resource group with the deployments to get. The name is\n   * case insensitive.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroup(resourceGroupName: string, options: Models.DeploymentsListByResourceGroupOptionalParams, callback: msRest.ServiceCallback<Models.DeploymentListResult>): void;\n  listByResourceGroup(resourceGroupName: string, options?: Models.DeploymentsListByResourceGroupOptionalParams | msRest.ServiceCallback<Models.DeploymentListResult>, callback?: msRest.ServiceCallback<Models.DeploymentListResult>): Promise<Models.DeploymentsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        options\n      },\n      listByResourceGroupOperationSpec,\n      callback) as Promise<Models.DeploymentsListByResourceGroupResponse>;\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template\n   * deployment removes the associated deployment operations. This is an asynchronous operation that\n   * returns a status of 202 until the template deployment is successfully deleted. The Location\n   * response header contains the URI that is used to obtain the status of the process. While the\n   * process is running, a call to the URI in the Location header returns a status of 202. When the\n   * process finishes, the URI in the Location header returns a status of 204 on success. If the\n   * asynchronous request failed, the URI in the Location header returns an error-level status code.\n   * @summary Deletes a deployment from the deployment history.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteAtManagementGroupScope(groupId: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        groupId,\n        deploymentName,\n        options\n      },\n      beginDeleteAtManagementGroupScopeOperationSpec,\n      options);\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @summary Deploys resources at management group scope.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreateOrUpdateAtManagementGroupScope(groupId: string, deploymentName: string, parameters: Models.Deployment, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        groupId,\n        deploymentName,\n        parameters,\n        options\n      },\n      beginCreateOrUpdateAtManagementGroupScopeOperationSpec,\n      options);\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template\n   * deployment removes the associated deployment operations. This is an asynchronous operation that\n   * returns a status of 202 until the template deployment is successfully deleted. The Location\n   * response header contains the URI that is used to obtain the status of the process. While the\n   * process is running, a call to the URI in the Location header returns a status of 202. When the\n   * process finishes, the URI in the Location header returns a status of 204 on success. If the\n   * asynchronous request failed, the URI in the Location header returns an error-level status code.\n   * @summary Deletes a deployment from the deployment history.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteAtSubscriptionScope(deploymentName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        deploymentName,\n        options\n      },\n      beginDeleteAtSubscriptionScopeOperationSpec,\n      options);\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @summary Deploys resources at subscription scope.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreateOrUpdateAtSubscriptionScope(deploymentName: string, parameters: Models.Deployment, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        deploymentName,\n        parameters,\n        options\n      },\n      beginCreateOrUpdateAtSubscriptionScopeOperationSpec,\n      options);\n  }\n\n  /**\n   * A template deployment that is currently running cannot be deleted. Deleting a template\n   * deployment removes the associated deployment operations. Deleting a template deployment does not\n   * affect the state of the resource group. This is an asynchronous operation that returns a status\n   * of 202 until the template deployment is successfully deleted. The Location response header\n   * contains the URI that is used to obtain the status of the process. While the process is running,\n   * a call to the URI in the Location header returns a status of 202. When the process finishes, the\n   * URI in the Location header returns a status of 204 on success. If the asynchronous request\n   * failed, the URI in the Location header returns an error-level status code.\n   * @summary Deletes a deployment from the deployment history.\n   * @param resourceGroupName The name of the resource group with the deployment to delete. The name\n   * is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteMethod(resourceGroupName: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        options\n      },\n      beginDeleteMethodOperationSpec,\n      options);\n  }\n\n  /**\n   * You can provide the template and parameters directly in the request or link to JSON files.\n   * @summary Deploys resources to a resource group.\n   * @param resourceGroupName The name of the resource group to deploy the resources to. The name is\n   * case insensitive. The resource group must already exist.\n   * @param deploymentName The name of the deployment.\n   * @param parameters Additional parameters supplied to the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreateOrUpdate(resourceGroupName: string, deploymentName: string, parameters: Models.Deployment, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        parameters,\n        options\n      },\n      beginCreateOrUpdateOperationSpec,\n      options);\n  }\n\n  /**\n   * Get all the deployments for a management group.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsListAtManagementGroupScopeNextResponse>\n   */\n  listAtManagementGroupScopeNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsListAtManagementGroupScopeNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listAtManagementGroupScopeNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DeploymentListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtManagementGroupScopeNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentListResult>): void;\n  listAtManagementGroupScopeNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentListResult>, callback?: msRest.ServiceCallback<Models.DeploymentListResult>): Promise<Models.DeploymentsListAtManagementGroupScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listAtManagementGroupScopeNextOperationSpec,\n      callback) as Promise<Models.DeploymentsListAtManagementGroupScopeNextResponse>;\n  }\n\n  /**\n   * Get all the deployments for a subscription.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsListAtSubscriptionScopeNextResponse>\n   */\n  listAtSubscriptionScopeNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsListAtSubscriptionScopeNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listAtSubscriptionScopeNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DeploymentListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtSubscriptionScopeNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentListResult>): void;\n  listAtSubscriptionScopeNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentListResult>, callback?: msRest.ServiceCallback<Models.DeploymentListResult>): Promise<Models.DeploymentsListAtSubscriptionScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listAtSubscriptionScopeNextOperationSpec,\n      callback) as Promise<Models.DeploymentsListAtSubscriptionScopeNextResponse>;\n  }\n\n  /**\n   * Get all the deployments for a resource group.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentsListByResourceGroupNextResponse>\n   */\n  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsListByResourceGroupNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DeploymentListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentListResult>): void;\n  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentListResult>, callback?: msRest.ServiceCallback<Models.DeploymentListResult>): Promise<Models.DeploymentsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listByResourceGroupNextOperationSpec,\n      callback) as Promise<Models.DeploymentsListByResourceGroupNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst checkExistenceAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [\n    Parameters.groupId,\n    Parameters.deploymentName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [\n    Parameters.groupId,\n    Parameters.deploymentName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst cancelAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  urlParameters: [\n    Parameters.groupId,\n    Parameters.deploymentName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst validateAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  urlParameters: [\n    Parameters.groupId,\n    Parameters.deploymentName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.Deployment,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    400: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst exportTemplateAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n  urlParameters: [\n    Parameters.groupId,\n    Parameters.deploymentName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExportResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/\",\n  urlParameters: [\n    Parameters.groupId\n  ],\n  queryParameters: [\n    Parameters.filter,\n    Parameters.top,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst checkExistenceAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst cancelAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  urlParameters: [\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst validateAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  urlParameters: [\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.Deployment,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    400: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst exportTemplateAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n  urlParameters: [\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExportResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.filter,\n    Parameters.top,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst checkExistenceOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst cancelOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst validateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/validate\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.Deployment,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    400: {\n      bodyMapper: Mappers.DeploymentValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst exportTemplateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExportResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.filter,\n    Parameters.top,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginDeleteAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [\n    Parameters.groupId,\n    Parameters.deploymentName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginCreateOrUpdateAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [\n    Parameters.groupId,\n    Parameters.deploymentName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.Deployment,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginDeleteAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginCreateOrUpdateAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.Deployment,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginDeleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.Deployment,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentExtended\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtManagementGroupScopeNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtSubscriptionScopeNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  AliasPathType,\n  AliasType,\n  CloudError,\n  Provider,\n  ProviderListResult,\n  ProviderResourceType\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/providersMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClientContext } from \"../resourceManagementClientContext\";\n\n/** Class representing a Providers. */\nexport class Providers {\n  private readonly client: ResourceManagementClientContext;\n\n  /**\n   * Create a Providers.\n   * @param {ResourceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ResourceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Unregisters a subscription from a resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider to unregister.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProvidersUnregisterResponse>\n   */\n  unregister(resourceProviderNamespace: string, options?: msRest.RequestOptionsBase): Promise<Models.ProvidersUnregisterResponse>;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider to unregister.\n   * @param callback The callback\n   */\n  unregister(resourceProviderNamespace: string, callback: msRest.ServiceCallback<Models.Provider>): void;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider to unregister.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  unregister(resourceProviderNamespace: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Provider>): void;\n  unregister(resourceProviderNamespace: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Provider>, callback?: msRest.ServiceCallback<Models.Provider>): Promise<Models.ProvidersUnregisterResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceProviderNamespace,\n        options\n      },\n      unregisterOperationSpec,\n      callback) as Promise<Models.ProvidersUnregisterResponse>;\n  }\n\n  /**\n   * Registers a subscription with a resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider to register.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProvidersRegisterResponse>\n   */\n  register(resourceProviderNamespace: string, options?: msRest.RequestOptionsBase): Promise<Models.ProvidersRegisterResponse>;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider to register.\n   * @param callback The callback\n   */\n  register(resourceProviderNamespace: string, callback: msRest.ServiceCallback<Models.Provider>): void;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider to register.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  register(resourceProviderNamespace: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Provider>): void;\n  register(resourceProviderNamespace: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Provider>, callback?: msRest.ServiceCallback<Models.Provider>): Promise<Models.ProvidersRegisterResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceProviderNamespace,\n        options\n      },\n      registerOperationSpec,\n      callback) as Promise<Models.ProvidersRegisterResponse>;\n  }\n\n  /**\n   * Gets all resource providers for a subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProvidersListResponse>\n   */\n  list(options?: Models.ProvidersListOptionalParams): Promise<Models.ProvidersListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.ProviderListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: Models.ProvidersListOptionalParams, callback: msRest.ServiceCallback<Models.ProviderListResult>): void;\n  list(options?: Models.ProvidersListOptionalParams | msRest.ServiceCallback<Models.ProviderListResult>, callback?: msRest.ServiceCallback<Models.ProviderListResult>): Promise<Models.ProvidersListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.ProvidersListResponse>;\n  }\n\n  /**\n   * Gets the specified resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProvidersGetResponse>\n   */\n  get(resourceProviderNamespace: string, options?: Models.ProvidersGetOptionalParams): Promise<Models.ProvidersGetResponse>;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param callback The callback\n   */\n  get(resourceProviderNamespace: string, callback: msRest.ServiceCallback<Models.Provider>): void;\n  /**\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceProviderNamespace: string, options: Models.ProvidersGetOptionalParams, callback: msRest.ServiceCallback<Models.Provider>): void;\n  get(resourceProviderNamespace: string, options?: Models.ProvidersGetOptionalParams | msRest.ServiceCallback<Models.Provider>, callback?: msRest.ServiceCallback<Models.Provider>): Promise<Models.ProvidersGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceProviderNamespace,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.ProvidersGetResponse>;\n  }\n\n  /**\n   * Gets all resource providers for a subscription.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ProvidersListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ProvidersListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ProviderListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ProviderListResult>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ProviderListResult>, callback?: msRest.ServiceCallback<Models.ProviderListResult>): Promise<Models.ProvidersListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.ProvidersListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst unregisterOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/unregister\",\n  urlParameters: [\n    Parameters.resourceProviderNamespace,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Provider\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst registerOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/register\",\n  urlParameters: [\n    Parameters.resourceProviderNamespace,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Provider\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.top,\n    Parameters.expand,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}\",\n  urlParameters: [\n    Parameters.resourceProviderNamespace,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.expand,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Provider\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  AliasPathType,\n  AliasType,\n  BaseResource,\n  BasicDependency,\n  CloudError,\n  DebugSetting,\n  Dependency,\n  DeploymentExtended,\n  DeploymentPropertiesExtended,\n  GenericResource,\n  Identity,\n  IdentityUserAssignedIdentitiesValue,\n  OnErrorDeploymentExtended,\n  ParametersLink,\n  Plan,\n  Provider,\n  ProviderResourceType,\n  Resource,\n  ResourceGroup,\n  ResourceGroupProperties,\n  ResourceListResult,\n  ResourcesMoveInfo,\n  Sku,\n  SubResource,\n  TagCount,\n  TagValue,\n  TemplateLink\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/resourcesMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClientContext } from \"../resourceManagementClientContext\";\n\n/** Class representing a Resources. */\nexport class Resources {\n  private readonly client: ResourceManagementClientContext;\n\n  /**\n   * Create a Resources.\n   * @param {ResourceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ResourceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Get all the resources for a resource group.\n   * @param resourceGroupName The resource group with the resources to get.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesListByResourceGroupResponse>\n   */\n  listByResourceGroup(resourceGroupName: string, options?: Models.ResourcesListByResourceGroupOptionalParams): Promise<Models.ResourcesListByResourceGroupResponse>;\n  /**\n   * @param resourceGroupName The resource group with the resources to get.\n   * @param callback The callback\n   */\n  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.ResourceListResult>): void;\n  /**\n   * @param resourceGroupName The resource group with the resources to get.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroup(resourceGroupName: string, options: Models.ResourcesListByResourceGroupOptionalParams, callback: msRest.ServiceCallback<Models.ResourceListResult>): void;\n  listByResourceGroup(resourceGroupName: string, options?: Models.ResourcesListByResourceGroupOptionalParams | msRest.ServiceCallback<Models.ResourceListResult>, callback?: msRest.ServiceCallback<Models.ResourceListResult>): Promise<Models.ResourcesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        options\n      },\n      listByResourceGroupOperationSpec,\n      callback) as Promise<Models.ResourcesListByResourceGroupResponse>;\n  }\n\n  /**\n   * The resources to move must be in the same source resource group. The target resource group may\n   * be in a different subscription. When moving resources, both the source group and the target\n   * group are locked for the duration of the operation. Write and delete operations are blocked on\n   * the groups until the move completes.\n   * @summary Moves resources from one resource group to another resource group.\n   * @param sourceResourceGroupName The name of the resource group containing the resources to move.\n   * @param parameters Parameters for moving resources.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  moveResources(sourceResourceGroupName: string, parameters: Models.ResourcesMoveInfo, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginMoveResources(sourceResourceGroupName,parameters,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * This operation checks whether the specified resources can be moved to the target. The resources\n   * to move must be in the same source resource group. The target resource group may be in a\n   * different subscription. If validation succeeds, it returns HTTP response code 204 (no content).\n   * If validation fails, it returns HTTP response code 409 (Conflict) with an error message.\n   * Retrieve the URL in the Location header value to check the result of the long-running operation.\n   * @summary Validates whether resources can be moved from one resource group to another resource\n   * group.\n   * @param sourceResourceGroupName The name of the resource group containing the resources to\n   * validate for move.\n   * @param parameters Parameters for moving resources.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  validateMoveResources(sourceResourceGroupName: string, parameters: Models.ResourcesMoveInfo, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginValidateMoveResources(sourceResourceGroupName,parameters,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * Get all the resources in a subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesListResponse>\n   */\n  list(options?: Models.ResourcesListOptionalParams): Promise<Models.ResourcesListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.ResourceListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: Models.ResourcesListOptionalParams, callback: msRest.ServiceCallback<Models.ResourceListResult>): void;\n  list(options?: Models.ResourcesListOptionalParams | msRest.ServiceCallback<Models.ResourceListResult>, callback?: msRest.ServiceCallback<Models.ResourceListResult>): Promise<Models.ResourcesListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.ResourcesListResponse>;\n  }\n\n  /**\n   * Checks whether a resource exists.\n   * @param resourceGroupName The name of the resource group containing the resource to check. The\n   * name is case insensitive.\n   * @param resourceProviderNamespace The resource provider of the resource to check.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type.\n   * @param resourceName The name of the resource to check whether it exists.\n   * @param apiVersion The API version to use for the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesCheckExistenceResponse>\n   */\n  checkExistence(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourcesCheckExistenceResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group containing the resource to check. The\n   * name is case insensitive.\n   * @param resourceProviderNamespace The resource provider of the resource to check.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type.\n   * @param resourceName The name of the resource to check whether it exists.\n   * @param apiVersion The API version to use for the operation.\n   * @param callback The callback\n   */\n  checkExistence(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, callback: msRest.ServiceCallback<boolean>): void;\n  /**\n   * @param resourceGroupName The name of the resource group containing the resource to check. The\n   * name is case insensitive.\n   * @param resourceProviderNamespace The resource provider of the resource to check.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type.\n   * @param resourceName The name of the resource to check whether it exists.\n   * @param apiVersion The API version to use for the operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkExistence(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<boolean>): void;\n  checkExistence(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<boolean>, callback?: msRest.ServiceCallback<boolean>): Promise<Models.ResourcesCheckExistenceResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        options\n      },\n      checkExistenceOperationSpec,\n      callback) as Promise<Models.ResourcesCheckExistenceResponse>;\n  }\n\n  /**\n   * Deletes a resource.\n   * @param resourceGroupName The name of the resource group that contains the resource to delete.\n   * The name is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type.\n   * @param resourceName The name of the resource to delete.\n   * @param apiVersion The API version to use for the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginDeleteMethod(resourceGroupName,resourceProviderNamespace,parentResourcePath,resourceType,resourceName,apiVersion,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * Creates a resource.\n   * @param resourceGroupName The name of the resource group for the resource. The name is case\n   * insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource to create.\n   * @param resourceName The name of the resource to create.\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Parameters for creating or updating the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesCreateOrUpdateResponse>\n   */\n  createOrUpdate(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, parameters: Models.GenericResource, options?: msRest.RequestOptionsBase): Promise<Models.ResourcesCreateOrUpdateResponse> {\n    return this.beginCreateOrUpdate(resourceGroupName,resourceProviderNamespace,parentResourcePath,resourceType,resourceName,apiVersion,parameters,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ResourcesCreateOrUpdateResponse>;\n  }\n\n  /**\n   * Updates a resource.\n   * @param resourceGroupName The name of the resource group for the resource. The name is case\n   * insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource to update.\n   * @param resourceName The name of the resource to update.\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Parameters for updating the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesUpdateResponse>\n   */\n  update(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, parameters: Models.GenericResource, options?: msRest.RequestOptionsBase): Promise<Models.ResourcesUpdateResponse> {\n    return this.beginUpdate(resourceGroupName,resourceProviderNamespace,parentResourcePath,resourceType,resourceName,apiVersion,parameters,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ResourcesUpdateResponse>;\n  }\n\n  /**\n   * Gets a resource.\n   * @param resourceGroupName The name of the resource group containing the resource to get. The name\n   * is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource.\n   * @param resourceName The name of the resource to get.\n   * @param apiVersion The API version to use for the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesGetResponse>\n   */\n  get(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourcesGetResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group containing the resource to get. The name\n   * is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource.\n   * @param resourceName The name of the resource to get.\n   * @param apiVersion The API version to use for the operation.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, callback: msRest.ServiceCallback<Models.GenericResource>): void;\n  /**\n   * @param resourceGroupName The name of the resource group containing the resource to get. The name\n   * is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource.\n   * @param resourceName The name of the resource to get.\n   * @param apiVersion The API version to use for the operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GenericResource>): void;\n  get(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GenericResource>, callback?: msRest.ServiceCallback<Models.GenericResource>): Promise<Models.ResourcesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.ResourcesGetResponse>;\n  }\n\n  /**\n   * Checks by ID whether a resource exists.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesCheckExistenceByIdResponse>\n   */\n  checkExistenceById(resourceId: string, apiVersion: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourcesCheckExistenceByIdResponse>;\n  /**\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param callback The callback\n   */\n  checkExistenceById(resourceId: string, apiVersion: string, callback: msRest.ServiceCallback<boolean>): void;\n  /**\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkExistenceById(resourceId: string, apiVersion: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<boolean>): void;\n  checkExistenceById(resourceId: string, apiVersion: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<boolean>, callback?: msRest.ServiceCallback<boolean>): Promise<Models.ResourcesCheckExistenceByIdResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceId,\n        apiVersion,\n        options\n      },\n      checkExistenceByIdOperationSpec,\n      callback) as Promise<Models.ResourcesCheckExistenceByIdResponse>;\n  }\n\n  /**\n   * Deletes a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteById(resourceId: string, apiVersion: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginDeleteById(resourceId,apiVersion,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * Create a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Create or update resource parameters.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesCreateOrUpdateByIdResponse>\n   */\n  createOrUpdateById(resourceId: string, apiVersion: string, parameters: Models.GenericResource, options?: msRest.RequestOptionsBase): Promise<Models.ResourcesCreateOrUpdateByIdResponse> {\n    return this.beginCreateOrUpdateById(resourceId,apiVersion,parameters,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ResourcesCreateOrUpdateByIdResponse>;\n  }\n\n  /**\n   * Updates a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Update resource parameters.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesUpdateByIdResponse>\n   */\n  updateById(resourceId: string, apiVersion: string, parameters: Models.GenericResource, options?: msRest.RequestOptionsBase): Promise<Models.ResourcesUpdateByIdResponse> {\n    return this.beginUpdateById(resourceId,apiVersion,parameters,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.ResourcesUpdateByIdResponse>;\n  }\n\n  /**\n   * Gets a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesGetByIdResponse>\n   */\n  getById(resourceId: string, apiVersion: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourcesGetByIdResponse>;\n  /**\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param callback The callback\n   */\n  getById(resourceId: string, apiVersion: string, callback: msRest.ServiceCallback<Models.GenericResource>): void;\n  /**\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getById(resourceId: string, apiVersion: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GenericResource>): void;\n  getById(resourceId: string, apiVersion: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GenericResource>, callback?: msRest.ServiceCallback<Models.GenericResource>): Promise<Models.ResourcesGetByIdResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceId,\n        apiVersion,\n        options\n      },\n      getByIdOperationSpec,\n      callback) as Promise<Models.ResourcesGetByIdResponse>;\n  }\n\n  /**\n   * The resources to move must be in the same source resource group. The target resource group may\n   * be in a different subscription. When moving resources, both the source group and the target\n   * group are locked for the duration of the operation. Write and delete operations are blocked on\n   * the groups until the move completes.\n   * @summary Moves resources from one resource group to another resource group.\n   * @param sourceResourceGroupName The name of the resource group containing the resources to move.\n   * @param parameters Parameters for moving resources.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginMoveResources(sourceResourceGroupName: string, parameters: Models.ResourcesMoveInfo, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        sourceResourceGroupName,\n        parameters,\n        options\n      },\n      beginMoveResourcesOperationSpec,\n      options);\n  }\n\n  /**\n   * This operation checks whether the specified resources can be moved to the target. The resources\n   * to move must be in the same source resource group. The target resource group may be in a\n   * different subscription. If validation succeeds, it returns HTTP response code 204 (no content).\n   * If validation fails, it returns HTTP response code 409 (Conflict) with an error message.\n   * Retrieve the URL in the Location header value to check the result of the long-running operation.\n   * @summary Validates whether resources can be moved from one resource group to another resource\n   * group.\n   * @param sourceResourceGroupName The name of the resource group containing the resources to\n   * validate for move.\n   * @param parameters Parameters for moving resources.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginValidateMoveResources(sourceResourceGroupName: string, parameters: Models.ResourcesMoveInfo, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        sourceResourceGroupName,\n        parameters,\n        options\n      },\n      beginValidateMoveResourcesOperationSpec,\n      options);\n  }\n\n  /**\n   * Deletes a resource.\n   * @param resourceGroupName The name of the resource group that contains the resource to delete.\n   * The name is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type.\n   * @param resourceName The name of the resource to delete.\n   * @param apiVersion The API version to use for the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteMethod(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        options\n      },\n      beginDeleteMethodOperationSpec,\n      options);\n  }\n\n  /**\n   * Creates a resource.\n   * @param resourceGroupName The name of the resource group for the resource. The name is case\n   * insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource to create.\n   * @param resourceName The name of the resource to create.\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Parameters for creating or updating the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreateOrUpdate(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, parameters: Models.GenericResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        parameters,\n        options\n      },\n      beginCreateOrUpdateOperationSpec,\n      options);\n  }\n\n  /**\n   * Updates a resource.\n   * @param resourceGroupName The name of the resource group for the resource. The name is case\n   * insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource to update.\n   * @param resourceName The name of the resource to update.\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Parameters for updating the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginUpdate(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, apiVersion: string, parameters: Models.GenericResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        apiVersion,\n        parameters,\n        options\n      },\n      beginUpdateOperationSpec,\n      options);\n  }\n\n  /**\n   * Deletes a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteById(resourceId: string, apiVersion: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceId,\n        apiVersion,\n        options\n      },\n      beginDeleteByIdOperationSpec,\n      options);\n  }\n\n  /**\n   * Create a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Create or update resource parameters.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreateOrUpdateById(resourceId: string, apiVersion: string, parameters: Models.GenericResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceId,\n        apiVersion,\n        parameters,\n        options\n      },\n      beginCreateOrUpdateByIdOperationSpec,\n      options);\n  }\n\n  /**\n   * Updates a resource by ID.\n   * @param resourceId The fully qualified ID of the resource, including the resource name and\n   * resource type. Use the format,\n   * /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}\n   * @param apiVersion The API version to use for the operation.\n   * @param parameters Update resource parameters.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginUpdateById(resourceId: string, apiVersion: string, parameters: Models.GenericResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceId,\n        apiVersion,\n        parameters,\n        options\n      },\n      beginUpdateByIdOperationSpec,\n      options);\n  }\n\n  /**\n   * Get all the resources for a resource group.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesListByResourceGroupNextResponse>\n   */\n  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourcesListByResourceGroupNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceListResult>): void;\n  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceListResult>, callback?: msRest.ServiceCallback<Models.ResourceListResult>): Promise<Models.ResourcesListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listByResourceGroupNextOperationSpec,\n      callback) as Promise<Models.ResourcesListByResourceGroupNextResponse>;\n  }\n\n  /**\n   * Get all the resources in a subscription.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourcesListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourcesListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceListResult>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceListResult>, callback?: msRest.ServiceCallback<Models.ResourceListResult>): Promise<Models.ResourcesListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.ResourcesListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listByResourceGroupOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/resources\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.filter,\n    Parameters.expand,\n    Parameters.top,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resources\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.filter,\n    Parameters.expand,\n    Parameters.top,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst checkExistenceOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst checkExistenceByIdOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"{resourceId}\",\n  urlParameters: [\n    Parameters.resourceId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getByIdOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{resourceId}\",\n  urlParameters: [\n    Parameters.resourceId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginMoveResourcesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources\",\n  urlParameters: [\n    Parameters.sourceResourceGroupName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ResourcesMoveInfo,\n      required: true\n    }\n  },\n  responses: {\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginValidateMoveResourcesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/validateMoveResources\",\n  urlParameters: [\n    Parameters.sourceResourceGroupName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ResourcesMoveInfo,\n      required: true\n    }\n  },\n  responses: {\n    202: {},\n    204: {},\n    409: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginDeleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.GenericResource,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    201: {\n      bodyMapper: Mappers.GenericResource\n    },\n    202: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.GenericResource,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    202: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginDeleteByIdOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"{resourceId}\",\n  urlParameters: [\n    Parameters.resourceId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginCreateOrUpdateByIdOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{resourceId}\",\n  urlParameters: [\n    Parameters.resourceId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.GenericResource,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    201: {\n      bodyMapper: Mappers.GenericResource\n    },\n    202: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginUpdateByIdOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"{resourceId}\",\n  urlParameters: [\n    Parameters.resourceId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.GenericResource,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.GenericResource\n    },\n    202: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  AliasPathType,\n  AliasType,\n  BaseResource,\n  BasicDependency,\n  CloudError,\n  DebugSetting,\n  Dependency,\n  DeploymentExtended,\n  DeploymentPropertiesExtended,\n  ExportTemplateRequest,\n  GenericResource,\n  Identity,\n  IdentityUserAssignedIdentitiesValue,\n  OnErrorDeploymentExtended,\n  ParametersLink,\n  Plan,\n  Provider,\n  ProviderResourceType,\n  Resource,\n  ResourceGroup,\n  ResourceGroupExportResult,\n  ResourceGroupListResult,\n  ResourceGroupPatchable,\n  ResourceGroupProperties,\n  ResourceManagementErrorWithDetails,\n  Sku,\n  SubResource,\n  TagCount,\n  TagValue,\n  TemplateLink\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/resourceGroupsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClientContext } from \"../resourceManagementClientContext\";\n\n/** Class representing a ResourceGroups. */\nexport class ResourceGroups {\n  private readonly client: ResourceManagementClientContext;\n\n  /**\n   * Create a ResourceGroups.\n   * @param {ResourceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ResourceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Checks whether a resource group exists.\n   * @param resourceGroupName The name of the resource group to check. The name is case insensitive.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourceGroupsCheckExistenceResponse>\n   */\n  checkExistence(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceGroupsCheckExistenceResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group to check. The name is case insensitive.\n   * @param callback The callback\n   */\n  checkExistence(resourceGroupName: string, callback: msRest.ServiceCallback<boolean>): void;\n  /**\n   * @param resourceGroupName The name of the resource group to check. The name is case insensitive.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkExistence(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<boolean>): void;\n  checkExistence(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<boolean>, callback?: msRest.ServiceCallback<boolean>): Promise<Models.ResourceGroupsCheckExistenceResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        options\n      },\n      checkExistenceOperationSpec,\n      callback) as Promise<Models.ResourceGroupsCheckExistenceResponse>;\n  }\n\n  /**\n   * Creates or updates a resource group.\n   * @param resourceGroupName The name of the resource group to create or update. Can include\n   * alphanumeric, underscore, parentheses, hyphen, period (except at end), and Unicode characters\n   * that match the allowed characters.\n   * @param parameters Parameters supplied to the create or update a resource group.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourceGroupsCreateOrUpdateResponse>\n   */\n  createOrUpdate(resourceGroupName: string, parameters: Models.ResourceGroup, options?: msRest.RequestOptionsBase): Promise<Models.ResourceGroupsCreateOrUpdateResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group to create or update. Can include\n   * alphanumeric, underscore, parentheses, hyphen, period (except at end), and Unicode characters\n   * that match the allowed characters.\n   * @param parameters Parameters supplied to the create or update a resource group.\n   * @param callback The callback\n   */\n  createOrUpdate(resourceGroupName: string, parameters: Models.ResourceGroup, callback: msRest.ServiceCallback<Models.ResourceGroup>): void;\n  /**\n   * @param resourceGroupName The name of the resource group to create or update. Can include\n   * alphanumeric, underscore, parentheses, hyphen, period (except at end), and Unicode characters\n   * that match the allowed characters.\n   * @param parameters Parameters supplied to the create or update a resource group.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createOrUpdate(resourceGroupName: string, parameters: Models.ResourceGroup, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceGroup>): void;\n  createOrUpdate(resourceGroupName: string, parameters: Models.ResourceGroup, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceGroup>, callback?: msRest.ServiceCallback<Models.ResourceGroup>): Promise<Models.ResourceGroupsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec,\n      callback) as Promise<Models.ResourceGroupsCreateOrUpdateResponse>;\n  }\n\n  /**\n   * When you delete a resource group, all of its resources are also deleted. Deleting a resource\n   * group deletes all of its template deployments and currently stored operations.\n   * @summary Deletes a resource group.\n   * @param resourceGroupName The name of the resource group to delete. The name is case insensitive.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginDeleteMethod(resourceGroupName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * Gets a resource group.\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourceGroupsGetResponse>\n   */\n  get(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceGroupsGetResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, callback: msRest.ServiceCallback<Models.ResourceGroup>): void;\n  /**\n   * @param resourceGroupName The name of the resource group to get. The name is case insensitive.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceGroup>): void;\n  get(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceGroup>, callback?: msRest.ServiceCallback<Models.ResourceGroup>): Promise<Models.ResourceGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.ResourceGroupsGetResponse>;\n  }\n\n  /**\n   * Resource groups can be updated through a simple PATCH operation to a group address. The format\n   * of the request is the same as that for creating a resource group. If a field is unspecified, the\n   * current value is retained.\n   * @summary Updates a resource group.\n   * @param resourceGroupName The name of the resource group to update. The name is case insensitive.\n   * @param parameters Parameters supplied to update a resource group.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourceGroupsUpdateResponse>\n   */\n  update(resourceGroupName: string, parameters: Models.ResourceGroupPatchable, options?: msRest.RequestOptionsBase): Promise<Models.ResourceGroupsUpdateResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group to update. The name is case insensitive.\n   * @param parameters Parameters supplied to update a resource group.\n   * @param callback The callback\n   */\n  update(resourceGroupName: string, parameters: Models.ResourceGroupPatchable, callback: msRest.ServiceCallback<Models.ResourceGroup>): void;\n  /**\n   * @param resourceGroupName The name of the resource group to update. The name is case insensitive.\n   * @param parameters Parameters supplied to update a resource group.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  update(resourceGroupName: string, parameters: Models.ResourceGroupPatchable, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceGroup>): void;\n  update(resourceGroupName: string, parameters: Models.ResourceGroupPatchable, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceGroup>, callback?: msRest.ServiceCallback<Models.ResourceGroup>): Promise<Models.ResourceGroupsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        parameters,\n        options\n      },\n      updateOperationSpec,\n      callback) as Promise<Models.ResourceGroupsUpdateResponse>;\n  }\n\n  /**\n   * Captures the specified resource group as a template.\n   * @param resourceGroupName The name of the resource group to export as a template.\n   * @param parameters Parameters for exporting the template.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourceGroupsExportTemplateResponse>\n   */\n  exportTemplate(resourceGroupName: string, parameters: Models.ExportTemplateRequest, options?: msRest.RequestOptionsBase): Promise<Models.ResourceGroupsExportTemplateResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group to export as a template.\n   * @param parameters Parameters for exporting the template.\n   * @param callback The callback\n   */\n  exportTemplate(resourceGroupName: string, parameters: Models.ExportTemplateRequest, callback: msRest.ServiceCallback<Models.ResourceGroupExportResult>): void;\n  /**\n   * @param resourceGroupName The name of the resource group to export as a template.\n   * @param parameters Parameters for exporting the template.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  exportTemplate(resourceGroupName: string, parameters: Models.ExportTemplateRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceGroupExportResult>): void;\n  exportTemplate(resourceGroupName: string, parameters: Models.ExportTemplateRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceGroupExportResult>, callback?: msRest.ServiceCallback<Models.ResourceGroupExportResult>): Promise<Models.ResourceGroupsExportTemplateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        parameters,\n        options\n      },\n      exportTemplateOperationSpec,\n      callback) as Promise<Models.ResourceGroupsExportTemplateResponse>;\n  }\n\n  /**\n   * Gets all the resource groups for a subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourceGroupsListResponse>\n   */\n  list(options?: Models.ResourceGroupsListOptionalParams): Promise<Models.ResourceGroupsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.ResourceGroupListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: Models.ResourceGroupsListOptionalParams, callback: msRest.ServiceCallback<Models.ResourceGroupListResult>): void;\n  list(options?: Models.ResourceGroupsListOptionalParams | msRest.ServiceCallback<Models.ResourceGroupListResult>, callback?: msRest.ServiceCallback<Models.ResourceGroupListResult>): Promise<Models.ResourceGroupsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.ResourceGroupsListResponse>;\n  }\n\n  /**\n   * When you delete a resource group, all of its resources are also deleted. Deleting a resource\n   * group deletes all of its template deployments and currently stored operations.\n   * @summary Deletes a resource group.\n   * @param resourceGroupName The name of the resource group to delete. The name is case insensitive.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteMethod(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        options\n      },\n      beginDeleteMethodOperationSpec,\n      options);\n  }\n\n  /**\n   * Gets all the resource groups for a subscription.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourceGroupsListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceGroupsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceGroupListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceGroupListResult>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceGroupListResult>, callback?: msRest.ServiceCallback<Models.ResourceGroupListResult>): Promise<Models.ResourceGroupsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.ResourceGroupsListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst checkExistenceOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst createOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ResourceGroup,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroup\n    },\n    201: {\n      bodyMapper: Mappers.ResourceGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ResourceGroupPatchable,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst exportTemplateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/exportTemplate\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ExportTemplateRequest,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroupExportResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.filter,\n    Parameters.top,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginDeleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    202: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  AliasPathType,\n  AliasType,\n  BaseResource,\n  BasicDependency,\n  CloudError,\n  DebugSetting,\n  Dependency,\n  DeploymentExtended,\n  DeploymentPropertiesExtended,\n  GenericResource,\n  Identity,\n  IdentityUserAssignedIdentitiesValue,\n  OnErrorDeploymentExtended,\n  ParametersLink,\n  Plan,\n  Provider,\n  ProviderResourceType,\n  Resource,\n  ResourceGroup,\n  ResourceGroupProperties,\n  Sku,\n  SubResource,\n  TagCount,\n  TagDetails,\n  TagsListResult,\n  TagValue,\n  TemplateLink\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/tagsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClientContext } from \"../resourceManagementClientContext\";\n\n/** Class representing a Tags. */\nexport class Tags {\n  private readonly client: ResourceManagementClientContext;\n\n  /**\n   * Create a Tags.\n   * @param {ResourceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ResourceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Deletes a tag value.\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to delete.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteValue(tagName: string, tagValue: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to delete.\n   * @param callback The callback\n   */\n  deleteValue(tagName: string, tagValue: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to delete.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteValue(tagName: string, tagValue: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  deleteValue(tagName: string, tagValue: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        tagName,\n        tagValue,\n        options\n      },\n      deleteValueOperationSpec,\n      callback);\n  }\n\n  /**\n   * Creates a tag value. The name of the tag must already exist.\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to create.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TagsCreateOrUpdateValueResponse>\n   */\n  createOrUpdateValue(tagName: string, tagValue: string, options?: msRest.RequestOptionsBase): Promise<Models.TagsCreateOrUpdateValueResponse>;\n  /**\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to create.\n   * @param callback The callback\n   */\n  createOrUpdateValue(tagName: string, tagValue: string, callback: msRest.ServiceCallback<Models.TagValue>): void;\n  /**\n   * @param tagName The name of the tag.\n   * @param tagValue The value of the tag to create.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createOrUpdateValue(tagName: string, tagValue: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TagValue>): void;\n  createOrUpdateValue(tagName: string, tagValue: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TagValue>, callback?: msRest.ServiceCallback<Models.TagValue>): Promise<Models.TagsCreateOrUpdateValueResponse> {\n    return this.client.sendOperationRequest(\n      {\n        tagName,\n        tagValue,\n        options\n      },\n      createOrUpdateValueOperationSpec,\n      callback) as Promise<Models.TagsCreateOrUpdateValueResponse>;\n  }\n\n  /**\n   * The tag name can have a maximum of 512 characters and is case insensitive. Tag names created by\n   * Azure have prefixes of microsoft, azure, or windows. You cannot create tags with one of these\n   * prefixes.\n   * @summary Creates a tag in the subscription.\n   * @param tagName The name of the tag to create.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TagsCreateOrUpdateResponse>\n   */\n  createOrUpdate(tagName: string, options?: msRest.RequestOptionsBase): Promise<Models.TagsCreateOrUpdateResponse>;\n  /**\n   * @param tagName The name of the tag to create.\n   * @param callback The callback\n   */\n  createOrUpdate(tagName: string, callback: msRest.ServiceCallback<Models.TagDetails>): void;\n  /**\n   * @param tagName The name of the tag to create.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createOrUpdate(tagName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TagDetails>): void;\n  createOrUpdate(tagName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TagDetails>, callback?: msRest.ServiceCallback<Models.TagDetails>): Promise<Models.TagsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        tagName,\n        options\n      },\n      createOrUpdateOperationSpec,\n      callback) as Promise<Models.TagsCreateOrUpdateResponse>;\n  }\n\n  /**\n   * You must remove all values from a resource tag before you can delete it.\n   * @summary Deletes a tag from the subscription.\n   * @param tagName The name of the tag.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(tagName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param tagName The name of the tag.\n   * @param callback The callback\n   */\n  deleteMethod(tagName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param tagName The name of the tag.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(tagName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(tagName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        tagName,\n        options\n      },\n      deleteMethodOperationSpec,\n      callback);\n  }\n\n  /**\n   * Gets the names and values of all resource tags that are defined in a subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TagsListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.TagsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.TagsListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TagsListResult>): void;\n  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TagsListResult>, callback?: msRest.ServiceCallback<Models.TagsListResult>): Promise<Models.TagsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.TagsListResponse>;\n  }\n\n  /**\n   * Gets the names and values of all resource tags that are defined in a subscription.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TagsListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.TagsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TagsListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TagsListResult>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TagsListResult>, callback?: msRest.ServiceCallback<Models.TagsListResult>): Promise<Models.TagsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.TagsListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst deleteValueOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}\",\n  urlParameters: [\n    Parameters.tagName,\n    Parameters.tagValue,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst createOrUpdateValueOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}\",\n  urlParameters: [\n    Parameters.tagName,\n    Parameters.tagValue,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagValue\n    },\n    201: {\n      bodyMapper: Mappers.TagValue\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst createOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/tagNames/{tagName}\",\n  urlParameters: [\n    Parameters.tagName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagDetails\n    },\n    201: {\n      bodyMapper: Mappers.TagDetails\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/tagNames/{tagName}\",\n  urlParameters: [\n    Parameters.tagName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/tagNames\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TagsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  CloudError,\n  DeploymentOperation,\n  DeploymentOperationProperties,\n  DeploymentOperationsListResult,\n  HttpMessage,\n  TargetResource\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/deploymentOperationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ResourceManagementClientContext } from \"../resourceManagementClientContext\";\n\n/** Class representing a DeploymentOperations. */\nexport class DeploymentOperations {\n  private readonly client: ResourceManagementClientContext;\n\n  /**\n   * Create a DeploymentOperations.\n   * @param {ResourceManagementClientContext} client Reference to the service client.\n   */\n  constructor(client: ResourceManagementClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsGetAtManagementGroupScopeResponse>\n   */\n  getAtManagementGroupScope(groupId: string, deploymentName: string, operationId: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentOperationsGetAtManagementGroupScopeResponse>;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param callback The callback\n   */\n  getAtManagementGroupScope(groupId: string, deploymentName: string, operationId: string, callback: msRest.ServiceCallback<Models.DeploymentOperation>): void;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAtManagementGroupScope(groupId: string, deploymentName: string, operationId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentOperation>): void;\n  getAtManagementGroupScope(groupId: string, deploymentName: string, operationId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentOperation>, callback?: msRest.ServiceCallback<Models.DeploymentOperation>): Promise<Models.DeploymentOperationsGetAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupId,\n        deploymentName,\n        operationId,\n        options\n      },\n      getAtManagementGroupScopeOperationSpec,\n      callback) as Promise<Models.DeploymentOperationsGetAtManagementGroupScopeResponse>;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsListAtManagementGroupScopeResponse>\n   */\n  listAtManagementGroupScope(groupId: string, deploymentName: string, options?: Models.DeploymentOperationsListAtManagementGroupScopeOptionalParams): Promise<Models.DeploymentOperationsListAtManagementGroupScopeResponse>;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  listAtManagementGroupScope(groupId: string, deploymentName: string, callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): void;\n  /**\n   * @param groupId The management group ID.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtManagementGroupScope(groupId: string, deploymentName: string, options: Models.DeploymentOperationsListAtManagementGroupScopeOptionalParams, callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): void;\n  listAtManagementGroupScope(groupId: string, deploymentName: string, options?: Models.DeploymentOperationsListAtManagementGroupScopeOptionalParams | msRest.ServiceCallback<Models.DeploymentOperationsListResult>, callback?: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): Promise<Models.DeploymentOperationsListAtManagementGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        groupId,\n        deploymentName,\n        options\n      },\n      listAtManagementGroupScopeOperationSpec,\n      callback) as Promise<Models.DeploymentOperationsListAtManagementGroupScopeResponse>;\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsGetAtSubscriptionScopeResponse>\n   */\n  getAtSubscriptionScope(deploymentName: string, operationId: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentOperationsGetAtSubscriptionScopeResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param callback The callback\n   */\n  getAtSubscriptionScope(deploymentName: string, operationId: string, callback: msRest.ServiceCallback<Models.DeploymentOperation>): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAtSubscriptionScope(deploymentName: string, operationId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentOperation>): void;\n  getAtSubscriptionScope(deploymentName: string, operationId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentOperation>, callback?: msRest.ServiceCallback<Models.DeploymentOperation>): Promise<Models.DeploymentOperationsGetAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        operationId,\n        options\n      },\n      getAtSubscriptionScopeOperationSpec,\n      callback) as Promise<Models.DeploymentOperationsGetAtSubscriptionScopeResponse>;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsListAtSubscriptionScopeResponse>\n   */\n  listAtSubscriptionScope(deploymentName: string, options?: Models.DeploymentOperationsListAtSubscriptionScopeOptionalParams): Promise<Models.DeploymentOperationsListAtSubscriptionScopeResponse>;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  listAtSubscriptionScope(deploymentName: string, callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): void;\n  /**\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtSubscriptionScope(deploymentName: string, options: Models.DeploymentOperationsListAtSubscriptionScopeOptionalParams, callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): void;\n  listAtSubscriptionScope(deploymentName: string, options?: Models.DeploymentOperationsListAtSubscriptionScopeOptionalParams | msRest.ServiceCallback<Models.DeploymentOperationsListResult>, callback?: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): Promise<Models.DeploymentOperationsListAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        deploymentName,\n        options\n      },\n      listAtSubscriptionScopeOperationSpec,\n      callback) as Promise<Models.DeploymentOperationsListAtSubscriptionScopeResponse>;\n  }\n\n  /**\n   * Gets a deployments operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsGetResponse>\n   */\n  get(resourceGroupName: string, deploymentName: string, operationId: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentOperationsGetResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, deploymentName: string, operationId: string, callback: msRest.ServiceCallback<Models.DeploymentOperation>): void;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param operationId The ID of the operation to get.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, deploymentName: string, operationId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentOperation>): void;\n  get(resourceGroupName: string, deploymentName: string, operationId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentOperation>, callback?: msRest.ServiceCallback<Models.DeploymentOperation>): Promise<Models.DeploymentOperationsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        operationId,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.DeploymentOperationsGetResponse>;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsListResponse>\n   */\n  list(resourceGroupName: string, deploymentName: string, options?: Models.DeploymentOperationsListOptionalParams): Promise<Models.DeploymentOperationsListResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param callback The callback\n   */\n  list(resourceGroupName: string, deploymentName: string, callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): void;\n  /**\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param deploymentName The name of the deployment.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(resourceGroupName: string, deploymentName: string, options: Models.DeploymentOperationsListOptionalParams, callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): void;\n  list(resourceGroupName: string, deploymentName: string, options?: Models.DeploymentOperationsListOptionalParams | msRest.ServiceCallback<Models.DeploymentOperationsListResult>, callback?: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): Promise<Models.DeploymentOperationsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        deploymentName,\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.DeploymentOperationsListResponse>;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsListAtManagementGroupScopeNextResponse>\n   */\n  listAtManagementGroupScopeNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentOperationsListAtManagementGroupScopeNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listAtManagementGroupScopeNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtManagementGroupScopeNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): void;\n  listAtManagementGroupScopeNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentOperationsListResult>, callback?: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): Promise<Models.DeploymentOperationsListAtManagementGroupScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listAtManagementGroupScopeNextOperationSpec,\n      callback) as Promise<Models.DeploymentOperationsListAtManagementGroupScopeNextResponse>;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsListAtSubscriptionScopeNextResponse>\n   */\n  listAtSubscriptionScopeNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentOperationsListAtSubscriptionScopeNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listAtSubscriptionScopeNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listAtSubscriptionScopeNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): void;\n  listAtSubscriptionScopeNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentOperationsListResult>, callback?: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): Promise<Models.DeploymentOperationsListAtSubscriptionScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listAtSubscriptionScopeNextOperationSpec,\n      callback) as Promise<Models.DeploymentOperationsListAtSubscriptionScopeNextResponse>;\n  }\n\n  /**\n   * Gets all deployments operations for a deployment.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DeploymentOperationsListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentOperationsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentOperationsListResult>, callback?: msRest.ServiceCallback<Models.DeploymentOperationsListResult>): Promise<Models.DeploymentOperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.DeploymentOperationsListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  urlParameters: [\n    Parameters.groupId,\n    Parameters.deploymentName,\n    Parameters.operationId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtManagementGroupScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  urlParameters: [\n    Parameters.groupId,\n    Parameters.deploymentName\n  ],\n  queryParameters: [\n    Parameters.top,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}\",\n  urlParameters: [\n    Parameters.deploymentName,\n    Parameters.operationId,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtSubscriptionScopeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations\",\n  urlParameters: [\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.top,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.operationId,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.deploymentName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.top,\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtManagementGroupScopeNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listAtSubscriptionScopeNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentOperationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nexport * from \"./operations\";\nexport * from \"./deployments\";\nexport * from \"./providers\";\nexport * from \"./resources\";\nexport * from \"./resourceGroups\";\nexport * from \"./tags\";\nexport * from \"./deploymentOperations\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as Models from \"./models\";\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\n\nconst packageName = \"@azure/arm-resources\";\nconst packageVersion = \"1.1.0\";\n\nexport class ResourceManagementClientContext extends msRestAzure.AzureServiceClient {\n  credentials: msRest.ServiceClientCredentials;\n  subscriptionId: string;\n  apiVersion?: string;\n\n  /**\n   * Initializes a new instance of the ResourceManagementClient class.\n   * @param credentials Credentials needed for the client to connect to Azure.\n   * @param subscriptionId The ID of the target subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, subscriptionId: string, options?: Models.ResourceManagementClientOptions) {\n    if (credentials == undefined) {\n      throw new Error('\\'credentials\\' cannot be null.');\n    }\n    if (subscriptionId == undefined) {\n      throw new Error('\\'subscriptionId\\' cannot be null.');\n    }\n\n    if (!options) {\n      options = {};\n    }\n    if(!options.userAgent) {\n      const defaultUserAgent = msRestAzure.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.apiVersion = '2019-05-01';\n    this.acceptLanguage = 'en-US';\n    this.longRunningOperationRetryTimeout = 30;\n    this.baseUri = options.baseUri || this.baseUri || \"https://management.azure.com\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.credentials = credentials;\n    this.subscriptionId = subscriptionId;\n\n    if(options.acceptLanguage !== null && options.acceptLanguage !== undefined) {\n      this.acceptLanguage = options.acceptLanguage;\n    }\n    if(options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {\n      this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;\n    }\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { ResourceManagementClientContext } from \"./resourceManagementClientContext\";\n\n\nclass ResourceManagementClient extends ResourceManagementClientContext {\n  // Operation groups\n  operations: operations.Operations;\n  deployments: operations.Deployments;\n  providers: operations.Providers;\n  resources: operations.Resources;\n  resourceGroups: operations.ResourceGroups;\n  tags: operations.Tags;\n  deploymentOperations: operations.DeploymentOperations;\n\n  /**\n   * Initializes a new instance of the ResourceManagementClient class.\n   * @param credentials Credentials needed for the client to connect to Azure.\n   * @param subscriptionId The ID of the target subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, subscriptionId: string, options?: Models.ResourceManagementClientOptions) {\n    super(credentials, subscriptionId, options);\n    this.operations = new operations.Operations(this);\n    this.deployments = new operations.Deployments(this);\n    this.providers = new operations.Providers(this);\n    this.resources = new operations.Resources(this);\n    this.resourceGroups = new operations.ResourceGroups(this);\n    this.tags = new operations.Tags(this);\n    this.deploymentOperations = new operations.DeploymentOperations(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  ResourceManagementClient,\n  ResourceManagementClientContext,\n  Models as ResourceManagementModels,\n  Mappers as ResourceManagementMappers\n};\nexport * from \"./operations\";\n"],"names":["CloudErrorMapper","BaseResourceMapper","nextPageLink","msRest.Serializer","Parameters.apiVersion","Parameters.acceptLanguage","Mappers.OperationListResult","Mappers.CloudError","Parameters.nextPageLink","groupId","deploymentName","resourceGroupName","serializer","Mappers","Parameters.groupId","Parameters.deploymentName","Mappers.DeploymentExtended","Mappers.Deployment","Mappers.DeploymentValidateResult","Mappers.DeploymentExportResult","Parameters.filter","Parameters.top","Mappers.DeploymentListResult","Parameters.subscriptionId","Parameters.resourceGroupName","resourceProviderNamespace","listOperationSpec","getOperationSpec","listNextOperationSpec","Parameters.resourceProviderNamespace","Mappers.Provider","Parameters.expand","Mappers.ProviderListResult","listByResourceGroupOperationSpec","sourceResourceGroupName","parentResourcePath","resourceType","resourceName","apiVersion","checkExistenceOperationSpec","resourceId","beginDeleteMethodOperationSpec","beginCreateOrUpdateOperationSpec","listByResourceGroupNextOperationSpec","Mappers.ResourceListResult","Parameters.parentResourcePath","Parameters.resourceType","Parameters.resourceName","Mappers.GenericResource","Parameters.resourceId","Parameters.sourceResourceGroupName","Mappers.ResourcesMoveInfo","exportTemplateOperationSpec","Mappers.ResourceGroup","Mappers.ResourceGroupPatchable","Mappers.ExportTemplateRequest","Mappers.ResourceGroupExportResult","Mappers.ResourceGroupListResult","tagName","tagValue","createOrUpdateOperationSpec","Parameters.tagName","Parameters.tagValue","Mappers.TagValue","Mappers.TagDetails","Mappers.TagsListResult","operationId","getAtManagementGroupScopeOperationSpec","listAtManagementGroupScopeOperationSpec","getAtSubscriptionScopeOperationSpec","listAtSubscriptionScopeOperationSpec","listAtManagementGroupScopeNextOperationSpec","listAtSubscriptionScopeNextOperationSpec","Parameters.operationId","Mappers.DeploymentOperation","Mappers.DeploymentOperationsListResult","tslib_1.__extends","msRestAzure.getDefaultUserAgentValue","msRestAzure.AzureServiceClient","operations.Operations","operations.Deployments","operations.Providers","operations.Resources","operations.ResourceGroups","operations.Tags","operations.DeploymentOperations"],"mappings":"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"}