/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
export var acceptLanguage = {
    parameterPath: "acceptLanguage",
    mapper: {
        serializedName: "accept-language",
        defaultValue: 'en-US',
        type: {
            name: "String"
        }
    }
};
export var accessName = {
    parameterPath: "accessName",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "accessName",
        defaultValue: 'access',
        type: {
            name: "String"
        }
    }
};
export var apiId0 = {
    parameterPath: "apiId",
    mapper: {
        required: true,
        serializedName: "apiId",
        constraints: {
            MaxLength: 256,
            MinLength: 1,
            Pattern: /^[^*#&+:<>?]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var apiId1 = {
    parameterPath: "apiId",
    mapper: {
        required: true,
        serializedName: "apiId",
        constraints: {
            MaxLength: 80,
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export var attachmentId = {
    parameterPath: "attachmentId",
    mapper: {
        required: true,
        serializedName: "attachmentId",
        constraints: {
            MaxLength: 256,
            MinLength: 1,
            Pattern: /^[^*#&+:<>?]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var authsid = {
    parameterPath: "authsid",
    mapper: {
        required: true,
        serializedName: "authsid",
        constraints: {
            MaxLength: 80,
            MinLength: 1,
            Pattern: /^[^*#&+:<>?]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var backendId = {
    parameterPath: "backendId",
    mapper: {
        required: true,
        serializedName: "backendId",
        constraints: {
            MaxLength: 80,
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var cacheId = {
    parameterPath: "cacheId",
    mapper: {
        required: true,
        serializedName: "cacheId",
        constraints: {
            MaxLength: 80,
            MinLength: 1,
            Pattern: /^[^*#&+:<>?]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var certificateId = {
    parameterPath: "certificateId",
    mapper: {
        required: true,
        serializedName: "certificateId",
        constraints: {
            MaxLength: 80,
            MinLength: 1,
            Pattern: /^[^*#&+:<>?]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var commentId = {
    parameterPath: "commentId",
    mapper: {
        required: true,
        serializedName: "commentId",
        constraints: {
            MaxLength: 256,
            MinLength: 1,
            Pattern: /^[^*#&+:<>?]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var configurationName = {
    parameterPath: "configurationName",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "configurationName",
        defaultValue: 'configuration',
        type: {
            name: "String"
        }
    }
};
export var deleteRevisions = {
    parameterPath: [
        "options",
        "deleteRevisions"
    ],
    mapper: {
        serializedName: "deleteRevisions",
        type: {
            name: "Boolean"
        }
    }
};
export var deleteSubscriptions = {
    parameterPath: [
        "options",
        "deleteSubscriptions"
    ],
    mapper: {
        serializedName: "deleteSubscriptions",
        type: {
            name: "Boolean"
        }
    }
};
export var diagnosticId = {
    parameterPath: "diagnosticId",
    mapper: {
        required: true,
        serializedName: "diagnosticId",
        constraints: {
            MaxLength: 80,
            MinLength: 1,
            Pattern: /^[^*#&+:<>?]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var email = {
    parameterPath: "email",
    mapper: {
        required: true,
        serializedName: "email",
        type: {
            name: "String"
        }
    }
};
export var expandApiVersionSet = {
    parameterPath: [
        "options",
        "expandApiVersionSet"
    ],
    mapper: {
        serializedName: "expandApiVersionSet",
        type: {
            name: "Boolean"
        }
    }
};
export var expandCommentsAttachments = {
    parameterPath: [
        "options",
        "expandCommentsAttachments"
    ],
    mapper: {
        serializedName: "expandCommentsAttachments",
        type: {
            name: "Boolean"
        }
    }
};
export var expandGroups = {
    parameterPath: [
        "options",
        "expandGroups"
    ],
    mapper: {
        serializedName: "expandGroups",
        type: {
            name: "Boolean"
        }
    }
};
export var exportParameter = {
    parameterPath: "exportParameter",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "export",
        defaultValue: 'true',
        type: {
            name: "String"
        }
    }
};
export var filter0 = {
    parameterPath: [
        "options",
        "filter"
    ],
    mapper: {
        serializedName: "$filter",
        type: {
            name: "String"
        }
    }
};
export var filter1 = {
    parameterPath: "filter",
    mapper: {
        required: true,
        serializedName: "$filter",
        type: {
            name: "String"
        }
    }
};
export var force = {
    parameterPath: [
        "options",
        "force"
    ],
    mapper: {
        serializedName: "force",
        type: {
            name: "Boolean"
        }
    }
};
export var format0 = {
    parameterPath: [
        "options",
        "format"
    ],
    mapper: {
        serializedName: "format",
        defaultValue: 'xml',
        type: {
            name: "String"
        }
    }
};
export var format1 = {
    parameterPath: "format",
    mapper: {
        required: true,
        serializedName: "format",
        type: {
            name: "String"
        }
    }
};
export var groupId = {
    parameterPath: "groupId",
    mapper: {
        required: true,
        serializedName: "groupId",
        constraints: {
            MaxLength: 256,
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var identityProviderName = {
    parameterPath: "identityProviderName",
    mapper: {
        required: true,
        serializedName: "identityProviderName",
        type: {
            name: "String"
        }
    }
};
export var ifMatch0 = {
    parameterPath: [
        "options",
        "ifMatch"
    ],
    mapper: {
        serializedName: "If-Match",
        type: {
            name: "String"
        }
    }
};
export var ifMatch1 = {
    parameterPath: "ifMatch",
    mapper: {
        required: true,
        serializedName: "If-Match",
        type: {
            name: "String"
        }
    }
};
export var includeNotTaggedApis = {
    parameterPath: [
        "options",
        "includeNotTaggedApis"
    ],
    mapper: {
        serializedName: "includeNotTaggedApis",
        type: {
            name: "Boolean"
        }
    }
};
export var includeNotTaggedOperations = {
    parameterPath: [
        "options",
        "includeNotTaggedOperations"
    ],
    mapper: {
        serializedName: "includeNotTaggedOperations",
        type: {
            name: "Boolean"
        }
    }
};
export var includeNotTaggedProducts = {
    parameterPath: [
        "options",
        "includeNotTaggedProducts"
    ],
    mapper: {
        serializedName: "includeNotTaggedProducts",
        type: {
            name: "Boolean"
        }
    }
};
export var interval = {
    parameterPath: "interval",
    mapper: {
        required: true,
        serializedName: "interval",
        type: {
            name: "TimeSpan"
        }
    }
};
export var issueId = {
    parameterPath: "issueId",
    mapper: {
        required: true,
        serializedName: "issueId",
        constraints: {
            MaxLength: 256,
            MinLength: 1,
            Pattern: /^[^*#&+:<>?]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var locationName = {
    parameterPath: "locationName",
    mapper: {
        required: true,
        serializedName: "locationName",
        constraints: {
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var loggerId = {
    parameterPath: "loggerId",
    mapper: {
        required: true,
        serializedName: "loggerId",
        constraints: {
            MaxLength: 256,
            Pattern: /^[^*#&+:<>?]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var nextPageLink = {
    parameterPath: "nextPageLink",
    mapper: {
        required: true,
        serializedName: "nextLink",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var notificationName = {
    parameterPath: "notificationName",
    mapper: {
        required: true,
        serializedName: "notificationName",
        type: {
            name: "String"
        }
    }
};
export var notify = {
    parameterPath: [
        "options",
        "notify"
    ],
    mapper: {
        serializedName: "notify",
        type: {
            name: "Boolean"
        }
    }
};
export var operationId = {
    parameterPath: "operationId",
    mapper: {
        required: true,
        serializedName: "operationId",
        constraints: {
            MaxLength: 80,
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var opid = {
    parameterPath: "opid",
    mapper: {
        required: true,
        serializedName: "opid",
        constraints: {
            MaxLength: 256,
            Pattern: /^[^*#&+:<>?]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var orderby = {
    parameterPath: [
        "options",
        "orderby"
    ],
    mapper: {
        serializedName: "$orderby",
        type: {
            name: "String"
        }
    }
};
export var policyId = {
    parameterPath: "policyId",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "policyId",
        defaultValue: 'policy',
        type: {
            name: "String"
        }
    }
};
export var productId = {
    parameterPath: "productId",
    mapper: {
        required: true,
        serializedName: "productId",
        constraints: {
            MaxLength: 256,
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var propId = {
    parameterPath: "propId",
    mapper: {
        required: true,
        serializedName: "propId",
        constraints: {
            MaxLength: 256,
            Pattern: /^[^*#&+:<>?]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var quotaCounterKey = {
    parameterPath: "quotaCounterKey",
    mapper: {
        required: true,
        serializedName: "quotaCounterKey",
        type: {
            name: "String"
        }
    }
};
export var quotaPeriodKey = {
    parameterPath: "quotaPeriodKey",
    mapper: {
        required: true,
        serializedName: "quotaPeriodKey",
        type: {
            name: "String"
        }
    }
};
export var releaseId = {
    parameterPath: "releaseId",
    mapper: {
        required: true,
        serializedName: "releaseId",
        constraints: {
            MaxLength: 80,
            MinLength: 1,
            Pattern: /^[^*#&+:<>?]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        required: true,
        serializedName: "resourceGroupName",
        type: {
            name: "String"
        }
    }
};
export var schemaId = {
    parameterPath: "schemaId",
    mapper: {
        required: true,
        serializedName: "schemaId",
        constraints: {
            MaxLength: 80,
            MinLength: 1,
            Pattern: /^[^*#&+:<>?]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var scope0 = {
    parameterPath: [
        "options",
        "scope"
    ],
    mapper: {
        serializedName: "scope",
        type: {
            name: "String"
        }
    }
};
export var scope1 = {
    parameterPath: [
        "options",
        "scope"
    ],
    mapper: {
        serializedName: "scope",
        type: {
            name: "Enum",
            allowedValues: [
                "Tenant",
                "Product",
                "Api",
                "Operation",
                "All"
            ]
        }
    }
};
export var serviceName = {
    parameterPath: "serviceName",
    mapper: {
        required: true,
        serializedName: "serviceName",
        constraints: {
            MaxLength: 50,
            MinLength: 1,
            Pattern: /^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$/
        },
        type: {
            name: "String"
        }
    }
};
export var sid = {
    parameterPath: "sid",
    mapper: {
        required: true,
        serializedName: "sid",
        constraints: {
            MaxLength: 256,
            Pattern: /^[^*#&+:<>?]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var skip = {
    parameterPath: [
        "options",
        "skip"
    ],
    mapper: {
        serializedName: "$skip",
        constraints: {
            InclusiveMinimum: 0
        },
        type: {
            name: "Number"
        }
    }
};
export var subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        required: true,
        serializedName: "subscriptionId",
        type: {
            name: "String"
        }
    }
};
export var tagId = {
    parameterPath: "tagId",
    mapper: {
        required: true,
        serializedName: "tagId",
        constraints: {
            MaxLength: 80,
            MinLength: 1,
            Pattern: /^[^*#&+:<>?]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var tags = {
    parameterPath: [
        "options",
        "tags"
    ],
    mapper: {
        serializedName: "tags",
        type: {
            name: "String"
        }
    }
};
export var templateName = {
    parameterPath: "templateName",
    mapper: {
        required: true,
        serializedName: "templateName",
        type: {
            name: "String"
        }
    }
};
export var top = {
    parameterPath: [
        "options",
        "top"
    ],
    mapper: {
        serializedName: "$top",
        constraints: {
            InclusiveMinimum: 1
        },
        type: {
            name: "Number"
        }
    }
};
export var userId = {
    parameterPath: "userId",
    mapper: {
        required: true,
        serializedName: "userId",
        constraints: {
            MaxLength: 80,
            MinLength: 1
        },
        type: {
            name: "String"
        }
    }
};
export var versionSetId = {
    parameterPath: "versionSetId",
    mapper: {
        required: true,
        serializedName: "versionSetId",
        constraints: {
            MaxLength: 80,
            MinLength: 1,
            Pattern: /^[^*#&+:<>?]+$/
        },
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map