import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ApiManagementClientContext } from "../apiManagementClientContext";
/** Class representing a ApiOperation. */
export declare class ApiOperation {
    private readonly client;
    /**
     * Create a ApiOperation.
     * @param {ApiManagementClientContext} client Reference to the service client.
     */
    constructor(client: ApiManagementClientContext);
    /**
     * Lists a collection of the operations for the specified API.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApiOperationListByApiResponse>
     */
    listByApi(resourceGroupName: string, serviceName: string, apiId: string, options?: Models.ApiOperationListByApiOptionalParams): Promise<Models.ApiOperationListByApiResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param callback The callback
     */
    listByApi(resourceGroupName: string, serviceName: string, apiId: string, callback: msRest.ServiceCallback<Models.OperationCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByApi(resourceGroupName: string, serviceName: string, apiId: string, options: Models.ApiOperationListByApiOptionalParams, callback: msRest.ServiceCallback<Models.OperationCollection>): void;
    /**
     * Gets the entity state (Etag) version of the API operation specified by its identifier.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param operationId Operation identifier within an API. Must be unique in the current API
     * Management service instance.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApiOperationGetEntityTagResponse>
     */
    getEntityTag(resourceGroupName: string, serviceName: string, apiId: string, operationId: string, options?: msRest.RequestOptionsBase): Promise<Models.ApiOperationGetEntityTagResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param operationId Operation identifier within an API. Must be unique in the current API
     * Management service instance.
     * @param callback The callback
     */
    getEntityTag(resourceGroupName: string, serviceName: string, apiId: string, operationId: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param operationId Operation identifier within an API. Must be unique in the current API
     * Management service instance.
     * @param options The optional parameters
     * @param callback The callback
     */
    getEntityTag(resourceGroupName: string, serviceName: string, apiId: string, operationId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets the details of the API Operation specified by its identifier.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param operationId Operation identifier within an API. Must be unique in the current API
     * Management service instance.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApiOperationGetResponse>
     */
    get(resourceGroupName: string, serviceName: string, apiId: string, operationId: string, options?: msRest.RequestOptionsBase): Promise<Models.ApiOperationGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param operationId Operation identifier within an API. Must be unique in the current API
     * Management service instance.
     * @param callback The callback
     */
    get(resourceGroupName: string, serviceName: string, apiId: string, operationId: string, callback: msRest.ServiceCallback<Models.OperationContract>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param operationId Operation identifier within an API. Must be unique in the current API
     * Management service instance.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, serviceName: string, apiId: string, operationId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationContract>): void;
    /**
     * Creates a new operation in the API or updates an existing one.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param operationId Operation identifier within an API. Must be unique in the current API
     * Management service instance.
     * @param parameters Create parameters.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApiOperationCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, apiId: string, operationId: string, parameters: Models.OperationContract, options?: Models.ApiOperationCreateOrUpdateOptionalParams): Promise<Models.ApiOperationCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param operationId Operation identifier within an API. Must be unique in the current API
     * Management service instance.
     * @param parameters Create parameters.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, apiId: string, operationId: string, parameters: Models.OperationContract, callback: msRest.ServiceCallback<Models.OperationContract>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param operationId Operation identifier within an API. Must be unique in the current API
     * Management service instance.
     * @param parameters Create parameters.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, apiId: string, operationId: string, parameters: Models.OperationContract, options: Models.ApiOperationCreateOrUpdateOptionalParams, callback: msRest.ServiceCallback<Models.OperationContract>): void;
    /**
     * Updates the details of the operation in the API specified by its identifier.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param operationId Operation identifier within an API. Must be unique in the current API
     * Management service instance.
     * @param parameters API Operation Update parameters.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    update(resourceGroupName: string, serviceName: string, apiId: string, operationId: string, parameters: Models.OperationUpdateContract, ifMatch: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param operationId Operation identifier within an API. Must be unique in the current API
     * Management service instance.
     * @param parameters API Operation Update parameters.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param callback The callback
     */
    update(resourceGroupName: string, serviceName: string, apiId: string, operationId: string, parameters: Models.OperationUpdateContract, ifMatch: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param operationId Operation identifier within an API. Must be unique in the current API
     * Management service instance.
     * @param parameters API Operation Update parameters.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, serviceName: string, apiId: string, operationId: string, parameters: Models.OperationUpdateContract, ifMatch: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Deletes the specified operation in the API.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param operationId Operation identifier within an API. Must be unique in the current API
     * Management service instance.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, serviceName: string, apiId: string, operationId: string, ifMatch: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param operationId Operation identifier within an API. Must be unique in the current API
     * Management service instance.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, serviceName: string, apiId: string, operationId: string, ifMatch: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param operationId Operation identifier within an API. Must be unique in the current API
     * Management service instance.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, serviceName: string, apiId: string, operationId: string, ifMatch: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Lists a collection of the operations for the specified API.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApiOperationListByApiNextResponse>
     */
    listByApiNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ApiOperationListByApiNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByApiNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.OperationCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByApiNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationCollection>): void;
}
//# sourceMappingURL=apiOperation.d.ts.map