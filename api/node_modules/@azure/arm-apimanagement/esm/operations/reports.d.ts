import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ApiManagementClientContext } from "../apiManagementClientContext";
/** Class representing a Reports. */
export declare class Reports {
    private readonly client;
    /**
     * Create a Reports.
     * @param {ApiManagementClientContext} client Reference to the service client.
     */
    constructor(client: ApiManagementClientContext);
    /**
     * Lists report records by API.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter The filter to apply on the operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ReportsListByApiResponse>
     */
    listByApi(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByApiOptionalParams): Promise<Models.ReportsListByApiResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter The filter to apply on the operation.
     * @param callback The callback
     */
    listByApi(resourceGroupName: string, serviceName: string, filter: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter The filter to apply on the operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByApi(resourceGroupName: string, serviceName: string, filter: string, options: Models.ReportsListByApiOptionalParams, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * Lists report records by User.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| userId |
     * select, filter | eq |     | </br>| apiRegion | filter | eq |     | </br>| productId | filter |
     * eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>|
     * operationId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>|
     * callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |
     * |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select,
     * orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount |
     * select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select,
     * orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |
     * |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |
     * | </br>| serviceTimeMax | select |     |     | </br>
     * @param [options] The optional parameters
     * @returns Promise<Models.ReportsListByUserResponse>
     */
    listByUser(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByUserOptionalParams): Promise<Models.ReportsListByUserResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| userId |
     * select, filter | eq |     | </br>| apiRegion | filter | eq |     | </br>| productId | filter |
     * eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>|
     * operationId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>|
     * callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |
     * |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select,
     * orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount |
     * select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select,
     * orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |
     * |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |
     * | </br>| serviceTimeMax | select |     |     | </br>
     * @param callback The callback
     */
    listByUser(resourceGroupName: string, serviceName: string, filter: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| userId |
     * select, filter | eq |     | </br>| apiRegion | filter | eq |     | </br>| productId | filter |
     * eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>|
     * operationId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>|
     * callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |
     * |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select,
     * orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount |
     * select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select,
     * orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |
     * |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |
     * | </br>| serviceTimeMax | select |     |     | </br>
     * @param options The optional parameters
     * @param callback The callback
     */
    listByUser(resourceGroupName: string, serviceName: string, filter: string, options: Models.ReportsListByUserOptionalParams, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * Lists report records by API Operations.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
     * filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     |
     * </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>|
     * operationId | select, filter | eq |     | </br>| callCountSuccess | select, orderBy |     |
     * | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select,
     * orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>|
     * callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     |
     * </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>|
     * apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>|
     * apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
     * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
     * @param [options] The optional parameters
     * @returns Promise<Models.ReportsListByOperationResponse>
     */
    listByOperation(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByOperationOptionalParams): Promise<Models.ReportsListByOperationResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
     * filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     |
     * </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>|
     * operationId | select, filter | eq |     | </br>| callCountSuccess | select, orderBy |     |
     * | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select,
     * orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>|
     * callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     |
     * </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>|
     * apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>|
     * apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
     * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
     * @param callback The callback
     */
    listByOperation(resourceGroupName: string, serviceName: string, filter: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
     * filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     |
     * </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>|
     * operationId | select, filter | eq |     | </br>| callCountSuccess | select, orderBy |     |
     * | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select,
     * orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>|
     * callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     |
     * </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>|
     * apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>|
     * apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
     * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
     * @param options The optional parameters
     * @param callback The callback
     */
    listByOperation(resourceGroupName: string, serviceName: string, filter: string, options: Models.ReportsListByOperationOptionalParams, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * Lists report records by Product.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
     * filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | select, filter | eq |
     * | </br>| subscriptionId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |
     * | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select,
     * orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>|
     * callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     |
     * </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>|
     * apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>|
     * apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
     * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
     * @param [options] The optional parameters
     * @returns Promise<Models.ReportsListByProductResponse>
     */
    listByProduct(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByProductOptionalParams): Promise<Models.ReportsListByProductResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
     * filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | select, filter | eq |
     * | </br>| subscriptionId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |
     * | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select,
     * orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>|
     * callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     |
     * </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>|
     * apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>|
     * apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
     * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
     * @param callback The callback
     */
    listByProduct(resourceGroupName: string, serviceName: string, filter: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
     * filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | select, filter | eq |
     * | </br>| subscriptionId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |
     * | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select,
     * orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>|
     * callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     |
     * </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>|
     * apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>|
     * apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
     * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
     * @param options The optional parameters
     * @param callback The callback
     */
    listByProduct(resourceGroupName: string, serviceName: string, filter: string, options: Models.ReportsListByProductOptionalParams, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * Lists report records by geography.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| country | select |     |     | </br>| region | select |     |
     * | </br>| zip | select |     |     | </br>| apiRegion | filter | eq |     | </br>| userId |
     * filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |
     * | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>|
     * callCountSuccess | select |     |     | </br>| callCountBlocked | select |     |     | </br>|
     * callCountFailed | select |     |     | </br>| callCountOther | select |     |     | </br>|
     * bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>|
     * cacheMissCount | select |     |     | </br>| apiTimeAvg | select |     |     | </br>| apiTimeMin
     * | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |
     * |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |
     * | </br>
     * @param [options] The optional parameters
     * @returns Promise<Models.ReportsListByGeoResponse>
     */
    listByGeo(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByGeoOptionalParams): Promise<Models.ReportsListByGeoResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| country | select |     |     | </br>| region | select |     |
     * | </br>| zip | select |     |     | </br>| apiRegion | filter | eq |     | </br>| userId |
     * filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |
     * | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>|
     * callCountSuccess | select |     |     | </br>| callCountBlocked | select |     |     | </br>|
     * callCountFailed | select |     |     | </br>| callCountOther | select |     |     | </br>|
     * bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>|
     * cacheMissCount | select |     |     | </br>| apiTimeAvg | select |     |     | </br>| apiTimeMin
     * | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |
     * |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |
     * | </br>
     * @param callback The callback
     */
    listByGeo(resourceGroupName: string, serviceName: string, filter: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| country | select |     |     | </br>| region | select |     |
     * | </br>| zip | select |     |     | </br>| apiRegion | filter | eq |     | </br>| userId |
     * filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |
     * | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>|
     * callCountSuccess | select |     |     | </br>| callCountBlocked | select |     |     | </br>|
     * callCountFailed | select |     |     | </br>| callCountOther | select |     |     | </br>|
     * bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>|
     * cacheMissCount | select |     |     | </br>| apiTimeAvg | select |     |     | </br>| apiTimeMin
     * | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |
     * |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |
     * | </br>
     * @param options The optional parameters
     * @param callback The callback
     */
    listByGeo(resourceGroupName: string, serviceName: string, filter: string, options: Models.ReportsListByGeoOptionalParams, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * Lists report records by subscription.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
     * filter | eq |     | </br>| userId | select, filter | eq |     | </br>| productId | select,
     * filter | eq |     | </br>| subscriptionId | select, filter | eq |     | </br>| callCountSuccess
     * | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>|
     * callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |
     * | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |
     * |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |
     * | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     |
     * </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
     * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
     * @param [options] The optional parameters
     * @returns Promise<Models.ReportsListBySubscriptionResponse>
     */
    listBySubscription(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListBySubscriptionOptionalParams): Promise<Models.ReportsListBySubscriptionResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
     * filter | eq |     | </br>| userId | select, filter | eq |     | </br>| productId | select,
     * filter | eq |     | </br>| subscriptionId | select, filter | eq |     | </br>| callCountSuccess
     * | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>|
     * callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |
     * | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |
     * |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |
     * | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     |
     * </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
     * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
     * @param callback The callback
     */
    listBySubscription(resourceGroupName: string, serviceName: string, filter: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion |
     * filter | eq |     | </br>| userId | select, filter | eq |     | </br>| productId | select,
     * filter | eq |     | </br>| subscriptionId | select, filter | eq |     | </br>| callCountSuccess
     * | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>|
     * callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |
     * | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |
     * |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |
     * | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     |
     * </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>|
     * serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscription(resourceGroupName: string, serviceName: string, filter: string, options: Models.ReportsListBySubscriptionOptionalParams, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * Lists report records by Time.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter, select | ge, le |     | </br>| interval | select |     |     | </br>| apiRegion | filter
     * | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     | </br>|
     * subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId |
     * filter | eq |     | </br>| callCountSuccess | select |     |     | </br>| callCountBlocked |
     * select |     |     | </br>| callCountFailed | select |     |     | </br>| callCountOther |
     * select |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount |
     * select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select |
     * |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>|
     * serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>|
     * serviceTimeMax | select |     |     | </br>
     * @param interval By time interval. Interval must be multiple of 15 minutes and may not be zero.
     * The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This
     * code can be used to convert TimeSpan to a valid interval string: XmlConvert.ToString(new
     * TimeSpan(hours, minutes, seconds)).
     * @param [options] The optional parameters
     * @returns Promise<Models.ReportsListByTimeResponse>
     */
    listByTime(resourceGroupName: string, serviceName: string, filter: string, interval: string, options?: Models.ReportsListByTimeOptionalParams): Promise<Models.ReportsListByTimeResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter, select | ge, le |     | </br>| interval | select |     |     | </br>| apiRegion | filter
     * | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     | </br>|
     * subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId |
     * filter | eq |     | </br>| callCountSuccess | select |     |     | </br>| callCountBlocked |
     * select |     |     | </br>| callCountFailed | select |     |     | </br>| callCountOther |
     * select |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount |
     * select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select |
     * |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>|
     * serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>|
     * serviceTimeMax | select |     |     | </br>
     * @param interval By time interval. Interval must be multiple of 15 minutes and may not be zero.
     * The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This
     * code can be used to convert TimeSpan to a valid interval string: XmlConvert.ToString(new
     * TimeSpan(hours, minutes, seconds)).
     * @param callback The callback
     */
    listByTime(resourceGroupName: string, serviceName: string, filter: string, interval: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter, select | ge, le |     | </br>| interval | select |     |     | </br>| apiRegion | filter
     * | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     | </br>|
     * subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId |
     * filter | eq |     | </br>| callCountSuccess | select |     |     | </br>| callCountBlocked |
     * select |     |     | </br>| callCountFailed | select |     |     | </br>| callCountOther |
     * select |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount |
     * select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select |
     * |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>|
     * serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>|
     * serviceTimeMax | select |     |     | </br>
     * @param interval By time interval. Interval must be multiple of 15 minutes and may not be zero.
     * The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This
     * code can be used to convert TimeSpan to a valid interval string: XmlConvert.ToString(new
     * TimeSpan(hours, minutes, seconds)).
     * @param options The optional parameters
     * @param callback The callback
     */
    listByTime(resourceGroupName: string, serviceName: string, filter: string, interval: string, options: Models.ReportsListByTimeOptionalParams, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * Lists report records by Request.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |
     * | </br>| productId | filter | eq |     | </br>| userId | filter | eq |     | </br>| apiRegion |
     * filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>
     * @param [options] The optional parameters
     * @returns Promise<Models.ReportsListByRequestResponse>
     */
    listByRequest(resourceGroupName: string, serviceName: string, filter: string, options?: Models.ReportsListByRequestOptionalParams): Promise<Models.ReportsListByRequestResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |
     * | </br>| productId | filter | eq |     | </br>| userId | filter | eq |     | </br>| apiRegion |
     * filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>
     * @param callback The callback
     */
    listByRequest(resourceGroupName: string, serviceName: string, filter: string, callback: msRest.ServiceCallback<Models.RequestReportCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param filter |   Field     |     Usage     |     Supported operators     |     Supported
     * functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp |
     * filter | ge, le |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |
     * | </br>| productId | filter | eq |     | </br>| userId | filter | eq |     | </br>| apiRegion |
     * filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>
     * @param options The optional parameters
     * @param callback The callback
     */
    listByRequest(resourceGroupName: string, serviceName: string, filter: string, options: Models.ReportsListByRequestOptionalParams, callback: msRest.ServiceCallback<Models.RequestReportCollection>): void;
    /**
     * Lists report records by API.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ReportsListByApiNextResponse>
     */
    listByApiNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReportsListByApiNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByApiNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByApiNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * Lists report records by User.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ReportsListByUserNextResponse>
     */
    listByUserNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReportsListByUserNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByUserNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByUserNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * Lists report records by API Operations.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ReportsListByOperationNextResponse>
     */
    listByOperationNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReportsListByOperationNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByOperationNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByOperationNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * Lists report records by Product.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ReportsListByProductNextResponse>
     */
    listByProductNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReportsListByProductNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByProductNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByProductNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * Lists report records by geography.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ReportsListByGeoNextResponse>
     */
    listByGeoNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReportsListByGeoNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByGeoNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByGeoNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * Lists report records by subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ReportsListBySubscriptionNextResponse>
     */
    listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReportsListBySubscriptionNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * Lists report records by Time.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ReportsListByTimeNextResponse>
     */
    listByTimeNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ReportsListByTimeNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByTimeNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByTimeNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ReportCollection>): void;
}
//# sourceMappingURL=reports.d.ts.map