import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ApiManagementClientContext } from "../apiManagementClientContext";
/** Class representing a ApiTagDescription. */
export declare class ApiTagDescription {
    private readonly client;
    /**
     * Create a ApiTagDescription.
     * @param {ApiManagementClientContext} client Reference to the service client.
     */
    constructor(client: ApiManagementClientContext);
    /**
     * Lists all Tags descriptions in scope of API. Model similar to swagger - tagDescription is
     * defined on API level but tag may be assigned to the Operations
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApiTagDescriptionListByServiceResponse>
     */
    listByService(resourceGroupName: string, serviceName: string, apiId: string, options?: Models.ApiTagDescriptionListByServiceOptionalParams): Promise<Models.ApiTagDescriptionListByServiceResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param callback The callback
     */
    listByService(resourceGroupName: string, serviceName: string, apiId: string, callback: msRest.ServiceCallback<Models.TagDescriptionCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByService(resourceGroupName: string, serviceName: string, apiId: string, options: Models.ApiTagDescriptionListByServiceOptionalParams, callback: msRest.ServiceCallback<Models.TagDescriptionCollection>): void;
    /**
     * Gets the entity state version of the tag specified by its identifier.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param tagId Tag identifier. Must be unique in the current API Management service instance.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApiTagDescriptionGetEntityTagResponse>
     */
    getEntityTag(resourceGroupName: string, serviceName: string, apiId: string, tagId: string, options?: msRest.RequestOptionsBase): Promise<Models.ApiTagDescriptionGetEntityTagResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param tagId Tag identifier. Must be unique in the current API Management service instance.
     * @param callback The callback
     */
    getEntityTag(resourceGroupName: string, serviceName: string, apiId: string, tagId: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param tagId Tag identifier. Must be unique in the current API Management service instance.
     * @param options The optional parameters
     * @param callback The callback
     */
    getEntityTag(resourceGroupName: string, serviceName: string, apiId: string, tagId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Get Tag description in scope of API
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param tagId Tag identifier. Must be unique in the current API Management service instance.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApiTagDescriptionGetResponse>
     */
    get(resourceGroupName: string, serviceName: string, apiId: string, tagId: string, options?: msRest.RequestOptionsBase): Promise<Models.ApiTagDescriptionGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param tagId Tag identifier. Must be unique in the current API Management service instance.
     * @param callback The callback
     */
    get(resourceGroupName: string, serviceName: string, apiId: string, tagId: string, callback: msRest.ServiceCallback<Models.TagDescriptionContract>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param tagId Tag identifier. Must be unique in the current API Management service instance.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, serviceName: string, apiId: string, tagId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TagDescriptionContract>): void;
    /**
     * Create/Update tag description in scope of the Api.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param tagId Tag identifier. Must be unique in the current API Management service instance.
     * @param parameters Create parameters.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApiTagDescriptionCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, apiId: string, tagId: string, parameters: Models.TagDescriptionCreateParameters, options?: Models.ApiTagDescriptionCreateOrUpdateOptionalParams): Promise<Models.ApiTagDescriptionCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param tagId Tag identifier. Must be unique in the current API Management service instance.
     * @param parameters Create parameters.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, apiId: string, tagId: string, parameters: Models.TagDescriptionCreateParameters, callback: msRest.ServiceCallback<Models.TagDescriptionContract>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param tagId Tag identifier. Must be unique in the current API Management service instance.
     * @param parameters Create parameters.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, apiId: string, tagId: string, parameters: Models.TagDescriptionCreateParameters, options: Models.ApiTagDescriptionCreateOrUpdateOptionalParams, callback: msRest.ServiceCallback<Models.TagDescriptionContract>): void;
    /**
     * Delete tag description for the Api.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param tagId Tag identifier. Must be unique in the current API Management service instance.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, serviceName: string, apiId: string, tagId: string, ifMatch: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param tagId Tag identifier. Must be unique in the current API Management service instance.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, serviceName: string, apiId: string, tagId: string, ifMatch: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param tagId Tag identifier. Must be unique in the current API Management service instance.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, serviceName: string, apiId: string, tagId: string, ifMatch: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Lists all Tags descriptions in scope of API. Model similar to swagger - tagDescription is
     * defined on API level but tag may be assigned to the Operations
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApiTagDescriptionListByServiceNextResponse>
     */
    listByServiceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ApiTagDescriptionListByServiceNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByServiceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TagDescriptionCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByServiceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TagDescriptionCollection>): void;
}
//# sourceMappingURL=apiTagDescription.d.ts.map