/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/reportsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Reports. */
var Reports = /** @class */ (function () {
    /**
     * Create a Reports.
     * @param {ApiManagementClientContext} client Reference to the service client.
     */
    function Reports(client) {
        this.client = client;
    }
    Reports.prototype.listByApi = function (resourceGroupName, serviceName, filter, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serviceName: serviceName,
            filter: filter,
            options: options
        }, listByApiOperationSpec, callback);
    };
    Reports.prototype.listByUser = function (resourceGroupName, serviceName, filter, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serviceName: serviceName,
            filter: filter,
            options: options
        }, listByUserOperationSpec, callback);
    };
    Reports.prototype.listByOperation = function (resourceGroupName, serviceName, filter, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serviceName: serviceName,
            filter: filter,
            options: options
        }, listByOperationOperationSpec, callback);
    };
    Reports.prototype.listByProduct = function (resourceGroupName, serviceName, filter, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serviceName: serviceName,
            filter: filter,
            options: options
        }, listByProductOperationSpec, callback);
    };
    Reports.prototype.listByGeo = function (resourceGroupName, serviceName, filter, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serviceName: serviceName,
            filter: filter,
            options: options
        }, listByGeoOperationSpec, callback);
    };
    Reports.prototype.listBySubscription = function (resourceGroupName, serviceName, filter, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serviceName: serviceName,
            filter: filter,
            options: options
        }, listBySubscriptionOperationSpec, callback);
    };
    Reports.prototype.listByTime = function (resourceGroupName, serviceName, filter, interval, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serviceName: serviceName,
            filter: filter,
            interval: interval,
            options: options
        }, listByTimeOperationSpec, callback);
    };
    Reports.prototype.listByRequest = function (resourceGroupName, serviceName, filter, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serviceName: serviceName,
            filter: filter,
            options: options
        }, listByRequestOperationSpec, callback);
    };
    Reports.prototype.listByApiNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByApiNextOperationSpec, callback);
    };
    Reports.prototype.listByUserNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByUserNextOperationSpec, callback);
    };
    Reports.prototype.listByOperationNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByOperationNextOperationSpec, callback);
    };
    Reports.prototype.listByProductNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByProductNextOperationSpec, callback);
    };
    Reports.prototype.listByGeoNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByGeoNextOperationSpec, callback);
    };
    Reports.prototype.listBySubscriptionNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listBySubscriptionNextOperationSpec, callback);
    };
    Reports.prototype.listByTimeNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByTimeNextOperationSpec, callback);
    };
    return Reports;
}());
export { Reports };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listByApiOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byApi",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.filter1,
        Parameters.top,
        Parameters.skip,
        Parameters.orderby,
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ReportCollection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByUserOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byUser",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.filter1,
        Parameters.top,
        Parameters.skip,
        Parameters.orderby,
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ReportCollection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByOperationOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byOperation",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.filter1,
        Parameters.top,
        Parameters.skip,
        Parameters.orderby,
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ReportCollection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByProductOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byProduct",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.filter1,
        Parameters.top,
        Parameters.skip,
        Parameters.orderby,
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ReportCollection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByGeoOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byGeo",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.filter1,
        Parameters.top,
        Parameters.skip,
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ReportCollection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listBySubscriptionOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/bySubscription",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.filter1,
        Parameters.top,
        Parameters.skip,
        Parameters.orderby,
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ReportCollection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByTimeOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byTime",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.filter1,
        Parameters.top,
        Parameters.skip,
        Parameters.orderby,
        Parameters.interval,
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ReportCollection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByRequestOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byRequest",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.filter1,
        Parameters.top,
        Parameters.skip,
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RequestReportCollection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByApiNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ReportCollection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByUserNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ReportCollection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByOperationNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ReportCollection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByProductNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ReportCollection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByGeoNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ReportCollection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listBySubscriptionNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ReportCollection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listByTimeNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ReportCollection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=reports.js.map