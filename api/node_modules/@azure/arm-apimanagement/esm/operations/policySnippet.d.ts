import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ApiManagementClientContext } from "../apiManagementClientContext";
/** Class representing a PolicySnippet. */
export declare class PolicySnippet {
    private readonly client;
    /**
     * Create a PolicySnippet.
     * @param {ApiManagementClientContext} client Reference to the service client.
     */
    constructor(client: ApiManagementClientContext);
    /**
     * Lists all policy snippets.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param [options] The optional parameters
     * @returns Promise<Models.PolicySnippetListByServiceResponse>
     */
    listByService(resourceGroupName: string, serviceName: string, options?: Models.PolicySnippetListByServiceOptionalParams): Promise<Models.PolicySnippetListByServiceResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param callback The callback
     */
    listByService(resourceGroupName: string, serviceName: string, callback: msRest.ServiceCallback<Models.PolicySnippetsCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByService(resourceGroupName: string, serviceName: string, options: Models.PolicySnippetListByServiceOptionalParams, callback: msRest.ServiceCallback<Models.PolicySnippetsCollection>): void;
}
//# sourceMappingURL=policySnippet.d.ts.map