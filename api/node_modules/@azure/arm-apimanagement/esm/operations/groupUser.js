/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/groupUserMappers";
import * as Parameters from "../models/parameters";
/** Class representing a GroupUser. */
var GroupUser = /** @class */ (function () {
    /**
     * Create a GroupUser.
     * @param {ApiManagementClientContext} client Reference to the service client.
     */
    function GroupUser(client) {
        this.client = client;
    }
    GroupUser.prototype.list = function (resourceGroupName, serviceName, groupId, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serviceName: serviceName,
            groupId: groupId,
            options: options
        }, listOperationSpec, callback);
    };
    GroupUser.prototype.checkEntityExists = function (resourceGroupName, serviceName, groupId, userId, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serviceName: serviceName,
            groupId: groupId,
            userId: userId,
            options: options
        }, checkEntityExistsOperationSpec, callback);
    };
    GroupUser.prototype.create = function (resourceGroupName, serviceName, groupId, userId, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serviceName: serviceName,
            groupId: groupId,
            userId: userId,
            options: options
        }, createOperationSpec, callback);
    };
    GroupUser.prototype.deleteMethod = function (resourceGroupName, serviceName, groupId, userId, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serviceName: serviceName,
            groupId: groupId,
            userId: userId,
            options: options
        }, deleteMethodOperationSpec, callback);
    };
    GroupUser.prototype.listNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listNextOperationSpec, callback);
    };
    return GroupUser;
}());
export { GroupUser };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.groupId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.filter0,
        Parameters.top,
        Parameters.skip,
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.UserCollection
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var checkEntityExistsOperationSpec = {
    httpMethod: "HEAD",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{userId}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.groupId,
        Parameters.userId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        204: {},
        404: {},
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var createOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{userId}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.groupId,
        Parameters.userId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.UserContract
        },
        201: {
            bodyMapper: Mappers.UserContract
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var deleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{userId}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.groupId,
        Parameters.userId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        204: {},
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.UserCollection
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=groupUser.js.map