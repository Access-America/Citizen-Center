import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ApiManagementClientContext } from "../apiManagementClientContext";
/** Class representing a ProductApi. */
export declare class ProductApi {
    private readonly client;
    /**
     * Create a ProductApi.
     * @param {ApiManagementClientContext} client Reference to the service client.
     */
    constructor(client: ApiManagementClientContext);
    /**
     * Lists a collection of the APIs associated with a product.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service
     * instance.
     * @param [options] The optional parameters
     * @returns Promise<Models.ProductApiListByProductResponse>
     */
    listByProduct(resourceGroupName: string, serviceName: string, productId: string, options?: Models.ProductApiListByProductOptionalParams): Promise<Models.ProductApiListByProductResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service
     * instance.
     * @param callback The callback
     */
    listByProduct(resourceGroupName: string, serviceName: string, productId: string, callback: msRest.ServiceCallback<Models.ApiCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service
     * instance.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByProduct(resourceGroupName: string, serviceName: string, productId: string, options: Models.ProductApiListByProductOptionalParams, callback: msRest.ServiceCallback<Models.ApiCollection>): void;
    /**
     * Checks that API entity specified by identifier is associated with the Product entity.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service
     * instance.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    checkEntityExists(resourceGroupName: string, serviceName: string, productId: string, apiId: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service
     * instance.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param callback The callback
     */
    checkEntityExists(resourceGroupName: string, serviceName: string, productId: string, apiId: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service
     * instance.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param options The optional parameters
     * @param callback The callback
     */
    checkEntityExists(resourceGroupName: string, serviceName: string, productId: string, apiId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Adds an API to the specified product.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service
     * instance.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param [options] The optional parameters
     * @returns Promise<Models.ProductApiCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, productId: string, apiId: string, options?: msRest.RequestOptionsBase): Promise<Models.ProductApiCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service
     * instance.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, productId: string, apiId: string, callback: msRest.ServiceCallback<Models.ApiContract>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service
     * instance.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, productId: string, apiId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApiContract>): void;
    /**
     * Deletes the specified API from the specified product.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service
     * instance.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, serviceName: string, productId: string, apiId: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service
     * instance.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, serviceName: string, productId: string, apiId: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service
     * instance.
     * @param apiId API revision identifier. Must be unique in the current API Management service
     * instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, serviceName: string, productId: string, apiId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Lists a collection of the APIs associated with a product.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ProductApiListByProductNextResponse>
     */
    listByProductNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ProductApiListByProductNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByProductNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ApiCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByProductNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApiCollection>): void;
}
//# sourceMappingURL=productApi.d.ts.map