import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ApiManagementClientContext } from "../apiManagementClientContext";
/** Class representing a ApiVersionSet. */
export declare class ApiVersionSet {
    private readonly client;
    /**
     * Create a ApiVersionSet.
     * @param {ApiManagementClientContext} client Reference to the service client.
     */
    constructor(client: ApiManagementClientContext);
    /**
     * Lists a collection of API Version Sets in the specified service instance.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApiVersionSetListByServiceResponse>
     */
    listByService(resourceGroupName: string, serviceName: string, options?: Models.ApiVersionSetListByServiceOptionalParams): Promise<Models.ApiVersionSetListByServiceResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param callback The callback
     */
    listByService(resourceGroupName: string, serviceName: string, callback: msRest.ServiceCallback<Models.ApiVersionSetCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByService(resourceGroupName: string, serviceName: string, options: Models.ApiVersionSetListByServiceOptionalParams, callback: msRest.ServiceCallback<Models.ApiVersionSetCollection>): void;
    /**
     * Gets the entity state (Etag) version of the Api Version Set specified by its identifier.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param versionSetId Api Version Set identifier. Must be unique in the current API Management
     * service instance.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApiVersionSetGetEntityTagResponse>
     */
    getEntityTag(resourceGroupName: string, serviceName: string, versionSetId: string, options?: msRest.RequestOptionsBase): Promise<Models.ApiVersionSetGetEntityTagResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param versionSetId Api Version Set identifier. Must be unique in the current API Management
     * service instance.
     * @param callback The callback
     */
    getEntityTag(resourceGroupName: string, serviceName: string, versionSetId: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param versionSetId Api Version Set identifier. Must be unique in the current API Management
     * service instance.
     * @param options The optional parameters
     * @param callback The callback
     */
    getEntityTag(resourceGroupName: string, serviceName: string, versionSetId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets the details of the Api Version Set specified by its identifier.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param versionSetId Api Version Set identifier. Must be unique in the current API Management
     * service instance.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApiVersionSetGetResponse>
     */
    get(resourceGroupName: string, serviceName: string, versionSetId: string, options?: msRest.RequestOptionsBase): Promise<Models.ApiVersionSetGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param versionSetId Api Version Set identifier. Must be unique in the current API Management
     * service instance.
     * @param callback The callback
     */
    get(resourceGroupName: string, serviceName: string, versionSetId: string, callback: msRest.ServiceCallback<Models.ApiVersionSetContract>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param versionSetId Api Version Set identifier. Must be unique in the current API Management
     * service instance.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, serviceName: string, versionSetId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApiVersionSetContract>): void;
    /**
     * Creates or Updates a Api Version Set.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param versionSetId Api Version Set identifier. Must be unique in the current API Management
     * service instance.
     * @param parameters Create or update parameters.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApiVersionSetCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, versionSetId: string, parameters: Models.ApiVersionSetContract, options?: Models.ApiVersionSetCreateOrUpdateOptionalParams): Promise<Models.ApiVersionSetCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param versionSetId Api Version Set identifier. Must be unique in the current API Management
     * service instance.
     * @param parameters Create or update parameters.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, versionSetId: string, parameters: Models.ApiVersionSetContract, callback: msRest.ServiceCallback<Models.ApiVersionSetContract>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param versionSetId Api Version Set identifier. Must be unique in the current API Management
     * service instance.
     * @param parameters Create or update parameters.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, versionSetId: string, parameters: Models.ApiVersionSetContract, options: Models.ApiVersionSetCreateOrUpdateOptionalParams, callback: msRest.ServiceCallback<Models.ApiVersionSetContract>): void;
    /**
     * Updates the details of the Api VersionSet specified by its identifier.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param versionSetId Api Version Set identifier. Must be unique in the current API Management
     * service instance.
     * @param parameters Update parameters.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    update(resourceGroupName: string, serviceName: string, versionSetId: string, parameters: Models.ApiVersionSetUpdateParameters, ifMatch: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param versionSetId Api Version Set identifier. Must be unique in the current API Management
     * service instance.
     * @param parameters Update parameters.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param callback The callback
     */
    update(resourceGroupName: string, serviceName: string, versionSetId: string, parameters: Models.ApiVersionSetUpdateParameters, ifMatch: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param versionSetId Api Version Set identifier. Must be unique in the current API Management
     * service instance.
     * @param parameters Update parameters.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, serviceName: string, versionSetId: string, parameters: Models.ApiVersionSetUpdateParameters, ifMatch: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Deletes specific Api Version Set.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param versionSetId Api Version Set identifier. Must be unique in the current API Management
     * service instance.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, serviceName: string, versionSetId: string, ifMatch: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param versionSetId Api Version Set identifier. Must be unique in the current API Management
     * service instance.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, serviceName: string, versionSetId: string, ifMatch: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param versionSetId Api Version Set identifier. Must be unique in the current API Management
     * service instance.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, serviceName: string, versionSetId: string, ifMatch: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Lists a collection of API Version Sets in the specified service instance.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ApiVersionSetListByServiceNextResponse>
     */
    listByServiceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ApiVersionSetListByServiceNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByServiceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ApiVersionSetCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByServiceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApiVersionSetCollection>): void;
}
//# sourceMappingURL=apiVersionSet.d.ts.map