import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ApiManagementClientContext } from "../apiManagementClientContext";
/** Class representing a ProductSubscriptions. */
export declare class ProductSubscriptions {
    private readonly client;
    /**
     * Create a ProductSubscriptions.
     * @param {ApiManagementClientContext} client Reference to the service client.
     */
    constructor(client: ApiManagementClientContext);
    /**
     * Lists the collection of subscriptions to the specified product.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service
     * instance.
     * @param [options] The optional parameters
     * @returns Promise<Models.ProductSubscriptionsListResponse>
     */
    list(resourceGroupName: string, serviceName: string, productId: string, options?: Models.ProductSubscriptionsListOptionalParams): Promise<Models.ProductSubscriptionsListResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service
     * instance.
     * @param callback The callback
     */
    list(resourceGroupName: string, serviceName: string, productId: string, callback: msRest.ServiceCallback<Models.SubscriptionCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service
     * instance.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(resourceGroupName: string, serviceName: string, productId: string, options: Models.ProductSubscriptionsListOptionalParams, callback: msRest.ServiceCallback<Models.SubscriptionCollection>): void;
    /**
     * Lists the collection of subscriptions to the specified product.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ProductSubscriptionsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ProductSubscriptionsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SubscriptionCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SubscriptionCollection>): void;
}
//# sourceMappingURL=productSubscriptions.d.ts.map