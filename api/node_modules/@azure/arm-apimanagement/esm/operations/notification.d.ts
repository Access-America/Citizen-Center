import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ApiManagementClientContext } from "../apiManagementClientContext";
/** Class representing a Notification. */
export declare class Notification {
    private readonly client;
    /**
     * Create a Notification.
     * @param {ApiManagementClientContext} client Reference to the service client.
     */
    constructor(client: ApiManagementClientContext);
    /**
     * Lists a collection of properties defined within a service instance.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param [options] The optional parameters
     * @returns Promise<Models.NotificationListByServiceResponse>
     */
    listByService(resourceGroupName: string, serviceName: string, options?: Models.NotificationListByServiceOptionalParams): Promise<Models.NotificationListByServiceResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param callback The callback
     */
    listByService(resourceGroupName: string, serviceName: string, callback: msRest.ServiceCallback<Models.NotificationCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByService(resourceGroupName: string, serviceName: string, options: Models.NotificationListByServiceOptionalParams, callback: msRest.ServiceCallback<Models.NotificationCollection>): void;
    /**
     * Gets the details of the Notification specified by its identifier.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param notificationName Notification Name Identifier. Possible values include:
     * 'RequestPublisherNotificationMessage', 'PurchasePublisherNotificationMessage',
     * 'NewApplicationNotificationMessage', 'BCC', 'NewIssuePublisherNotificationMessage',
     * 'AccountClosedPublisher', 'QuotaLimitApproachingPublisherNotificationMessage'
     * @param [options] The optional parameters
     * @returns Promise<Models.NotificationGetResponse>
     */
    get(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, options?: msRest.RequestOptionsBase): Promise<Models.NotificationGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param notificationName Notification Name Identifier. Possible values include:
     * 'RequestPublisherNotificationMessage', 'PurchasePublisherNotificationMessage',
     * 'NewApplicationNotificationMessage', 'BCC', 'NewIssuePublisherNotificationMessage',
     * 'AccountClosedPublisher', 'QuotaLimitApproachingPublisherNotificationMessage'
     * @param callback The callback
     */
    get(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, callback: msRest.ServiceCallback<Models.NotificationContract>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param notificationName Notification Name Identifier. Possible values include:
     * 'RequestPublisherNotificationMessage', 'PurchasePublisherNotificationMessage',
     * 'NewApplicationNotificationMessage', 'BCC', 'NewIssuePublisherNotificationMessage',
     * 'AccountClosedPublisher', 'QuotaLimitApproachingPublisherNotificationMessage'
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.NotificationContract>): void;
    /**
     * Create or Update API Management publisher notification.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param notificationName Notification Name Identifier. Possible values include:
     * 'RequestPublisherNotificationMessage', 'PurchasePublisherNotificationMessage',
     * 'NewApplicationNotificationMessage', 'BCC', 'NewIssuePublisherNotificationMessage',
     * 'AccountClosedPublisher', 'QuotaLimitApproachingPublisherNotificationMessage'
     * @param [options] The optional parameters
     * @returns Promise<Models.NotificationCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, options?: Models.NotificationCreateOrUpdateOptionalParams): Promise<Models.NotificationCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param notificationName Notification Name Identifier. Possible values include:
     * 'RequestPublisherNotificationMessage', 'PurchasePublisherNotificationMessage',
     * 'NewApplicationNotificationMessage', 'BCC', 'NewIssuePublisherNotificationMessage',
     * 'AccountClosedPublisher', 'QuotaLimitApproachingPublisherNotificationMessage'
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, callback: msRest.ServiceCallback<Models.NotificationContract>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param notificationName Notification Name Identifier. Possible values include:
     * 'RequestPublisherNotificationMessage', 'PurchasePublisherNotificationMessage',
     * 'NewApplicationNotificationMessage', 'BCC', 'NewIssuePublisherNotificationMessage',
     * 'AccountClosedPublisher', 'QuotaLimitApproachingPublisherNotificationMessage'
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, options: Models.NotificationCreateOrUpdateOptionalParams, callback: msRest.ServiceCallback<Models.NotificationContract>): void;
    /**
     * Lists a collection of properties defined within a service instance.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.NotificationListByServiceNextResponse>
     */
    listByServiceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.NotificationListByServiceNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByServiceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.NotificationCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByServiceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.NotificationCollection>): void;
}
//# sourceMappingURL=notification.d.ts.map