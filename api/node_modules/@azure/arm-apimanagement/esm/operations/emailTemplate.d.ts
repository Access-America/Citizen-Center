import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { ApiManagementClientContext } from "../apiManagementClientContext";
/** Class representing a EmailTemplate. */
export declare class EmailTemplate {
    private readonly client;
    /**
     * Create a EmailTemplate.
     * @param {ApiManagementClientContext} client Reference to the service client.
     */
    constructor(client: ApiManagementClientContext);
    /**
     * Lists a collection of properties defined within a service instance.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param [options] The optional parameters
     * @returns Promise<Models.EmailTemplateListByServiceResponse>
     */
    listByService(resourceGroupName: string, serviceName: string, options?: Models.EmailTemplateListByServiceOptionalParams): Promise<Models.EmailTemplateListByServiceResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param callback The callback
     */
    listByService(resourceGroupName: string, serviceName: string, callback: msRest.ServiceCallback<Models.EmailTemplateCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByService(resourceGroupName: string, serviceName: string, options: Models.EmailTemplateListByServiceOptionalParams, callback: msRest.ServiceCallback<Models.EmailTemplateCollection>): void;
    /**
     * Gets the entity state (Etag) version of the email template specified by its identifier.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param templateName Email Template Name Identifier. Possible values include:
     * 'applicationApprovedNotificationMessage', 'accountClosedDeveloper',
     * 'quotaLimitApproachingDeveloperNotificationMessage', 'newDeveloperNotificationMessage',
     * 'emailChangeIdentityDefault', 'inviteUserNotificationMessage', 'newCommentNotificationMessage',
     * 'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',
     * 'purchaseDeveloperNotificationMessage', 'passwordResetIdentityDefault',
     * 'passwordResetByAdminNotificationMessage', 'rejectDeveloperNotificationMessage',
     * 'requestDeveloperNotificationMessage'
     * @param [options] The optional parameters
     * @returns Promise<Models.EmailTemplateGetEntityTagResponse>
     */
    getEntityTag(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, options?: msRest.RequestOptionsBase): Promise<Models.EmailTemplateGetEntityTagResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param templateName Email Template Name Identifier. Possible values include:
     * 'applicationApprovedNotificationMessage', 'accountClosedDeveloper',
     * 'quotaLimitApproachingDeveloperNotificationMessage', 'newDeveloperNotificationMessage',
     * 'emailChangeIdentityDefault', 'inviteUserNotificationMessage', 'newCommentNotificationMessage',
     * 'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',
     * 'purchaseDeveloperNotificationMessage', 'passwordResetIdentityDefault',
     * 'passwordResetByAdminNotificationMessage', 'rejectDeveloperNotificationMessage',
     * 'requestDeveloperNotificationMessage'
     * @param callback The callback
     */
    getEntityTag(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param templateName Email Template Name Identifier. Possible values include:
     * 'applicationApprovedNotificationMessage', 'accountClosedDeveloper',
     * 'quotaLimitApproachingDeveloperNotificationMessage', 'newDeveloperNotificationMessage',
     * 'emailChangeIdentityDefault', 'inviteUserNotificationMessage', 'newCommentNotificationMessage',
     * 'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',
     * 'purchaseDeveloperNotificationMessage', 'passwordResetIdentityDefault',
     * 'passwordResetByAdminNotificationMessage', 'rejectDeveloperNotificationMessage',
     * 'requestDeveloperNotificationMessage'
     * @param options The optional parameters
     * @param callback The callback
     */
    getEntityTag(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Gets the details of the email template specified by its identifier.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param templateName Email Template Name Identifier. Possible values include:
     * 'applicationApprovedNotificationMessage', 'accountClosedDeveloper',
     * 'quotaLimitApproachingDeveloperNotificationMessage', 'newDeveloperNotificationMessage',
     * 'emailChangeIdentityDefault', 'inviteUserNotificationMessage', 'newCommentNotificationMessage',
     * 'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',
     * 'purchaseDeveloperNotificationMessage', 'passwordResetIdentityDefault',
     * 'passwordResetByAdminNotificationMessage', 'rejectDeveloperNotificationMessage',
     * 'requestDeveloperNotificationMessage'
     * @param [options] The optional parameters
     * @returns Promise<Models.EmailTemplateGetResponse>
     */
    get(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, options?: msRest.RequestOptionsBase): Promise<Models.EmailTemplateGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param templateName Email Template Name Identifier. Possible values include:
     * 'applicationApprovedNotificationMessage', 'accountClosedDeveloper',
     * 'quotaLimitApproachingDeveloperNotificationMessage', 'newDeveloperNotificationMessage',
     * 'emailChangeIdentityDefault', 'inviteUserNotificationMessage', 'newCommentNotificationMessage',
     * 'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',
     * 'purchaseDeveloperNotificationMessage', 'passwordResetIdentityDefault',
     * 'passwordResetByAdminNotificationMessage', 'rejectDeveloperNotificationMessage',
     * 'requestDeveloperNotificationMessage'
     * @param callback The callback
     */
    get(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, callback: msRest.ServiceCallback<Models.EmailTemplateContract>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param templateName Email Template Name Identifier. Possible values include:
     * 'applicationApprovedNotificationMessage', 'accountClosedDeveloper',
     * 'quotaLimitApproachingDeveloperNotificationMessage', 'newDeveloperNotificationMessage',
     * 'emailChangeIdentityDefault', 'inviteUserNotificationMessage', 'newCommentNotificationMessage',
     * 'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',
     * 'purchaseDeveloperNotificationMessage', 'passwordResetIdentityDefault',
     * 'passwordResetByAdminNotificationMessage', 'rejectDeveloperNotificationMessage',
     * 'requestDeveloperNotificationMessage'
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EmailTemplateContract>): void;
    /**
     * Updates an Email Template.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param templateName Email Template Name Identifier. Possible values include:
     * 'applicationApprovedNotificationMessage', 'accountClosedDeveloper',
     * 'quotaLimitApproachingDeveloperNotificationMessage', 'newDeveloperNotificationMessage',
     * 'emailChangeIdentityDefault', 'inviteUserNotificationMessage', 'newCommentNotificationMessage',
     * 'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',
     * 'purchaseDeveloperNotificationMessage', 'passwordResetIdentityDefault',
     * 'passwordResetByAdminNotificationMessage', 'rejectDeveloperNotificationMessage',
     * 'requestDeveloperNotificationMessage'
     * @param parameters Email Template update parameters.
     * @param [options] The optional parameters
     * @returns Promise<Models.EmailTemplateCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, parameters: Models.EmailTemplateUpdateParameters, options?: Models.EmailTemplateCreateOrUpdateOptionalParams): Promise<Models.EmailTemplateCreateOrUpdateResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param templateName Email Template Name Identifier. Possible values include:
     * 'applicationApprovedNotificationMessage', 'accountClosedDeveloper',
     * 'quotaLimitApproachingDeveloperNotificationMessage', 'newDeveloperNotificationMessage',
     * 'emailChangeIdentityDefault', 'inviteUserNotificationMessage', 'newCommentNotificationMessage',
     * 'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',
     * 'purchaseDeveloperNotificationMessage', 'passwordResetIdentityDefault',
     * 'passwordResetByAdminNotificationMessage', 'rejectDeveloperNotificationMessage',
     * 'requestDeveloperNotificationMessage'
     * @param parameters Email Template update parameters.
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, parameters: Models.EmailTemplateUpdateParameters, callback: msRest.ServiceCallback<Models.EmailTemplateContract>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param templateName Email Template Name Identifier. Possible values include:
     * 'applicationApprovedNotificationMessage', 'accountClosedDeveloper',
     * 'quotaLimitApproachingDeveloperNotificationMessage', 'newDeveloperNotificationMessage',
     * 'emailChangeIdentityDefault', 'inviteUserNotificationMessage', 'newCommentNotificationMessage',
     * 'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',
     * 'purchaseDeveloperNotificationMessage', 'passwordResetIdentityDefault',
     * 'passwordResetByAdminNotificationMessage', 'rejectDeveloperNotificationMessage',
     * 'requestDeveloperNotificationMessage'
     * @param parameters Email Template update parameters.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, parameters: Models.EmailTemplateUpdateParameters, options: Models.EmailTemplateCreateOrUpdateOptionalParams, callback: msRest.ServiceCallback<Models.EmailTemplateContract>): void;
    /**
     * Updates the specific Email Template.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param templateName Email Template Name Identifier. Possible values include:
     * 'applicationApprovedNotificationMessage', 'accountClosedDeveloper',
     * 'quotaLimitApproachingDeveloperNotificationMessage', 'newDeveloperNotificationMessage',
     * 'emailChangeIdentityDefault', 'inviteUserNotificationMessage', 'newCommentNotificationMessage',
     * 'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',
     * 'purchaseDeveloperNotificationMessage', 'passwordResetIdentityDefault',
     * 'passwordResetByAdminNotificationMessage', 'rejectDeveloperNotificationMessage',
     * 'requestDeveloperNotificationMessage'
     * @param parameters Update parameters.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    update(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, parameters: Models.EmailTemplateUpdateParameters, ifMatch: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param templateName Email Template Name Identifier. Possible values include:
     * 'applicationApprovedNotificationMessage', 'accountClosedDeveloper',
     * 'quotaLimitApproachingDeveloperNotificationMessage', 'newDeveloperNotificationMessage',
     * 'emailChangeIdentityDefault', 'inviteUserNotificationMessage', 'newCommentNotificationMessage',
     * 'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',
     * 'purchaseDeveloperNotificationMessage', 'passwordResetIdentityDefault',
     * 'passwordResetByAdminNotificationMessage', 'rejectDeveloperNotificationMessage',
     * 'requestDeveloperNotificationMessage'
     * @param parameters Update parameters.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param callback The callback
     */
    update(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, parameters: Models.EmailTemplateUpdateParameters, ifMatch: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param templateName Email Template Name Identifier. Possible values include:
     * 'applicationApprovedNotificationMessage', 'accountClosedDeveloper',
     * 'quotaLimitApproachingDeveloperNotificationMessage', 'newDeveloperNotificationMessage',
     * 'emailChangeIdentityDefault', 'inviteUserNotificationMessage', 'newCommentNotificationMessage',
     * 'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',
     * 'purchaseDeveloperNotificationMessage', 'passwordResetIdentityDefault',
     * 'passwordResetByAdminNotificationMessage', 'rejectDeveloperNotificationMessage',
     * 'requestDeveloperNotificationMessage'
     * @param parameters Update parameters.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, parameters: Models.EmailTemplateUpdateParameters, ifMatch: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Reset the Email Template to default template provided by the API Management service instance.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param templateName Email Template Name Identifier. Possible values include:
     * 'applicationApprovedNotificationMessage', 'accountClosedDeveloper',
     * 'quotaLimitApproachingDeveloperNotificationMessage', 'newDeveloperNotificationMessage',
     * 'emailChangeIdentityDefault', 'inviteUserNotificationMessage', 'newCommentNotificationMessage',
     * 'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',
     * 'purchaseDeveloperNotificationMessage', 'passwordResetIdentityDefault',
     * 'passwordResetByAdminNotificationMessage', 'rejectDeveloperNotificationMessage',
     * 'requestDeveloperNotificationMessage'
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, ifMatch: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param templateName Email Template Name Identifier. Possible values include:
     * 'applicationApprovedNotificationMessage', 'accountClosedDeveloper',
     * 'quotaLimitApproachingDeveloperNotificationMessage', 'newDeveloperNotificationMessage',
     * 'emailChangeIdentityDefault', 'inviteUserNotificationMessage', 'newCommentNotificationMessage',
     * 'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',
     * 'purchaseDeveloperNotificationMessage', 'passwordResetIdentityDefault',
     * 'passwordResetByAdminNotificationMessage', 'rejectDeveloperNotificationMessage',
     * 'requestDeveloperNotificationMessage'
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, ifMatch: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param templateName Email Template Name Identifier. Possible values include:
     * 'applicationApprovedNotificationMessage', 'accountClosedDeveloper',
     * 'quotaLimitApproachingDeveloperNotificationMessage', 'newDeveloperNotificationMessage',
     * 'emailChangeIdentityDefault', 'inviteUserNotificationMessage', 'newCommentNotificationMessage',
     * 'confirmSignUpIdentityDefault', 'newIssueNotificationMessage',
     * 'purchaseDeveloperNotificationMessage', 'passwordResetIdentityDefault',
     * 'passwordResetByAdminNotificationMessage', 'rejectDeveloperNotificationMessage',
     * 'requestDeveloperNotificationMessage'
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     * response of the GET request or it should be * for unconditional update.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, ifMatch: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Lists a collection of properties defined within a service instance.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.EmailTemplateListByServiceNextResponse>
     */
    listByServiceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.EmailTemplateListByServiceNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByServiceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.EmailTemplateCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByServiceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EmailTemplateCollection>): void;
}
//# sourceMappingURL=emailTemplate.d.ts.map