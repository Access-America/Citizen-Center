import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { StorageManagementClientContext } from "../storageManagementClientContext";
/** Class representing a Usages. */
export declare class Usages {
    private readonly client;
    /**
     * Create a Usages.
     * @param {StorageManagementClientContext} client Reference to the service client.
     */
    constructor(client: StorageManagementClientContext);
    /**
     * Gets the current usage count and the limit for the resources of the location under the
     * subscription.
     * @param location The location of the Azure Storage resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.UsagesListByLocationResponse>
     */
    listByLocation(location: string, options?: msRest.RequestOptionsBase): Promise<Models.UsagesListByLocationResponse>;
    /**
     * @param location The location of the Azure Storage resource.
     * @param callback The callback
     */
    listByLocation(location: string, callback: msRest.ServiceCallback<Models.UsageListResult>): void;
    /**
     * @param location The location of the Azure Storage resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByLocation(location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UsageListResult>): void;
}
//# sourceMappingURL=usages.d.ts.map