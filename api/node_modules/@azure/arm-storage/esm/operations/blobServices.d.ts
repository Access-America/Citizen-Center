import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { StorageManagementClientContext } from "../storageManagementClientContext";
/** Class representing a BlobServices. */
export declare class BlobServices {
    private readonly client;
    /**
     * Create a BlobServices.
     * @param {StorageManagementClientContext} client Reference to the service client.
     */
    constructor(client: StorageManagementClientContext);
    /**
     * Sets the properties of a storage account’s Blob service, including properties for Storage
     * Analytics and CORS (Cross-Origin Resource Sharing) rules.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param parameters The properties of a storage account’s Blob service, including properties for
     * Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
     * @param [options] The optional parameters
     * @returns Promise<Models.BlobServicesSetServicePropertiesResponse>
     */
    setServiceProperties(resourceGroupName: string, accountName: string, parameters: Models.BlobServiceProperties, options?: msRest.RequestOptionsBase): Promise<Models.BlobServicesSetServicePropertiesResponse>;
    /**
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param parameters The properties of a storage account’s Blob service, including properties for
     * Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
     * @param callback The callback
     */
    setServiceProperties(resourceGroupName: string, accountName: string, parameters: Models.BlobServiceProperties, callback: msRest.ServiceCallback<Models.BlobServiceProperties>): void;
    /**
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param parameters The properties of a storage account’s Blob service, including properties for
     * Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
     * @param options The optional parameters
     * @param callback The callback
     */
    setServiceProperties(resourceGroupName: string, accountName: string, parameters: Models.BlobServiceProperties, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BlobServiceProperties>): void;
    /**
     * Gets the properties of a storage account’s Blob service, including properties for Storage
     * Analytics and CORS (Cross-Origin Resource Sharing) rules.
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param [options] The optional parameters
     * @returns Promise<Models.BlobServicesGetServicePropertiesResponse>
     */
    getServiceProperties(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase): Promise<Models.BlobServicesGetServicePropertiesResponse>;
    /**
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param callback The callback
     */
    getServiceProperties(resourceGroupName: string, accountName: string, callback: msRest.ServiceCallback<Models.BlobServiceProperties>): void;
    /**
     * @param resourceGroupName The name of the resource group within the user's subscription. The name
     * is case insensitive.
     * @param accountName The name of the storage account within the specified resource group. Storage
     * account names must be between 3 and 24 characters in length and use numbers and lower-case
     * letters only.
     * @param options The optional parameters
     * @param callback The callback
     */
    getServiceProperties(resourceGroupName: string, accountName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BlobServiceProperties>): void;
}
//# sourceMappingURL=blobServices.d.ts.map