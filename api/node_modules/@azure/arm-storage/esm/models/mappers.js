/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as tslib_1 from "tslib";
import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
export var CloudError = CloudErrorMapper;
export var BaseResource = BaseResourceMapper;
export var OperationDisplay = {
    serializedName: "Operation_display",
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "provider",
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Dimension = {
    serializedName: "Dimension",
    type: {
        name: "Composite",
        className: "Dimension",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var MetricSpecification = {
    serializedName: "MetricSpecification",
    type: {
        name: "Composite",
        className: "MetricSpecification",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                type: {
                    name: "String"
                }
            },
            displayDescription: {
                serializedName: "displayDescription",
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                type: {
                    name: "String"
                }
            },
            dimensions: {
                serializedName: "dimensions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Dimension"
                        }
                    }
                }
            },
            aggregationType: {
                serializedName: "aggregationType",
                type: {
                    name: "String"
                }
            },
            fillGapWithZero: {
                serializedName: "fillGapWithZero",
                type: {
                    name: "Boolean"
                }
            },
            category: {
                serializedName: "category",
                type: {
                    name: "String"
                }
            },
            resourceIdDimensionNameOverride: {
                serializedName: "resourceIdDimensionNameOverride",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ServiceSpecification = {
    serializedName: "ServiceSpecification",
    type: {
        name: "Composite",
        className: "ServiceSpecification",
        modelProperties: {
            metricSpecifications: {
                serializedName: "metricSpecifications",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetricSpecification"
                        }
                    }
                }
            }
        }
    }
};
export var Operation = {
    serializedName: "Operation",
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            },
            origin: {
                serializedName: "origin",
                type: {
                    name: "String"
                }
            },
            serviceSpecification: {
                serializedName: "properties.serviceSpecification",
                type: {
                    name: "Composite",
                    className: "ServiceSpecification"
                }
            }
        }
    }
};
export var StorageAccountCheckNameAvailabilityParameters = {
    serializedName: "StorageAccountCheckNameAvailabilityParameters",
    type: {
        name: "Composite",
        className: "StorageAccountCheckNameAvailabilityParameters",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                required: true,
                isConstant: true,
                serializedName: "type",
                defaultValue: 'Microsoft.Storage/storageAccounts',
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SKUCapability = {
    serializedName: "SKUCapability",
    type: {
        name: "Composite",
        className: "SKUCapability",
        modelProperties: {
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            value: {
                readOnly: true,
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Restriction = {
    serializedName: "Restriction",
    type: {
        name: "Composite",
        className: "Restriction",
        modelProperties: {
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            values: {
                readOnly: true,
                serializedName: "values",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            reasonCode: {
                serializedName: "reasonCode",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Sku = {
    serializedName: "Sku",
    type: {
        name: "Composite",
        className: "Sku",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            tier: {
                readOnly: true,
                serializedName: "tier",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Standard",
                        "Premium"
                    ]
                }
            },
            resourceType: {
                readOnly: true,
                serializedName: "resourceType",
                type: {
                    name: "String"
                }
            },
            kind: {
                readOnly: true,
                serializedName: "kind",
                type: {
                    name: "String"
                }
            },
            locations: {
                readOnly: true,
                serializedName: "locations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            capabilities: {
                readOnly: true,
                serializedName: "capabilities",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SKUCapability"
                        }
                    }
                }
            },
            restrictions: {
                serializedName: "restrictions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Restriction"
                        }
                    }
                }
            }
        }
    }
};
export var CheckNameAvailabilityResult = {
    serializedName: "CheckNameAvailabilityResult",
    type: {
        name: "Composite",
        className: "CheckNameAvailabilityResult",
        modelProperties: {
            nameAvailable: {
                readOnly: true,
                serializedName: "nameAvailable",
                type: {
                    name: "Boolean"
                }
            },
            reason: {
                readOnly: true,
                serializedName: "reason",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "AccountNameInvalid",
                        "AlreadyExists"
                    ]
                }
            },
            message: {
                readOnly: true,
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var CustomDomain = {
    serializedName: "CustomDomain",
    type: {
        name: "Composite",
        className: "CustomDomain",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            useSubDomainName: {
                serializedName: "useSubDomainName",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var EncryptionService = {
    serializedName: "EncryptionService",
    type: {
        name: "Composite",
        className: "EncryptionService",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            lastEnabledTime: {
                readOnly: true,
                serializedName: "lastEnabledTime",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export var EncryptionServices = {
    serializedName: "EncryptionServices",
    type: {
        name: "Composite",
        className: "EncryptionServices",
        modelProperties: {
            blob: {
                serializedName: "blob",
                type: {
                    name: "Composite",
                    className: "EncryptionService"
                }
            },
            file: {
                serializedName: "file",
                type: {
                    name: "Composite",
                    className: "EncryptionService"
                }
            },
            table: {
                readOnly: true,
                serializedName: "table",
                type: {
                    name: "Composite",
                    className: "EncryptionService"
                }
            },
            queue: {
                readOnly: true,
                serializedName: "queue",
                type: {
                    name: "Composite",
                    className: "EncryptionService"
                }
            }
        }
    }
};
export var KeyVaultProperties = {
    serializedName: "KeyVaultProperties",
    type: {
        name: "Composite",
        className: "KeyVaultProperties",
        modelProperties: {
            keyName: {
                serializedName: "keyname",
                type: {
                    name: "String"
                }
            },
            keyVersion: {
                serializedName: "keyversion",
                type: {
                    name: "String"
                }
            },
            keyVaultUri: {
                serializedName: "keyvaulturi",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Encryption = {
    serializedName: "Encryption",
    type: {
        name: "Composite",
        className: "Encryption",
        modelProperties: {
            services: {
                serializedName: "services",
                type: {
                    name: "Composite",
                    className: "EncryptionServices"
                }
            },
            keySource: {
                required: true,
                serializedName: "keySource",
                defaultValue: 'Microsoft.Storage',
                type: {
                    name: "String"
                }
            },
            keyVaultProperties: {
                serializedName: "keyvaultproperties",
                type: {
                    name: "Composite",
                    className: "KeyVaultProperties"
                }
            }
        }
    }
};
export var VirtualNetworkRule = {
    serializedName: "VirtualNetworkRule",
    type: {
        name: "Composite",
        className: "VirtualNetworkRule",
        modelProperties: {
            virtualNetworkResourceId: {
                required: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            action: {
                serializedName: "action",
                defaultValue: 'Allow',
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Allow"
                    ]
                }
            },
            state: {
                serializedName: "state",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "provisioning",
                        "deprovisioning",
                        "succeeded",
                        "failed",
                        "networkSourceDeleted"
                    ]
                }
            }
        }
    }
};
export var IPRule = {
    serializedName: "IPRule",
    type: {
        name: "Composite",
        className: "IPRule",
        modelProperties: {
            iPAddressOrRange: {
                required: true,
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            action: {
                serializedName: "action",
                defaultValue: 'Allow',
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Allow"
                    ]
                }
            }
        }
    }
};
export var NetworkRuleSet = {
    serializedName: "NetworkRuleSet",
    type: {
        name: "Composite",
        className: "NetworkRuleSet",
        modelProperties: {
            bypass: {
                serializedName: "bypass",
                defaultValue: 'AzureServices',
                type: {
                    name: "String"
                }
            },
            virtualNetworkRules: {
                serializedName: "virtualNetworkRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualNetworkRule"
                        }
                    }
                }
            },
            ipRules: {
                serializedName: "ipRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IPRule"
                        }
                    }
                }
            },
            defaultAction: {
                required: true,
                serializedName: "defaultAction",
                defaultValue: 'Allow',
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Allow",
                        "Deny"
                    ]
                }
            }
        }
    }
};
export var AzureFilesIdentityBasedAuthentication = {
    serializedName: "AzureFilesIdentityBasedAuthentication",
    type: {
        name: "Composite",
        className: "AzureFilesIdentityBasedAuthentication",
        modelProperties: {
            directoryServiceOptions: {
                required: true,
                serializedName: "directoryServiceOptions",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Identity = {
    serializedName: "Identity",
    type: {
        name: "Composite",
        className: "Identity",
        modelProperties: {
            principalId: {
                readOnly: true,
                serializedName: "principalId",
                type: {
                    name: "String"
                }
            },
            tenantId: {
                readOnly: true,
                serializedName: "tenantId",
                type: {
                    name: "String"
                }
            },
            type: {
                required: true,
                isConstant: true,
                serializedName: "type",
                defaultValue: 'SystemAssigned',
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var StorageAccountCreateParameters = {
    serializedName: "StorageAccountCreateParameters",
    type: {
        name: "Composite",
        className: "StorageAccountCreateParameters",
        modelProperties: {
            sku: {
                required: true,
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            kind: {
                required: true,
                serializedName: "kind",
                type: {
                    name: "String"
                }
            },
            location: {
                required: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "Identity"
                }
            },
            customDomain: {
                serializedName: "properties.customDomain",
                type: {
                    name: "Composite",
                    className: "CustomDomain"
                }
            },
            encryption: {
                serializedName: "properties.encryption",
                type: {
                    name: "Composite",
                    className: "Encryption"
                }
            },
            networkRuleSet: {
                serializedName: "properties.networkAcls",
                type: {
                    name: "Composite",
                    className: "NetworkRuleSet"
                }
            },
            accessTier: {
                serializedName: "properties.accessTier",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Hot",
                        "Cool"
                    ]
                }
            },
            azureFilesIdentityBasedAuthentication: {
                serializedName: "properties.azureFilesIdentityBasedAuthentication",
                type: {
                    name: "Composite",
                    className: "AzureFilesIdentityBasedAuthentication"
                }
            },
            enableHttpsTrafficOnly: {
                serializedName: "properties.supportsHttpsTrafficOnly",
                type: {
                    name: "Boolean"
                }
            },
            isHnsEnabled: {
                serializedName: "properties.isHnsEnabled",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var Endpoints = {
    serializedName: "Endpoints",
    type: {
        name: "Composite",
        className: "Endpoints",
        modelProperties: {
            blob: {
                readOnly: true,
                serializedName: "blob",
                type: {
                    name: "String"
                }
            },
            queue: {
                readOnly: true,
                serializedName: "queue",
                type: {
                    name: "String"
                }
            },
            table: {
                readOnly: true,
                serializedName: "table",
                type: {
                    name: "String"
                }
            },
            file: {
                readOnly: true,
                serializedName: "file",
                type: {
                    name: "String"
                }
            },
            web: {
                readOnly: true,
                serializedName: "web",
                type: {
                    name: "String"
                }
            },
            dfs: {
                readOnly: true,
                serializedName: "dfs",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var GeoReplicationStats = {
    serializedName: "GeoReplicationStats",
    type: {
        name: "Composite",
        className: "GeoReplicationStats",
        modelProperties: {
            status: {
                readOnly: true,
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            lastSyncTime: {
                readOnly: true,
                serializedName: "lastSyncTime",
                type: {
                    name: "DateTime"
                }
            },
            canFailover: {
                readOnly: true,
                serializedName: "canFailover",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var Resource = {
    serializedName: "Resource",
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var TrackedResource = {
    serializedName: "TrackedResource",
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: tslib_1.__assign({}, Resource.type.modelProperties, { tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, location: {
                required: true,
                serializedName: "location",
                type: {
                    name: "String"
                }
            } })
    }
};
export var StorageAccount = {
    serializedName: "StorageAccount",
    type: {
        name: "Composite",
        className: "StorageAccount",
        modelProperties: tslib_1.__assign({}, TrackedResource.type.modelProperties, { sku: {
                readOnly: true,
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, kind: {
                readOnly: true,
                serializedName: "kind",
                type: {
                    name: "String"
                }
            }, identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "Identity"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Creating",
                        "ResolvingDNS",
                        "Succeeded"
                    ]
                }
            }, primaryEndpoints: {
                readOnly: true,
                serializedName: "properties.primaryEndpoints",
                type: {
                    name: "Composite",
                    className: "Endpoints"
                }
            }, primaryLocation: {
                readOnly: true,
                serializedName: "properties.primaryLocation",
                type: {
                    name: "String"
                }
            }, statusOfPrimary: {
                readOnly: true,
                serializedName: "properties.statusOfPrimary",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "available",
                        "unavailable"
                    ]
                }
            }, lastGeoFailoverTime: {
                readOnly: true,
                serializedName: "properties.lastGeoFailoverTime",
                type: {
                    name: "DateTime"
                }
            }, secondaryLocation: {
                readOnly: true,
                serializedName: "properties.secondaryLocation",
                type: {
                    name: "String"
                }
            }, statusOfSecondary: {
                readOnly: true,
                serializedName: "properties.statusOfSecondary",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "available",
                        "unavailable"
                    ]
                }
            }, creationTime: {
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, customDomain: {
                readOnly: true,
                serializedName: "properties.customDomain",
                type: {
                    name: "Composite",
                    className: "CustomDomain"
                }
            }, secondaryEndpoints: {
                readOnly: true,
                serializedName: "properties.secondaryEndpoints",
                type: {
                    name: "Composite",
                    className: "Endpoints"
                }
            }, encryption: {
                readOnly: true,
                serializedName: "properties.encryption",
                type: {
                    name: "Composite",
                    className: "Encryption"
                }
            }, accessTier: {
                readOnly: true,
                serializedName: "properties.accessTier",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Hot",
                        "Cool"
                    ]
                }
            }, azureFilesIdentityBasedAuthentication: {
                serializedName: "properties.azureFilesIdentityBasedAuthentication",
                type: {
                    name: "Composite",
                    className: "AzureFilesIdentityBasedAuthentication"
                }
            }, enableHttpsTrafficOnly: {
                serializedName: "properties.supportsHttpsTrafficOnly",
                type: {
                    name: "Boolean"
                }
            }, networkRuleSet: {
                readOnly: true,
                serializedName: "properties.networkAcls",
                type: {
                    name: "Composite",
                    className: "NetworkRuleSet"
                }
            }, isHnsEnabled: {
                serializedName: "properties.isHnsEnabled",
                type: {
                    name: "Boolean"
                }
            }, geoReplicationStats: {
                readOnly: true,
                serializedName: "properties.geoReplicationStats",
                type: {
                    name: "Composite",
                    className: "GeoReplicationStats"
                }
            }, failoverInProgress: {
                readOnly: true,
                serializedName: "properties.failoverInProgress",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var StorageAccountKey = {
    serializedName: "StorageAccountKey",
    type: {
        name: "Composite",
        className: "StorageAccountKey",
        modelProperties: {
            keyName: {
                readOnly: true,
                serializedName: "keyName",
                type: {
                    name: "String"
                }
            },
            value: {
                readOnly: true,
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            permissions: {
                readOnly: true,
                serializedName: "permissions",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Read",
                        "Full"
                    ]
                }
            }
        }
    }
};
export var StorageAccountListKeysResult = {
    serializedName: "StorageAccountListKeysResult",
    type: {
        name: "Composite",
        className: "StorageAccountListKeysResult",
        modelProperties: {
            keys: {
                readOnly: true,
                serializedName: "keys",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StorageAccountKey"
                        }
                    }
                }
            }
        }
    }
};
export var StorageAccountRegenerateKeyParameters = {
    serializedName: "StorageAccountRegenerateKeyParameters",
    type: {
        name: "Composite",
        className: "StorageAccountRegenerateKeyParameters",
        modelProperties: {
            keyName: {
                required: true,
                serializedName: "keyName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var StorageAccountUpdateParameters = {
    serializedName: "StorageAccountUpdateParameters",
    type: {
        name: "Composite",
        className: "StorageAccountUpdateParameters",
        modelProperties: {
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "Identity"
                }
            },
            customDomain: {
                serializedName: "properties.customDomain",
                type: {
                    name: "Composite",
                    className: "CustomDomain"
                }
            },
            encryption: {
                serializedName: "properties.encryption",
                type: {
                    name: "Composite",
                    className: "Encryption"
                }
            },
            accessTier: {
                serializedName: "properties.accessTier",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Hot",
                        "Cool"
                    ]
                }
            },
            azureFilesIdentityBasedAuthentication: {
                serializedName: "properties.azureFilesIdentityBasedAuthentication",
                type: {
                    name: "Composite",
                    className: "AzureFilesIdentityBasedAuthentication"
                }
            },
            enableHttpsTrafficOnly: {
                serializedName: "properties.supportsHttpsTrafficOnly",
                type: {
                    name: "Boolean"
                }
            },
            networkRuleSet: {
                serializedName: "properties.networkAcls",
                type: {
                    name: "Composite",
                    className: "NetworkRuleSet"
                }
            },
            kind: {
                serializedName: "kind",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var UsageName = {
    serializedName: "UsageName",
    type: {
        name: "Composite",
        className: "UsageName",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            localizedValue: {
                readOnly: true,
                serializedName: "localizedValue",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Usage = {
    serializedName: "Usage",
    type: {
        name: "Composite",
        className: "Usage",
        modelProperties: {
            unit: {
                readOnly: true,
                serializedName: "unit",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Count",
                        "Bytes",
                        "Seconds",
                        "Percent",
                        "CountsPerSecond",
                        "BytesPerSecond"
                    ]
                }
            },
            currentValue: {
                readOnly: true,
                serializedName: "currentValue",
                type: {
                    name: "Number"
                }
            },
            limit: {
                readOnly: true,
                serializedName: "limit",
                type: {
                    name: "Number"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "UsageName"
                }
            }
        }
    }
};
export var AccountSasParameters = {
    serializedName: "AccountSasParameters",
    type: {
        name: "Composite",
        className: "AccountSasParameters",
        modelProperties: {
            services: {
                required: true,
                serializedName: "signedServices",
                type: {
                    name: "String"
                }
            },
            resourceTypes: {
                required: true,
                serializedName: "signedResourceTypes",
                type: {
                    name: "String"
                }
            },
            permissions: {
                required: true,
                serializedName: "signedPermission",
                type: {
                    name: "String"
                }
            },
            iPAddressOrRange: {
                serializedName: "signedIp",
                type: {
                    name: "String"
                }
            },
            protocols: {
                serializedName: "signedProtocol",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "https,http",
                        "https"
                    ]
                }
            },
            sharedAccessStartTime: {
                serializedName: "signedStart",
                type: {
                    name: "DateTime"
                }
            },
            sharedAccessExpiryTime: {
                required: true,
                serializedName: "signedExpiry",
                type: {
                    name: "DateTime"
                }
            },
            keyToSign: {
                serializedName: "keyToSign",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ListAccountSasResponse = {
    serializedName: "ListAccountSasResponse",
    type: {
        name: "Composite",
        className: "ListAccountSasResponse",
        modelProperties: {
            accountSasToken: {
                readOnly: true,
                serializedName: "accountSasToken",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ServiceSasParameters = {
    serializedName: "ServiceSasParameters",
    type: {
        name: "Composite",
        className: "ServiceSasParameters",
        modelProperties: {
            canonicalizedResource: {
                required: true,
                serializedName: "canonicalizedResource",
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "signedResource",
                type: {
                    name: "String"
                }
            },
            permissions: {
                serializedName: "signedPermission",
                type: {
                    name: "String"
                }
            },
            iPAddressOrRange: {
                serializedName: "signedIp",
                type: {
                    name: "String"
                }
            },
            protocols: {
                serializedName: "signedProtocol",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "https,http",
                        "https"
                    ]
                }
            },
            sharedAccessStartTime: {
                serializedName: "signedStart",
                type: {
                    name: "DateTime"
                }
            },
            sharedAccessExpiryTime: {
                serializedName: "signedExpiry",
                type: {
                    name: "DateTime"
                }
            },
            identifier: {
                serializedName: "signedIdentifier",
                constraints: {
                    MaxLength: 64
                },
                type: {
                    name: "String"
                }
            },
            partitionKeyStart: {
                serializedName: "startPk",
                type: {
                    name: "String"
                }
            },
            partitionKeyEnd: {
                serializedName: "endPk",
                type: {
                    name: "String"
                }
            },
            rowKeyStart: {
                serializedName: "startRk",
                type: {
                    name: "String"
                }
            },
            rowKeyEnd: {
                serializedName: "endRk",
                type: {
                    name: "String"
                }
            },
            keyToSign: {
                serializedName: "keyToSign",
                type: {
                    name: "String"
                }
            },
            cacheControl: {
                serializedName: "rscc",
                type: {
                    name: "String"
                }
            },
            contentDisposition: {
                serializedName: "rscd",
                type: {
                    name: "String"
                }
            },
            contentEncoding: {
                serializedName: "rsce",
                type: {
                    name: "String"
                }
            },
            contentLanguage: {
                serializedName: "rscl",
                type: {
                    name: "String"
                }
            },
            contentType: {
                serializedName: "rsct",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ListServiceSasResponse = {
    serializedName: "ListServiceSasResponse",
    type: {
        name: "Composite",
        className: "ListServiceSasResponse",
        modelProperties: {
            serviceSasToken: {
                readOnly: true,
                serializedName: "serviceSasToken",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DateAfterModification = {
    serializedName: "DateAfterModification",
    type: {
        name: "Composite",
        className: "DateAfterModification",
        modelProperties: {
            daysAfterModificationGreaterThan: {
                required: true,
                serializedName: "daysAfterModificationGreaterThan",
                constraints: {
                    InclusiveMinimum: 0
                },
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var ManagementPolicyBaseBlob = {
    serializedName: "ManagementPolicyBaseBlob",
    type: {
        name: "Composite",
        className: "ManagementPolicyBaseBlob",
        modelProperties: {
            tierToCool: {
                serializedName: "tierToCool",
                type: {
                    name: "Composite",
                    className: "DateAfterModification"
                }
            },
            tierToArchive: {
                serializedName: "tierToArchive",
                type: {
                    name: "Composite",
                    className: "DateAfterModification"
                }
            },
            deleteProperty: {
                serializedName: "delete",
                type: {
                    name: "Composite",
                    className: "DateAfterModification"
                }
            }
        }
    }
};
export var DateAfterCreation = {
    serializedName: "DateAfterCreation",
    type: {
        name: "Composite",
        className: "DateAfterCreation",
        modelProperties: {
            daysAfterCreationGreaterThan: {
                required: true,
                serializedName: "daysAfterCreationGreaterThan",
                constraints: {
                    InclusiveMinimum: 0
                },
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var ManagementPolicySnapShot = {
    serializedName: "ManagementPolicySnapShot",
    type: {
        name: "Composite",
        className: "ManagementPolicySnapShot",
        modelProperties: {
            deleteProperty: {
                serializedName: "delete",
                type: {
                    name: "Composite",
                    className: "DateAfterCreation"
                }
            }
        }
    }
};
export var ManagementPolicyAction = {
    serializedName: "ManagementPolicyAction",
    type: {
        name: "Composite",
        className: "ManagementPolicyAction",
        modelProperties: {
            baseBlob: {
                serializedName: "baseBlob",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyBaseBlob"
                }
            },
            snapshot: {
                serializedName: "snapshot",
                type: {
                    name: "Composite",
                    className: "ManagementPolicySnapShot"
                }
            }
        }
    }
};
export var ManagementPolicyFilter = {
    serializedName: "ManagementPolicyFilter",
    type: {
        name: "Composite",
        className: "ManagementPolicyFilter",
        modelProperties: {
            prefixMatch: {
                serializedName: "prefixMatch",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            blobTypes: {
                required: true,
                serializedName: "blobTypes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var ManagementPolicyDefinition = {
    serializedName: "ManagementPolicyDefinition",
    type: {
        name: "Composite",
        className: "ManagementPolicyDefinition",
        modelProperties: {
            actions: {
                required: true,
                serializedName: "actions",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyAction"
                }
            },
            filters: {
                serializedName: "filters",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyFilter"
                }
            }
        }
    }
};
export var ManagementPolicyRule = {
    serializedName: "ManagementPolicyRule",
    type: {
        name: "Composite",
        className: "ManagementPolicyRule",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                required: true,
                isConstant: true,
                serializedName: "type",
                defaultValue: 'Lifecycle',
                type: {
                    name: "String"
                }
            },
            definition: {
                required: true,
                serializedName: "definition",
                type: {
                    name: "Composite",
                    className: "ManagementPolicyDefinition"
                }
            }
        }
    }
};
export var ManagementPolicySchema = {
    serializedName: "ManagementPolicySchema",
    type: {
        name: "Composite",
        className: "ManagementPolicySchema",
        modelProperties: {
            rules: {
                required: true,
                serializedName: "rules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagementPolicyRule"
                        }
                    }
                }
            }
        }
    }
};
export var ManagementPolicy = {
    serializedName: "ManagementPolicy",
    type: {
        name: "Composite",
        className: "ManagementPolicy",
        modelProperties: tslib_1.__assign({}, Resource.type.modelProperties, { lastModifiedTime: {
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, policy: {
                required: true,
                serializedName: "properties.policy",
                type: {
                    name: "Composite",
                    className: "ManagementPolicySchema"
                }
            } })
    }
};
export var ProxyResource = {
    serializedName: "ProxyResource",
    type: {
        name: "Composite",
        className: "ProxyResource",
        modelProperties: tslib_1.__assign({}, Resource.type.modelProperties)
    }
};
export var AzureEntityResource = {
    serializedName: "AzureEntityResource",
    type: {
        name: "Composite",
        className: "AzureEntityResource",
        modelProperties: tslib_1.__assign({}, Resource.type.modelProperties, { etag: {
                readOnly: true,
                serializedName: "etag",
                type: {
                    name: "String"
                }
            } })
    }
};
export var UpdateHistoryProperty = {
    serializedName: "UpdateHistoryProperty",
    type: {
        name: "Composite",
        className: "UpdateHistoryProperty",
        modelProperties: {
            update: {
                readOnly: true,
                serializedName: "update",
                type: {
                    name: "String"
                }
            },
            immutabilityPeriodSinceCreationInDays: {
                readOnly: true,
                serializedName: "immutabilityPeriodSinceCreationInDays",
                type: {
                    name: "Number"
                }
            },
            timestamp: {
                readOnly: true,
                serializedName: "timestamp",
                type: {
                    name: "DateTime"
                }
            },
            objectIdentifier: {
                readOnly: true,
                serializedName: "objectIdentifier",
                type: {
                    name: "String"
                }
            },
            tenantId: {
                readOnly: true,
                serializedName: "tenantId",
                type: {
                    name: "String"
                }
            },
            upn: {
                readOnly: true,
                serializedName: "upn",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ImmutabilityPolicyProperties = {
    serializedName: "ImmutabilityPolicyProperties",
    type: {
        name: "Composite",
        className: "ImmutabilityPolicyProperties",
        modelProperties: {
            immutabilityPeriodSinceCreationInDays: {
                required: true,
                serializedName: "properties.immutabilityPeriodSinceCreationInDays",
                type: {
                    name: "Number"
                }
            },
            state: {
                readOnly: true,
                serializedName: "properties.state",
                type: {
                    name: "String"
                }
            },
            etag: {
                readOnly: true,
                serializedName: "etag",
                type: {
                    name: "String"
                }
            },
            updateHistory: {
                readOnly: true,
                serializedName: "updateHistory",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "UpdateHistoryProperty"
                        }
                    }
                }
            }
        }
    }
};
export var TagProperty = {
    serializedName: "TagProperty",
    type: {
        name: "Composite",
        className: "TagProperty",
        modelProperties: {
            tag: {
                readOnly: true,
                serializedName: "tag",
                type: {
                    name: "String"
                }
            },
            timestamp: {
                readOnly: true,
                serializedName: "timestamp",
                type: {
                    name: "DateTime"
                }
            },
            objectIdentifier: {
                readOnly: true,
                serializedName: "objectIdentifier",
                type: {
                    name: "String"
                }
            },
            tenantId: {
                readOnly: true,
                serializedName: "tenantId",
                type: {
                    name: "String"
                }
            },
            upn: {
                readOnly: true,
                serializedName: "upn",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var LegalHoldProperties = {
    serializedName: "LegalHoldProperties",
    type: {
        name: "Composite",
        className: "LegalHoldProperties",
        modelProperties: {
            hasLegalHold: {
                readOnly: true,
                serializedName: "hasLegalHold",
                type: {
                    name: "Boolean"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TagProperty"
                        }
                    }
                }
            }
        }
    }
};
export var BlobContainer = {
    serializedName: "BlobContainer",
    type: {
        name: "Composite",
        className: "BlobContainer",
        modelProperties: tslib_1.__assign({}, AzureEntityResource.type.modelProperties, { publicAccess: {
                serializedName: "properties.publicAccess",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Container",
                        "Blob",
                        "None"
                    ]
                }
            }, lastModifiedTime: {
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, leaseStatus: {
                readOnly: true,
                serializedName: "properties.leaseStatus",
                type: {
                    name: "String"
                }
            }, leaseState: {
                readOnly: true,
                serializedName: "properties.leaseState",
                type: {
                    name: "String"
                }
            }, leaseDuration: {
                readOnly: true,
                serializedName: "properties.leaseDuration",
                type: {
                    name: "String"
                }
            }, metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, immutabilityPolicy: {
                readOnly: true,
                serializedName: "properties.immutabilityPolicy",
                type: {
                    name: "Composite",
                    className: "ImmutabilityPolicyProperties"
                }
            }, legalHold: {
                readOnly: true,
                serializedName: "properties.legalHold",
                type: {
                    name: "Composite",
                    className: "LegalHoldProperties"
                }
            }, hasLegalHold: {
                readOnly: true,
                serializedName: "properties.hasLegalHold",
                type: {
                    name: "Boolean"
                }
            }, hasImmutabilityPolicy: {
                readOnly: true,
                serializedName: "properties.hasImmutabilityPolicy",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var ImmutabilityPolicy = {
    serializedName: "ImmutabilityPolicy",
    type: {
        name: "Composite",
        className: "ImmutabilityPolicy",
        modelProperties: tslib_1.__assign({}, AzureEntityResource.type.modelProperties, { immutabilityPeriodSinceCreationInDays: {
                required: true,
                serializedName: "properties.immutabilityPeriodSinceCreationInDays",
                type: {
                    name: "Number"
                }
            }, state: {
                readOnly: true,
                serializedName: "properties.state",
                type: {
                    name: "String"
                }
            } })
    }
};
export var LegalHold = {
    serializedName: "LegalHold",
    type: {
        name: "Composite",
        className: "LegalHold",
        modelProperties: {
            hasLegalHold: {
                readOnly: true,
                serializedName: "hasLegalHold",
                type: {
                    name: "Boolean"
                }
            },
            tags: {
                required: true,
                serializedName: "tags",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var ListContainerItem = {
    serializedName: "ListContainerItem",
    type: {
        name: "Composite",
        className: "ListContainerItem",
        modelProperties: tslib_1.__assign({}, AzureEntityResource.type.modelProperties, { publicAccess: {
                serializedName: "properties.publicAccess",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Container",
                        "Blob",
                        "None"
                    ]
                }
            }, lastModifiedTime: {
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, leaseStatus: {
                readOnly: true,
                serializedName: "properties.leaseStatus",
                type: {
                    name: "String"
                }
            }, leaseState: {
                readOnly: true,
                serializedName: "properties.leaseState",
                type: {
                    name: "String"
                }
            }, leaseDuration: {
                readOnly: true,
                serializedName: "properties.leaseDuration",
                type: {
                    name: "String"
                }
            }, metadata: {
                serializedName: "properties.metadata",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, immutabilityPolicy: {
                readOnly: true,
                serializedName: "properties.immutabilityPolicy",
                type: {
                    name: "Composite",
                    className: "ImmutabilityPolicyProperties"
                }
            }, legalHold: {
                readOnly: true,
                serializedName: "properties.legalHold",
                type: {
                    name: "Composite",
                    className: "LegalHoldProperties"
                }
            }, hasLegalHold: {
                readOnly: true,
                serializedName: "properties.hasLegalHold",
                type: {
                    name: "Boolean"
                }
            }, hasImmutabilityPolicy: {
                readOnly: true,
                serializedName: "properties.hasImmutabilityPolicy",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var CorsRule = {
    serializedName: "CorsRule",
    type: {
        name: "Composite",
        className: "CorsRule",
        modelProperties: {
            allowedOrigins: {
                required: true,
                serializedName: "allowedOrigins",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            allowedMethods: {
                required: true,
                serializedName: "allowedMethods",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            maxAgeInSeconds: {
                required: true,
                serializedName: "maxAgeInSeconds",
                type: {
                    name: "Number"
                }
            },
            exposedHeaders: {
                required: true,
                serializedName: "exposedHeaders",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            allowedHeaders: {
                required: true,
                serializedName: "allowedHeaders",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var CorsRules = {
    serializedName: "CorsRules",
    type: {
        name: "Composite",
        className: "CorsRules",
        modelProperties: {
            corsRules: {
                serializedName: "corsRules",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CorsRule"
                        }
                    }
                }
            }
        }
    }
};
export var DeleteRetentionPolicy = {
    serializedName: "DeleteRetentionPolicy",
    type: {
        name: "Composite",
        className: "DeleteRetentionPolicy",
        modelProperties: {
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            days: {
                serializedName: "days",
                constraints: {
                    InclusiveMaximum: 365,
                    InclusiveMinimum: 1
                },
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var BlobServiceProperties = {
    serializedName: "BlobServiceProperties",
    type: {
        name: "Composite",
        className: "BlobServiceProperties",
        modelProperties: tslib_1.__assign({}, Resource.type.modelProperties, { cors: {
                serializedName: "properties.cors",
                type: {
                    name: "Composite",
                    className: "CorsRules"
                }
            }, defaultServiceVersion: {
                serializedName: "properties.defaultServiceVersion",
                type: {
                    name: "String"
                }
            }, deleteRetentionPolicy: {
                serializedName: "properties.deleteRetentionPolicy",
                type: {
                    name: "Composite",
                    className: "DeleteRetentionPolicy"
                }
            }, automaticSnapshotPolicyEnabled: {
                serializedName: "properties.automaticSnapshotPolicyEnabled",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var LeaseContainerRequest = {
    serializedName: "LeaseContainerRequest",
    type: {
        name: "Composite",
        className: "LeaseContainerRequest",
        modelProperties: {
            action: {
                required: true,
                serializedName: "action",
                type: {
                    name: "String"
                }
            },
            leaseId: {
                serializedName: "leaseId",
                type: {
                    name: "String"
                }
            },
            breakPeriod: {
                serializedName: "breakPeriod",
                type: {
                    name: "Number"
                }
            },
            leaseDuration: {
                serializedName: "leaseDuration",
                type: {
                    name: "Number"
                }
            },
            proposedLeaseId: {
                serializedName: "proposedLeaseId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var LeaseContainerResponse = {
    serializedName: "LeaseContainerResponse",
    type: {
        name: "Composite",
        className: "LeaseContainerResponse",
        modelProperties: {
            leaseId: {
                serializedName: "leaseId",
                type: {
                    name: "String"
                }
            },
            leaseTimeSeconds: {
                serializedName: "leaseTimeSeconds",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var BlobContainersCreateOrUpdateImmutabilityPolicyHeaders = {
    serializedName: "blobcontainers-createorupdateimmutabilitypolicy-headers",
    type: {
        name: "Composite",
        className: "BlobContainersCreateOrUpdateImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var BlobContainersGetImmutabilityPolicyHeaders = {
    serializedName: "blobcontainers-getimmutabilitypolicy-headers",
    type: {
        name: "Composite",
        className: "BlobContainersGetImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var BlobContainersDeleteImmutabilityPolicyHeaders = {
    serializedName: "blobcontainers-deleteimmutabilitypolicy-headers",
    type: {
        name: "Composite",
        className: "BlobContainersDeleteImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var BlobContainersLockImmutabilityPolicyHeaders = {
    serializedName: "blobcontainers-lockimmutabilitypolicy-headers",
    type: {
        name: "Composite",
        className: "BlobContainersLockImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var BlobContainersExtendImmutabilityPolicyHeaders = {
    serializedName: "blobcontainers-extendimmutabilitypolicy-headers",
    type: {
        name: "Composite",
        className: "BlobContainersExtendImmutabilityPolicyHeaders",
        modelProperties: {
            eTag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var OperationListResult = {
    serializedName: "OperationListResult",
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            }
        }
    }
};
export var StorageSkuListResult = {
    serializedName: "StorageSkuListResult",
    type: {
        name: "Composite",
        className: "StorageSkuListResult",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Sku"
                        }
                    }
                }
            }
        }
    }
};
export var StorageAccountListResult = {
    serializedName: "StorageAccountListResult",
    type: {
        name: "Composite",
        className: "StorageAccountListResult",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StorageAccount"
                        }
                    }
                }
            }
        }
    }
};
export var UsageListResult = {
    serializedName: "UsageListResult",
    type: {
        name: "Composite",
        className: "UsageListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Usage"
                        }
                    }
                }
            }
        }
    }
};
export var ListContainerItems = {
    serializedName: "ListContainerItems",
    type: {
        name: "Composite",
        className: "ListContainerItems",
        modelProperties: {
            value: {
                readOnly: true,
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ListContainerItem"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map