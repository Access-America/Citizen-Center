/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/recommendationsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Recommendations. */
var Recommendations = /** @class */ (function () {
    /**
     * Create a Recommendations.
     * @param {WebSiteManagementClientContext} client Reference to the service client.
     */
    function Recommendations(client) {
        this.client = client;
    }
    Recommendations.prototype.list = function (options, callback) {
        return this.client.sendOperationRequest({
            options: options
        }, listOperationSpec, callback);
    };
    Recommendations.prototype.resetAllFilters = function (options, callback) {
        return this.client.sendOperationRequest({
            options: options
        }, resetAllFiltersOperationSpec, callback);
    };
    Recommendations.prototype.disableRecommendationForSubscription = function (name, options, callback) {
        return this.client.sendOperationRequest({
            name: name,
            options: options
        }, disableRecommendationForSubscriptionOperationSpec, callback);
    };
    Recommendations.prototype.listHistoryForHostingEnvironment = function (resourceGroupName, hostingEnvironmentName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            hostingEnvironmentName: hostingEnvironmentName,
            options: options
        }, listHistoryForHostingEnvironmentOperationSpec, callback);
    };
    Recommendations.prototype.listRecommendedRulesForHostingEnvironment = function (resourceGroupName, hostingEnvironmentName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            hostingEnvironmentName: hostingEnvironmentName,
            options: options
        }, listRecommendedRulesForHostingEnvironmentOperationSpec, callback);
    };
    Recommendations.prototype.disableAllForHostingEnvironment = function (resourceGroupName, environmentName, hostingEnvironmentName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            environmentName: environmentName,
            hostingEnvironmentName: hostingEnvironmentName,
            options: options
        }, disableAllForHostingEnvironmentOperationSpec, callback);
    };
    Recommendations.prototype.resetAllFiltersForHostingEnvironment = function (resourceGroupName, environmentName, hostingEnvironmentName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            environmentName: environmentName,
            hostingEnvironmentName: hostingEnvironmentName,
            options: options
        }, resetAllFiltersForHostingEnvironmentOperationSpec, callback);
    };
    Recommendations.prototype.getRuleDetailsByHostingEnvironment = function (resourceGroupName, hostingEnvironmentName, name, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            hostingEnvironmentName: hostingEnvironmentName,
            name: name,
            options: options
        }, getRuleDetailsByHostingEnvironmentOperationSpec, callback);
    };
    Recommendations.prototype.disableRecommendationForHostingEnvironment = function (resourceGroupName, environmentName, name, hostingEnvironmentName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            environmentName: environmentName,
            name: name,
            hostingEnvironmentName: hostingEnvironmentName,
            options: options
        }, disableRecommendationForHostingEnvironmentOperationSpec, callback);
    };
    Recommendations.prototype.listHistoryForWebApp = function (resourceGroupName, siteName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            siteName: siteName,
            options: options
        }, listHistoryForWebAppOperationSpec, callback);
    };
    Recommendations.prototype.listRecommendedRulesForWebApp = function (resourceGroupName, siteName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            siteName: siteName,
            options: options
        }, listRecommendedRulesForWebAppOperationSpec, callback);
    };
    Recommendations.prototype.disableAllForWebApp = function (resourceGroupName, siteName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            siteName: siteName,
            options: options
        }, disableAllForWebAppOperationSpec, callback);
    };
    Recommendations.prototype.resetAllFiltersForWebApp = function (resourceGroupName, siteName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            siteName: siteName,
            options: options
        }, resetAllFiltersForWebAppOperationSpec, callback);
    };
    Recommendations.prototype.getRuleDetailsByWebApp = function (resourceGroupName, siteName, name, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            siteName: siteName,
            name: name,
            options: options
        }, getRuleDetailsByWebAppOperationSpec, callback);
    };
    Recommendations.prototype.disableRecommendationForSite = function (resourceGroupName, siteName, name, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            siteName: siteName,
            name: name,
            options: options
        }, disableRecommendationForSiteOperationSpec, callback);
    };
    Recommendations.prototype.listNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listNextOperationSpec, callback);
    };
    Recommendations.prototype.listHistoryForHostingEnvironmentNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listHistoryForHostingEnvironmentNextOperationSpec, callback);
    };
    Recommendations.prototype.listRecommendedRulesForHostingEnvironmentNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listRecommendedRulesForHostingEnvironmentNextOperationSpec, callback);
    };
    Recommendations.prototype.listHistoryForWebAppNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listHistoryForWebAppNextOperationSpec, callback);
    };
    Recommendations.prototype.listRecommendedRulesForWebAppNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listRecommendedRulesForWebAppNextOperationSpec, callback);
    };
    return Recommendations;
}());
export { Recommendations };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Web/recommendations",
    urlParameters: [
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.featured,
        Parameters.filter,
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RecommendationCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var resetAllFiltersOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Web/recommendations/reset",
    urlParameters: [
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var disableRecommendationForSubscriptionOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Web/recommendations/{name}/disable",
    urlParameters: [
        Parameters.name,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listHistoryForHostingEnvironmentOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendationHistory",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.hostingEnvironmentName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.expiredOnly,
        Parameters.filter,
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RecommendationCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listRecommendedRulesForHostingEnvironmentOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendations",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.hostingEnvironmentName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.featured,
        Parameters.filter,
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RecommendationCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var disableAllForHostingEnvironmentOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendations/disable",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.hostingEnvironmentName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.environmentName,
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var resetAllFiltersForHostingEnvironmentOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendations/reset",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.hostingEnvironmentName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.environmentName,
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var getRuleDetailsByHostingEnvironmentOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendations/{name}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.hostingEnvironmentName,
        Parameters.name,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.updateSeen,
        Parameters.recommendationId,
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RecommendationRule
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var disableRecommendationForHostingEnvironmentOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendations/{name}/disable",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.name,
        Parameters.hostingEnvironmentName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.environmentName,
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listHistoryForWebAppOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendationHistory",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.siteName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.expiredOnly,
        Parameters.filter,
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RecommendationCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listRecommendedRulesForWebAppOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.siteName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.featured,
        Parameters.filter,
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RecommendationCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var disableAllForWebAppOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/disable",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.siteName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var resetAllFiltersForWebAppOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/reset",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.siteName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var getRuleDetailsByWebAppOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/{name}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.siteName,
        Parameters.name,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.updateSeen,
        Parameters.recommendationId,
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RecommendationRule
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var disableRecommendationForSiteOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/{name}/disable",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.siteName,
        Parameters.name,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RecommendationCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listHistoryForHostingEnvironmentNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RecommendationCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listRecommendedRulesForHostingEnvironmentNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RecommendationCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listHistoryForWebAppNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RecommendationCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
var listRecommendedRulesForWebAppNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RecommendationCollection
        },
        default: {
            bodyMapper: Mappers.DefaultErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=recommendations.js.map