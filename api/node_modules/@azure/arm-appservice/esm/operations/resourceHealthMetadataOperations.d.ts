import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { WebSiteManagementClientContext } from "../webSiteManagementClientContext";
/** Class representing a ResourceHealthMetadataOperations. */
export declare class ResourceHealthMetadataOperations {
    private readonly client;
    /**
     * Create a ResourceHealthMetadataOperations.
     * @param {WebSiteManagementClientContext} client Reference to the service client.
     */
    constructor(client: WebSiteManagementClientContext);
    /**
     * List all ResourceHealthMetadata for all sites in the subscription.
     * @summary List all ResourceHealthMetadata for all sites in the subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.ResourceHealthMetadataListResponse>
     */
    list(options?: msRest.RequestOptionsBase): Promise<Models.ResourceHealthMetadataListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.ResourceHealthMetadataCollection>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceHealthMetadataCollection>): void;
    /**
     * List all ResourceHealthMetadata for all sites in the resource group in the subscription.
     * @summary List all ResourceHealthMetadata for all sites in the resource group in the
     * subscription.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param [options] The optional parameters
     * @returns Promise<Models.ResourceHealthMetadataListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceHealthMetadataListByResourceGroupResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.ResourceHealthMetadataCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceHealthMetadataCollection>): void;
    /**
     * Gets the category of ResourceHealthMetadata to use for the given site as a collection
     * @summary Gets the category of ResourceHealthMetadata to use for the given site as a collection
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param [options] The optional parameters
     * @returns Promise<Models.ResourceHealthMetadataListBySiteResponse>
     */
    listBySite(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceHealthMetadataListBySiteResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param callback The callback
     */
    listBySite(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.ResourceHealthMetadataCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySite(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceHealthMetadataCollection>): void;
    /**
     * Gets the category of ResourceHealthMetadata to use for the given site
     * @summary Gets the category of ResourceHealthMetadata to use for the given site
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app
     * @param [options] The optional parameters
     * @returns Promise<Models.ResourceHealthMetadataGetBySiteResponse>
     */
    getBySite(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceHealthMetadataGetBySiteResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app
     * @param callback The callback
     */
    getBySite(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.ResourceHealthMetadata>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app
     * @param options The optional parameters
     * @param callback The callback
     */
    getBySite(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceHealthMetadata>): void;
    /**
     * Gets the category of ResourceHealthMetadata to use for the given site as a collection
     * @summary Gets the category of ResourceHealthMetadata to use for the given site as a collection
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param [options] The optional parameters
     * @returns Promise<Models.ResourceHealthMetadataListBySiteSlotResponse>
     */
    listBySiteSlot(resourceGroupName: string, name: string, slot: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceHealthMetadataListBySiteSlotResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param callback The callback
     */
    listBySiteSlot(resourceGroupName: string, name: string, slot: string, callback: msRest.ServiceCallback<Models.ResourceHealthMetadataCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app.
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySiteSlot(resourceGroupName: string, name: string, slot: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceHealthMetadataCollection>): void;
    /**
     * Gets the category of ResourceHealthMetadata to use for the given site
     * @summary Gets the category of ResourceHealthMetadata to use for the given site
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param [options] The optional parameters
     * @returns Promise<Models.ResourceHealthMetadataGetBySiteSlotResponse>
     */
    getBySiteSlot(resourceGroupName: string, name: string, slot: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceHealthMetadataGetBySiteSlotResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param callback The callback
     */
    getBySiteSlot(resourceGroupName: string, name: string, slot: string, callback: msRest.ServiceCallback<Models.ResourceHealthMetadata>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of web app
     * @param slot Name of web app slot. If not specified then will default to production slot.
     * @param options The optional parameters
     * @param callback The callback
     */
    getBySiteSlot(resourceGroupName: string, name: string, slot: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceHealthMetadata>): void;
    /**
     * List all ResourceHealthMetadata for all sites in the subscription.
     * @summary List all ResourceHealthMetadata for all sites in the subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ResourceHealthMetadataListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceHealthMetadataListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceHealthMetadataCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceHealthMetadataCollection>): void;
    /**
     * List all ResourceHealthMetadata for all sites in the resource group in the subscription.
     * @summary List all ResourceHealthMetadata for all sites in the resource group in the
     * subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ResourceHealthMetadataListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceHealthMetadataListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceHealthMetadataCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceHealthMetadataCollection>): void;
    /**
     * Gets the category of ResourceHealthMetadata to use for the given site as a collection
     * @summary Gets the category of ResourceHealthMetadata to use for the given site as a collection
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ResourceHealthMetadataListBySiteNextResponse>
     */
    listBySiteNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceHealthMetadataListBySiteNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listBySiteNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceHealthMetadataCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySiteNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceHealthMetadataCollection>): void;
    /**
     * Gets the category of ResourceHealthMetadata to use for the given site as a collection
     * @summary Gets the category of ResourceHealthMetadata to use for the given site as a collection
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ResourceHealthMetadataListBySiteSlotNextResponse>
     */
    listBySiteSlotNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceHealthMetadataListBySiteSlotNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listBySiteSlotNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceHealthMetadataCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySiteSlotNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceHealthMetadataCollection>): void;
}
//# sourceMappingURL=resourceHealthMetadataOperations.d.ts.map