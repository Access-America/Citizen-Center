import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { WebSiteManagementClientContext } from "../webSiteManagementClientContext";
/** Class representing a Recommendations. */
export declare class Recommendations {
    private readonly client;
    /**
     * Create a Recommendations.
     * @param {WebSiteManagementClientContext} client Reference to the service client.
     */
    constructor(client: WebSiteManagementClientContext);
    /**
     * List all recommendations for a subscription.
     * @summary List all recommendations for a subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.RecommendationsListResponse>
     */
    list(options?: Models.RecommendationsListOptionalParams): Promise<Models.RecommendationsListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: Models.RecommendationsListOptionalParams, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * Reset all recommendation opt-out settings for a subscription.
     * @summary Reset all recommendation opt-out settings for a subscription.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    resetAllFilters(options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param callback The callback
     */
    resetAllFilters(callback: msRest.ServiceCallback<void>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    resetAllFilters(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Disables the specified rule so it will not apply to a subscription in the future.
     * @summary Disables the specified rule so it will not apply to a subscription in the future.
     * @param name Rule name
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    disableRecommendationForSubscription(name: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param name Rule name
     * @param callback The callback
     */
    disableRecommendationForSubscription(name: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param name Rule name
     * @param options The optional parameters
     * @param callback The callback
     */
    disableRecommendationForSubscription(name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Get past recommendations for an app, optionally specified by the time range.
     * @summary Get past recommendations for an app, optionally specified by the time range.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param hostingEnvironmentName Name of the hosting environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.RecommendationsListHistoryForHostingEnvironmentResponse>
     */
    listHistoryForHostingEnvironment(resourceGroupName: string, hostingEnvironmentName: string, options?: Models.RecommendationsListHistoryForHostingEnvironmentOptionalParams): Promise<Models.RecommendationsListHistoryForHostingEnvironmentResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param hostingEnvironmentName Name of the hosting environment.
     * @param callback The callback
     */
    listHistoryForHostingEnvironment(resourceGroupName: string, hostingEnvironmentName: string, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param hostingEnvironmentName Name of the hosting environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    listHistoryForHostingEnvironment(resourceGroupName: string, hostingEnvironmentName: string, options: Models.RecommendationsListHistoryForHostingEnvironmentOptionalParams, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * Get all recommendations for an app.
     * @summary Get all recommendations for an app.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param hostingEnvironmentName Name of the app.
     * @param [options] The optional parameters
     * @returns Promise<Models.RecommendationsListRecommendedRulesForHostingEnvironmentResponse>
     */
    listRecommendedRulesForHostingEnvironment(resourceGroupName: string, hostingEnvironmentName: string, options?: Models.RecommendationsListRecommendedRulesForHostingEnvironmentOptionalParams): Promise<Models.RecommendationsListRecommendedRulesForHostingEnvironmentResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param hostingEnvironmentName Name of the app.
     * @param callback The callback
     */
    listRecommendedRulesForHostingEnvironment(resourceGroupName: string, hostingEnvironmentName: string, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param hostingEnvironmentName Name of the app.
     * @param options The optional parameters
     * @param callback The callback
     */
    listRecommendedRulesForHostingEnvironment(resourceGroupName: string, hostingEnvironmentName: string, options: Models.RecommendationsListRecommendedRulesForHostingEnvironmentOptionalParams, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * Disable all recommendations for an app.
     * @summary Disable all recommendations for an app.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param environmentName Name of the app.
     * @param hostingEnvironmentName
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    disableAllForHostingEnvironment(resourceGroupName: string, environmentName: string, hostingEnvironmentName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param environmentName Name of the app.
     * @param hostingEnvironmentName
     * @param callback The callback
     */
    disableAllForHostingEnvironment(resourceGroupName: string, environmentName: string, hostingEnvironmentName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param environmentName Name of the app.
     * @param hostingEnvironmentName
     * @param options The optional parameters
     * @param callback The callback
     */
    disableAllForHostingEnvironment(resourceGroupName: string, environmentName: string, hostingEnvironmentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Reset all recommendation opt-out settings for an app.
     * @summary Reset all recommendation opt-out settings for an app.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param environmentName Name of the app.
     * @param hostingEnvironmentName
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    resetAllFiltersForHostingEnvironment(resourceGroupName: string, environmentName: string, hostingEnvironmentName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param environmentName Name of the app.
     * @param hostingEnvironmentName
     * @param callback The callback
     */
    resetAllFiltersForHostingEnvironment(resourceGroupName: string, environmentName: string, hostingEnvironmentName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param environmentName Name of the app.
     * @param hostingEnvironmentName
     * @param options The optional parameters
     * @param callback The callback
     */
    resetAllFiltersForHostingEnvironment(resourceGroupName: string, environmentName: string, hostingEnvironmentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Get a recommendation rule for an app.
     * @summary Get a recommendation rule for an app.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param hostingEnvironmentName Name of the hosting environment.
     * @param name Name of the recommendation.
     * @param [options] The optional parameters
     * @returns Promise<Models.RecommendationsGetRuleDetailsByHostingEnvironmentResponse>
     */
    getRuleDetailsByHostingEnvironment(resourceGroupName: string, hostingEnvironmentName: string, name: string, options?: Models.RecommendationsGetRuleDetailsByHostingEnvironmentOptionalParams): Promise<Models.RecommendationsGetRuleDetailsByHostingEnvironmentResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param hostingEnvironmentName Name of the hosting environment.
     * @param name Name of the recommendation.
     * @param callback The callback
     */
    getRuleDetailsByHostingEnvironment(resourceGroupName: string, hostingEnvironmentName: string, name: string, callback: msRest.ServiceCallback<Models.RecommendationRule>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param hostingEnvironmentName Name of the hosting environment.
     * @param name Name of the recommendation.
     * @param options The optional parameters
     * @param callback The callback
     */
    getRuleDetailsByHostingEnvironment(resourceGroupName: string, hostingEnvironmentName: string, name: string, options: Models.RecommendationsGetRuleDetailsByHostingEnvironmentOptionalParams, callback: msRest.ServiceCallback<Models.RecommendationRule>): void;
    /**
     * Disables the specific rule for a web site permanently.
     * @summary Disables the specific rule for a web site permanently.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param environmentName Site name
     * @param name Rule name
     * @param hostingEnvironmentName
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    disableRecommendationForHostingEnvironment(resourceGroupName: string, environmentName: string, name: string, hostingEnvironmentName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param environmentName Site name
     * @param name Rule name
     * @param hostingEnvironmentName
     * @param callback The callback
     */
    disableRecommendationForHostingEnvironment(resourceGroupName: string, environmentName: string, name: string, hostingEnvironmentName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param environmentName Site name
     * @param name Rule name
     * @param hostingEnvironmentName
     * @param options The optional parameters
     * @param callback The callback
     */
    disableRecommendationForHostingEnvironment(resourceGroupName: string, environmentName: string, name: string, hostingEnvironmentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Get past recommendations for an app, optionally specified by the time range.
     * @summary Get past recommendations for an app, optionally specified by the time range.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Name of the app.
     * @param [options] The optional parameters
     * @returns Promise<Models.RecommendationsListHistoryForWebAppResponse>
     */
    listHistoryForWebApp(resourceGroupName: string, siteName: string, options?: Models.RecommendationsListHistoryForWebAppOptionalParams): Promise<Models.RecommendationsListHistoryForWebAppResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Name of the app.
     * @param callback The callback
     */
    listHistoryForWebApp(resourceGroupName: string, siteName: string, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Name of the app.
     * @param options The optional parameters
     * @param callback The callback
     */
    listHistoryForWebApp(resourceGroupName: string, siteName: string, options: Models.RecommendationsListHistoryForWebAppOptionalParams, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * Get all recommendations for an app.
     * @summary Get all recommendations for an app.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Name of the app.
     * @param [options] The optional parameters
     * @returns Promise<Models.RecommendationsListRecommendedRulesForWebAppResponse>
     */
    listRecommendedRulesForWebApp(resourceGroupName: string, siteName: string, options?: Models.RecommendationsListRecommendedRulesForWebAppOptionalParams): Promise<Models.RecommendationsListRecommendedRulesForWebAppResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Name of the app.
     * @param callback The callback
     */
    listRecommendedRulesForWebApp(resourceGroupName: string, siteName: string, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Name of the app.
     * @param options The optional parameters
     * @param callback The callback
     */
    listRecommendedRulesForWebApp(resourceGroupName: string, siteName: string, options: Models.RecommendationsListRecommendedRulesForWebAppOptionalParams, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * Disable all recommendations for an app.
     * @summary Disable all recommendations for an app.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Name of the app.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    disableAllForWebApp(resourceGroupName: string, siteName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Name of the app.
     * @param callback The callback
     */
    disableAllForWebApp(resourceGroupName: string, siteName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Name of the app.
     * @param options The optional parameters
     * @param callback The callback
     */
    disableAllForWebApp(resourceGroupName: string, siteName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Reset all recommendation opt-out settings for an app.
     * @summary Reset all recommendation opt-out settings for an app.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Name of the app.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    resetAllFiltersForWebApp(resourceGroupName: string, siteName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Name of the app.
     * @param callback The callback
     */
    resetAllFiltersForWebApp(resourceGroupName: string, siteName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Name of the app.
     * @param options The optional parameters
     * @param callback The callback
     */
    resetAllFiltersForWebApp(resourceGroupName: string, siteName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Get a recommendation rule for an app.
     * @summary Get a recommendation rule for an app.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Name of the app.
     * @param name Name of the recommendation.
     * @param [options] The optional parameters
     * @returns Promise<Models.RecommendationsGetRuleDetailsByWebAppResponse>
     */
    getRuleDetailsByWebApp(resourceGroupName: string, siteName: string, name: string, options?: Models.RecommendationsGetRuleDetailsByWebAppOptionalParams): Promise<Models.RecommendationsGetRuleDetailsByWebAppResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Name of the app.
     * @param name Name of the recommendation.
     * @param callback The callback
     */
    getRuleDetailsByWebApp(resourceGroupName: string, siteName: string, name: string, callback: msRest.ServiceCallback<Models.RecommendationRule>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Name of the app.
     * @param name Name of the recommendation.
     * @param options The optional parameters
     * @param callback The callback
     */
    getRuleDetailsByWebApp(resourceGroupName: string, siteName: string, name: string, options: Models.RecommendationsGetRuleDetailsByWebAppOptionalParams, callback: msRest.ServiceCallback<Models.RecommendationRule>): void;
    /**
     * Disables the specific rule for a web site permanently.
     * @summary Disables the specific rule for a web site permanently.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site name
     * @param name Rule name
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    disableRecommendationForSite(resourceGroupName: string, siteName: string, name: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site name
     * @param name Rule name
     * @param callback The callback
     */
    disableRecommendationForSite(resourceGroupName: string, siteName: string, name: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site name
     * @param name Rule name
     * @param options The optional parameters
     * @param callback The callback
     */
    disableRecommendationForSite(resourceGroupName: string, siteName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * List all recommendations for a subscription.
     * @summary List all recommendations for a subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.RecommendationsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.RecommendationsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * Get past recommendations for an app, optionally specified by the time range.
     * @summary Get past recommendations for an app, optionally specified by the time range.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.RecommendationsListHistoryForHostingEnvironmentNextResponse>
     */
    listHistoryForHostingEnvironmentNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.RecommendationsListHistoryForHostingEnvironmentNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listHistoryForHostingEnvironmentNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listHistoryForHostingEnvironmentNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * Get all recommendations for an app.
     * @summary Get all recommendations for an app.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.RecommendationsListRecommendedRulesForHostingEnvironmentNextResponse>
     */
    listRecommendedRulesForHostingEnvironmentNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.RecommendationsListRecommendedRulesForHostingEnvironmentNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listRecommendedRulesForHostingEnvironmentNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listRecommendedRulesForHostingEnvironmentNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * Get past recommendations for an app, optionally specified by the time range.
     * @summary Get past recommendations for an app, optionally specified by the time range.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.RecommendationsListHistoryForWebAppNextResponse>
     */
    listHistoryForWebAppNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.RecommendationsListHistoryForWebAppNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listHistoryForWebAppNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listHistoryForWebAppNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * Get all recommendations for an app.
     * @summary Get all recommendations for an app.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.RecommendationsListRecommendedRulesForWebAppNextResponse>
     */
    listRecommendedRulesForWebAppNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.RecommendationsListRecommendedRulesForWebAppNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listRecommendedRulesForWebAppNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listRecommendedRulesForWebAppNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RecommendationCollection>): void;
}
//# sourceMappingURL=recommendations.d.ts.map