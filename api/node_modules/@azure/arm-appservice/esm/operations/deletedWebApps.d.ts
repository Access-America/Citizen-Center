import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { WebSiteManagementClientContext } from "../webSiteManagementClientContext";
/** Class representing a DeletedWebApps. */
export declare class DeletedWebApps {
    private readonly client;
    /**
     * Create a DeletedWebApps.
     * @param {WebSiteManagementClientContext} client Reference to the service client.
     */
    constructor(client: WebSiteManagementClientContext);
    /**
     * Get all deleted apps for a subscription.
     * @summary Get all deleted apps for a subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.DeletedWebAppsListResponse>
     */
    list(options?: msRest.RequestOptionsBase): Promise<Models.DeletedWebAppsListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.DeletedWebAppCollection>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeletedWebAppCollection>): void;
    /**
     * Get all deleted apps for a subscription at location
     * @summary Get all deleted apps for a subscription at location
     * @param location
     * @param [options] The optional parameters
     * @returns Promise<Models.DeletedWebAppsListByLocationResponse>
     */
    listByLocation(location: string, options?: msRest.RequestOptionsBase): Promise<Models.DeletedWebAppsListByLocationResponse>;
    /**
     * @param location
     * @param callback The callback
     */
    listByLocation(location: string, callback: msRest.ServiceCallback<Models.DeletedWebAppCollection>): void;
    /**
     * @param location
     * @param options The optional parameters
     * @param callback The callback
     */
    listByLocation(location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeletedWebAppCollection>): void;
    /**
     * Get deleted app for a subscription at location.
     * @summary Get deleted app for a subscription at location.
     * @param location
     * @param deletedSiteId The numeric ID of the deleted app, e.g. 12345
     * @param [options] The optional parameters
     * @returns Promise<Models.DeletedWebAppsGetDeletedWebAppByLocationResponse>
     */
    getDeletedWebAppByLocation(location: string, deletedSiteId: string, options?: msRest.RequestOptionsBase): Promise<Models.DeletedWebAppsGetDeletedWebAppByLocationResponse>;
    /**
     * @param location
     * @param deletedSiteId The numeric ID of the deleted app, e.g. 12345
     * @param callback The callback
     */
    getDeletedWebAppByLocation(location: string, deletedSiteId: string, callback: msRest.ServiceCallback<Models.DeletedSite>): void;
    /**
     * @param location
     * @param deletedSiteId The numeric ID of the deleted app, e.g. 12345
     * @param options The optional parameters
     * @param callback The callback
     */
    getDeletedWebAppByLocation(location: string, deletedSiteId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeletedSite>): void;
    /**
     * Get all deleted apps for a subscription.
     * @summary Get all deleted apps for a subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DeletedWebAppsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DeletedWebAppsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DeletedWebAppCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeletedWebAppCollection>): void;
    /**
     * Get all deleted apps for a subscription at location
     * @summary Get all deleted apps for a subscription at location
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DeletedWebAppsListByLocationNextResponse>
     */
    listByLocationNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DeletedWebAppsListByLocationNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByLocationNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DeletedWebAppCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByLocationNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeletedWebAppCollection>): void;
}
//# sourceMappingURL=deletedWebApps.d.ts.map