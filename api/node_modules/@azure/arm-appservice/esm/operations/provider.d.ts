import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { WebSiteManagementClientContext } from "../webSiteManagementClientContext";
/** Class representing a Provider. */
export declare class Provider {
    private readonly client;
    /**
     * Create a Provider.
     * @param {WebSiteManagementClientContext} client Reference to the service client.
     */
    constructor(client: WebSiteManagementClientContext);
    /**
     * Get available application frameworks and their versions
     * @summary Get available application frameworks and their versions
     * @param [options] The optional parameters
     * @returns Promise<Models.ProviderGetAvailableStacksResponse>
     */
    getAvailableStacks(options?: Models.ProviderGetAvailableStacksOptionalParams): Promise<Models.ProviderGetAvailableStacksResponse>;
    /**
     * @param callback The callback
     */
    getAvailableStacks(callback: msRest.ServiceCallback<Models.ApplicationStackCollection>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    getAvailableStacks(options: Models.ProviderGetAvailableStacksOptionalParams, callback: msRest.ServiceCallback<Models.ApplicationStackCollection>): void;
    /**
     * Gets all available operations for the Microsoft.Web resource provider. Also exposes resource
     * metric definitions
     * @summary Gets all available operations for the Microsoft.Web resource provider. Also exposes
     * resource metric definitions
     * @param [options] The optional parameters
     * @returns Promise<Models.ProviderListOperationsResponse>
     */
    listOperations(options?: msRest.RequestOptionsBase): Promise<Models.ProviderListOperationsResponse>;
    /**
     * @param callback The callback
     */
    listOperations(callback: msRest.ServiceCallback<Models.CsmOperationCollection>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    listOperations(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CsmOperationCollection>): void;
    /**
     * Get available application frameworks and their versions
     * @summary Get available application frameworks and their versions
     * @param [options] The optional parameters
     * @returns Promise<Models.ProviderGetAvailableStacksOnPremResponse>
     */
    getAvailableStacksOnPrem(options?: Models.ProviderGetAvailableStacksOnPremOptionalParams): Promise<Models.ProviderGetAvailableStacksOnPremResponse>;
    /**
     * @param callback The callback
     */
    getAvailableStacksOnPrem(callback: msRest.ServiceCallback<Models.ApplicationStackCollection>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    getAvailableStacksOnPrem(options: Models.ProviderGetAvailableStacksOnPremOptionalParams, callback: msRest.ServiceCallback<Models.ApplicationStackCollection>): void;
    /**
     * Get available application frameworks and their versions
     * @summary Get available application frameworks and their versions
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ProviderGetAvailableStacksNextResponse>
     */
    getAvailableStacksNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ProviderGetAvailableStacksNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    getAvailableStacksNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ApplicationStackCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    getAvailableStacksNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApplicationStackCollection>): void;
    /**
     * Gets all available operations for the Microsoft.Web resource provider. Also exposes resource
     * metric definitions
     * @summary Gets all available operations for the Microsoft.Web resource provider. Also exposes
     * resource metric definitions
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ProviderListOperationsNextResponse>
     */
    listOperationsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ProviderListOperationsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listOperationsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CsmOperationCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listOperationsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CsmOperationCollection>): void;
    /**
     * Get available application frameworks and their versions
     * @summary Get available application frameworks and their versions
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ProviderGetAvailableStacksOnPremNextResponse>
     */
    getAvailableStacksOnPremNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ProviderGetAvailableStacksOnPremNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    getAvailableStacksOnPremNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ApplicationStackCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    getAvailableStacksOnPremNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ApplicationStackCollection>): void;
}
//# sourceMappingURL=provider.d.ts.map