import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { WebSiteManagementClientContext } from "../webSiteManagementClientContext";
/** Class representing a TopLevelDomains. */
export declare class TopLevelDomains {
    private readonly client;
    /**
     * Create a TopLevelDomains.
     * @param {WebSiteManagementClientContext} client Reference to the service client.
     */
    constructor(client: WebSiteManagementClientContext);
    /**
     * Get all top-level domains supported for registration.
     * @summary Get all top-level domains supported for registration.
     * @param [options] The optional parameters
     * @returns Promise<Models.TopLevelDomainsListResponse>
     */
    list(options?: msRest.RequestOptionsBase): Promise<Models.TopLevelDomainsListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.TopLevelDomainCollection>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TopLevelDomainCollection>): void;
    /**
     * Get details of a top-level domain.
     * @summary Get details of a top-level domain.
     * @param name Name of the top-level domain.
     * @param [options] The optional parameters
     * @returns Promise<Models.TopLevelDomainsGetResponse>
     */
    get(name: string, options?: msRest.RequestOptionsBase): Promise<Models.TopLevelDomainsGetResponse>;
    /**
     * @param name Name of the top-level domain.
     * @param callback The callback
     */
    get(name: string, callback: msRest.ServiceCallback<Models.TopLevelDomain>): void;
    /**
     * @param name Name of the top-level domain.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TopLevelDomain>): void;
    /**
     * Gets all legal agreements that user needs to accept before purchasing a domain.
     * @summary Gets all legal agreements that user needs to accept before purchasing a domain.
     * @param name Name of the top-level domain.
     * @param agreementOption Domain agreement options.
     * @param [options] The optional parameters
     * @returns Promise<Models.TopLevelDomainsListAgreementsResponse>
     */
    listAgreements(name: string, agreementOption: Models.TopLevelDomainAgreementOption, options?: msRest.RequestOptionsBase): Promise<Models.TopLevelDomainsListAgreementsResponse>;
    /**
     * @param name Name of the top-level domain.
     * @param agreementOption Domain agreement options.
     * @param callback The callback
     */
    listAgreements(name: string, agreementOption: Models.TopLevelDomainAgreementOption, callback: msRest.ServiceCallback<Models.TldLegalAgreementCollection>): void;
    /**
     * @param name Name of the top-level domain.
     * @param agreementOption Domain agreement options.
     * @param options The optional parameters
     * @param callback The callback
     */
    listAgreements(name: string, agreementOption: Models.TopLevelDomainAgreementOption, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TldLegalAgreementCollection>): void;
    /**
     * Get all top-level domains supported for registration.
     * @summary Get all top-level domains supported for registration.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.TopLevelDomainsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.TopLevelDomainsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TopLevelDomainCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TopLevelDomainCollection>): void;
    /**
     * Gets all legal agreements that user needs to accept before purchasing a domain.
     * @summary Gets all legal agreements that user needs to accept before purchasing a domain.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.TopLevelDomainsListAgreementsNextResponse>
     */
    listAgreementsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.TopLevelDomainsListAgreementsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listAgreementsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.TldLegalAgreementCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listAgreementsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TldLegalAgreementCollection>): void;
}
//# sourceMappingURL=topLevelDomains.d.ts.map