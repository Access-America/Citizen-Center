import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { WebSiteManagementClientContext } from "../webSiteManagementClientContext";
/** Class representing a AppServiceCertificateOrders. */
export declare class AppServiceCertificateOrders {
    private readonly client;
    /**
     * Create a AppServiceCertificateOrders.
     * @param {WebSiteManagementClientContext} client Reference to the service client.
     */
    constructor(client: WebSiteManagementClientContext);
    /**
     * List all certificate orders in a subscription.
     * @summary List all certificate orders in a subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceCertificateOrdersListResponse>
     */
    list(options?: msRest.RequestOptionsBase): Promise<Models.AppServiceCertificateOrdersListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.AppServiceCertificateOrderCollection>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceCertificateOrderCollection>): void;
    /**
     * Validate information for a certificate order.
     * @summary Validate information for a certificate order.
     * @param appServiceCertificateOrder Information for a certificate order.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    validatePurchaseInformation(appServiceCertificateOrder: Models.AppServiceCertificateOrder, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param appServiceCertificateOrder Information for a certificate order.
     * @param callback The callback
     */
    validatePurchaseInformation(appServiceCertificateOrder: Models.AppServiceCertificateOrder, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param appServiceCertificateOrder Information for a certificate order.
     * @param options The optional parameters
     * @param callback The callback
     */
    validatePurchaseInformation(appServiceCertificateOrder: Models.AppServiceCertificateOrder, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Get certificate orders in a resource group.
     * @summary Get certificate orders in a resource group.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceCertificateOrdersListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceCertificateOrdersListByResourceGroupResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.AppServiceCertificateOrderCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceCertificateOrderCollection>): void;
    /**
     * Get a certificate order.
     * @summary Get a certificate order.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order..
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceCertificateOrdersGetResponse>
     */
    get(resourceGroupName: string, certificateOrderName: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceCertificateOrdersGetResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order..
     * @param callback The callback
     */
    get(resourceGroupName: string, certificateOrderName: string, callback: msRest.ServiceCallback<Models.AppServiceCertificateOrder>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order..
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, certificateOrderName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceCertificateOrder>): void;
    /**
     * Create or update a certificate purchase order.
     * @summary Create or update a certificate purchase order.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param certificateDistinguishedName Distinguished name to use for the certificate order.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceCertificateOrdersCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, certificateOrderName: string, certificateDistinguishedName: Models.AppServiceCertificateOrder, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceCertificateOrdersCreateOrUpdateResponse>;
    /**
     * Delete an existing certificate order.
     * @summary Delete an existing certificate order.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, certificateOrderName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, certificateOrderName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, certificateOrderName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Create or update a certificate purchase order.
     * @summary Create or update a certificate purchase order.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param certificateDistinguishedName Distinguished name to use for the certificate order.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceCertificateOrdersUpdateResponse>
     */
    update(resourceGroupName: string, certificateOrderName: string, certificateDistinguishedName: Models.AppServiceCertificateOrderPatchResource, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceCertificateOrdersUpdateResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param certificateDistinguishedName Distinguished name to use for the certificate order.
     * @param callback The callback
     */
    update(resourceGroupName: string, certificateOrderName: string, certificateDistinguishedName: Models.AppServiceCertificateOrderPatchResource, callback: msRest.ServiceCallback<Models.AppServiceCertificateOrder>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param certificateDistinguishedName Distinguished name to use for the certificate order.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, certificateOrderName: string, certificateDistinguishedName: Models.AppServiceCertificateOrderPatchResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceCertificateOrder>): void;
    /**
     * List all certificates associated with a certificate order.
     * @summary List all certificates associated with a certificate order.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceCertificateOrdersListCertificatesResponse>
     */
    listCertificates(resourceGroupName: string, certificateOrderName: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceCertificateOrdersListCertificatesResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param callback The callback
     */
    listCertificates(resourceGroupName: string, certificateOrderName: string, callback: msRest.ServiceCallback<Models.AppServiceCertificateCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param options The optional parameters
     * @param callback The callback
     */
    listCertificates(resourceGroupName: string, certificateOrderName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceCertificateCollection>): void;
    /**
     * Get the certificate associated with a certificate order.
     * @summary Get the certificate associated with a certificate order.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param name Name of the certificate.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceCertificateOrdersGetCertificateResponse>
     */
    getCertificate(resourceGroupName: string, certificateOrderName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceCertificateOrdersGetCertificateResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param name Name of the certificate.
     * @param callback The callback
     */
    getCertificate(resourceGroupName: string, certificateOrderName: string, name: string, callback: msRest.ServiceCallback<Models.AppServiceCertificateResource>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param name Name of the certificate.
     * @param options The optional parameters
     * @param callback The callback
     */
    getCertificate(resourceGroupName: string, certificateOrderName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceCertificateResource>): void;
    /**
     * Creates or updates a certificate and associates with key vault secret.
     * @summary Creates or updates a certificate and associates with key vault secret.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param name Name of the certificate.
     * @param keyVaultCertificate Key vault certificate resource Id.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceCertificateOrdersCreateOrUpdateCertificateResponse>
     */
    createOrUpdateCertificate(resourceGroupName: string, certificateOrderName: string, name: string, keyVaultCertificate: Models.AppServiceCertificateResource, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceCertificateOrdersCreateOrUpdateCertificateResponse>;
    /**
     * Delete the certificate associated with a certificate order.
     * @summary Delete the certificate associated with a certificate order.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param name Name of the certificate.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteCertificate(resourceGroupName: string, certificateOrderName: string, name: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param name Name of the certificate.
     * @param callback The callback
     */
    deleteCertificate(resourceGroupName: string, certificateOrderName: string, name: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param name Name of the certificate.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteCertificate(resourceGroupName: string, certificateOrderName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Creates or updates a certificate and associates with key vault secret.
     * @summary Creates or updates a certificate and associates with key vault secret.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param name Name of the certificate.
     * @param keyVaultCertificate Key vault certificate resource Id.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceCertificateOrdersUpdateCertificateResponse>
     */
    updateCertificate(resourceGroupName: string, certificateOrderName: string, name: string, keyVaultCertificate: Models.AppServiceCertificatePatchResource, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceCertificateOrdersUpdateCertificateResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param name Name of the certificate.
     * @param keyVaultCertificate Key vault certificate resource Id.
     * @param callback The callback
     */
    updateCertificate(resourceGroupName: string, certificateOrderName: string, name: string, keyVaultCertificate: Models.AppServiceCertificatePatchResource, callback: msRest.ServiceCallback<Models.AppServiceCertificateResource>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param name Name of the certificate.
     * @param keyVaultCertificate Key vault certificate resource Id.
     * @param options The optional parameters
     * @param callback The callback
     */
    updateCertificate(resourceGroupName: string, certificateOrderName: string, name: string, keyVaultCertificate: Models.AppServiceCertificatePatchResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceCertificateResource>): void;
    /**
     * Reissue an existing certificate order.
     * @summary Reissue an existing certificate order.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param reissueCertificateOrderRequest Parameters for the reissue.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    reissue(resourceGroupName: string, certificateOrderName: string, reissueCertificateOrderRequest: Models.ReissueCertificateOrderRequest, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param reissueCertificateOrderRequest Parameters for the reissue.
     * @param callback The callback
     */
    reissue(resourceGroupName: string, certificateOrderName: string, reissueCertificateOrderRequest: Models.ReissueCertificateOrderRequest, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param reissueCertificateOrderRequest Parameters for the reissue.
     * @param options The optional parameters
     * @param callback The callback
     */
    reissue(resourceGroupName: string, certificateOrderName: string, reissueCertificateOrderRequest: Models.ReissueCertificateOrderRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Renew an existing certificate order.
     * @summary Renew an existing certificate order.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param renewCertificateOrderRequest Renew parameters
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    renew(resourceGroupName: string, certificateOrderName: string, renewCertificateOrderRequest: Models.RenewCertificateOrderRequest, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param renewCertificateOrderRequest Renew parameters
     * @param callback The callback
     */
    renew(resourceGroupName: string, certificateOrderName: string, renewCertificateOrderRequest: Models.RenewCertificateOrderRequest, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param renewCertificateOrderRequest Renew parameters
     * @param options The optional parameters
     * @param callback The callback
     */
    renew(resourceGroupName: string, certificateOrderName: string, renewCertificateOrderRequest: Models.RenewCertificateOrderRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Resend certificate email.
     * @summary Resend certificate email.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    resendEmail(resourceGroupName: string, certificateOrderName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param callback The callback
     */
    resendEmail(resourceGroupName: string, certificateOrderName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param options The optional parameters
     * @param callback The callback
     */
    resendEmail(resourceGroupName: string, certificateOrderName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Verify domain ownership for this certificate order.
     * @summary Verify domain ownership for this certificate order.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    resendRequestEmails(resourceGroupName: string, certificateOrderName: string, options?: Models.AppServiceCertificateOrdersResendRequestEmailsOptionalParams): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param callback The callback
     */
    resendRequestEmails(resourceGroupName: string, certificateOrderName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param options The optional parameters
     * @param callback The callback
     */
    resendRequestEmails(resourceGroupName: string, certificateOrderName: string, options: Models.AppServiceCertificateOrdersResendRequestEmailsOptionalParams, callback: msRest.ServiceCallback<void>): void;
    /**
     * Verify domain ownership for this certificate order.
     * @summary Verify domain ownership for this certificate order.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param siteSealRequest Site seal request.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceCertificateOrdersRetrieveSiteSealResponse>
     */
    retrieveSiteSeal(resourceGroupName: string, certificateOrderName: string, siteSealRequest: Models.SiteSealRequest, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceCertificateOrdersRetrieveSiteSealResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param siteSealRequest Site seal request.
     * @param callback The callback
     */
    retrieveSiteSeal(resourceGroupName: string, certificateOrderName: string, siteSealRequest: Models.SiteSealRequest, callback: msRest.ServiceCallback<Models.SiteSeal>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param siteSealRequest Site seal request.
     * @param options The optional parameters
     * @param callback The callback
     */
    retrieveSiteSeal(resourceGroupName: string, certificateOrderName: string, siteSealRequest: Models.SiteSealRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SiteSeal>): void;
    /**
     * Verify domain ownership for this certificate order.
     * @summary Verify domain ownership for this certificate order.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    verifyDomainOwnership(resourceGroupName: string, certificateOrderName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param callback The callback
     */
    verifyDomainOwnership(resourceGroupName: string, certificateOrderName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param options The optional parameters
     * @param callback The callback
     */
    verifyDomainOwnership(resourceGroupName: string, certificateOrderName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Retrieve the list of certificate actions.
     * @summary Retrieve the list of certificate actions.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the certificate order.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceCertificateOrdersRetrieveCertificateActionsResponse>
     */
    retrieveCertificateActions(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceCertificateOrdersRetrieveCertificateActionsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the certificate order.
     * @param callback The callback
     */
    retrieveCertificateActions(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.CertificateOrderAction[]>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the certificate order.
     * @param options The optional parameters
     * @param callback The callback
     */
    retrieveCertificateActions(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CertificateOrderAction[]>): void;
    /**
     * Retrieve email history.
     * @summary Retrieve email history.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the certificate order.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceCertificateOrdersRetrieveCertificateEmailHistoryResponse>
     */
    retrieveCertificateEmailHistory(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceCertificateOrdersRetrieveCertificateEmailHistoryResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the certificate order.
     * @param callback The callback
     */
    retrieveCertificateEmailHistory(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.CertificateEmail[]>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the certificate order.
     * @param options The optional parameters
     * @param callback The callback
     */
    retrieveCertificateEmailHistory(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CertificateEmail[]>): void;
    /**
     * Create or update a certificate purchase order.
     * @summary Create or update a certificate purchase order.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param certificateDistinguishedName Distinguished name to use for the certificate order.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, certificateOrderName: string, certificateDistinguishedName: Models.AppServiceCertificateOrder, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Creates or updates a certificate and associates with key vault secret.
     * @summary Creates or updates a certificate and associates with key vault secret.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param certificateOrderName Name of the certificate order.
     * @param name Name of the certificate.
     * @param keyVaultCertificate Key vault certificate resource Id.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdateCertificate(resourceGroupName: string, certificateOrderName: string, name: string, keyVaultCertificate: Models.AppServiceCertificateResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * List all certificate orders in a subscription.
     * @summary List all certificate orders in a subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceCertificateOrdersListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceCertificateOrdersListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AppServiceCertificateOrderCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceCertificateOrderCollection>): void;
    /**
     * Get certificate orders in a resource group.
     * @summary Get certificate orders in a resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceCertificateOrdersListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceCertificateOrdersListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AppServiceCertificateOrderCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceCertificateOrderCollection>): void;
    /**
     * List all certificates associated with a certificate order.
     * @summary List all certificates associated with a certificate order.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceCertificateOrdersListCertificatesNextResponse>
     */
    listCertificatesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceCertificateOrdersListCertificatesNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listCertificatesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AppServiceCertificateCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listCertificatesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceCertificateCollection>): void;
}
//# sourceMappingURL=appServiceCertificateOrders.d.ts.map