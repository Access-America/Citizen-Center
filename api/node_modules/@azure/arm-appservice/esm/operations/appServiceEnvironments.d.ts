import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { WebSiteManagementClientContext } from "../webSiteManagementClientContext";
/** Class representing a AppServiceEnvironments. */
export declare class AppServiceEnvironments {
    private readonly client;
    /**
     * Create a AppServiceEnvironments.
     * @param {WebSiteManagementClientContext} client Reference to the service client.
     */
    constructor(client: WebSiteManagementClientContext);
    /**
     * Get all App Service Environments for a subscription.
     * @summary Get all App Service Environments for a subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListResponse>
     */
    list(options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): void;
    /**
     * Get all App Service Environments in a resource group.
     * @summary Get all App Service Environments in a resource group.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListByResourceGroupResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): void;
    /**
     * Get the properties of an App Service Environment.
     * @summary Get the properties of an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsGetResponse>
     */
    get(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsGetResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    get(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentResource>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentResource>): void;
    /**
     * Create or update an App Service Environment.
     * @summary Create or update an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param hostingEnvironmentEnvelope Configuration details of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, name: string, hostingEnvironmentEnvelope: Models.AppServiceEnvironmentResource, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsCreateOrUpdateResponse>;
    /**
     * Delete an App Service Environment.
     * @summary Delete an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, name: string, options?: Models.AppServiceEnvironmentsDeleteMethodOptionalParams): Promise<msRest.RestResponse>;
    /**
     * Create or update an App Service Environment.
     * @summary Create or update an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param hostingEnvironmentEnvelope Configuration details of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsUpdateResponse>
     */
    update(resourceGroupName: string, name: string, hostingEnvironmentEnvelope: Models.AppServiceEnvironmentPatchResource, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsUpdateResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param hostingEnvironmentEnvelope Configuration details of the App Service Environment.
     * @param callback The callback
     */
    update(resourceGroupName: string, name: string, hostingEnvironmentEnvelope: Models.AppServiceEnvironmentPatchResource, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentResource>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param hostingEnvironmentEnvelope Configuration details of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, name: string, hostingEnvironmentEnvelope: Models.AppServiceEnvironmentPatchResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentResource>): void;
    /**
     * Get the used, available, and total worker capacity an App Service Environment.
     * @summary Get the used, available, and total worker capacity an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListCapacitiesResponse>
     */
    listCapacities(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListCapacitiesResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    listCapacities(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.StampCapacityCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    listCapacities(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StampCapacityCollection>): void;
    /**
     * Get IP addresses assigned to an App Service Environment.
     * @summary Get IP addresses assigned to an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListVipsResponse>
     */
    listVips(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListVipsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    listVips(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.AddressResponse>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    listVips(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AddressResponse>): void;
    /**
     * Move an App Service Environment to a different VNET.
     * @summary Move an App Service Environment to a different VNET.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param vnetInfo Details for the new virtual network.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsChangeVnetResponse>
     */
    changeVnet(resourceGroupName: string, name: string, vnetInfo: Models.VirtualNetworkProfile, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsChangeVnetResponse>;
    /**
     * Get diagnostic information for an App Service Environment.
     * @summary Get diagnostic information for an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListDiagnosticsResponse>
     */
    listDiagnostics(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListDiagnosticsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    listDiagnostics(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.HostingEnvironmentDiagnostics[]>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    listDiagnostics(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HostingEnvironmentDiagnostics[]>): void;
    /**
     * Get a diagnostics item for an App Service Environment.
     * @summary Get a diagnostics item for an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param diagnosticsName Name of the diagnostics item.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsGetDiagnosticsItemResponse>
     */
    getDiagnosticsItem(resourceGroupName: string, name: string, diagnosticsName: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsGetDiagnosticsItemResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param diagnosticsName Name of the diagnostics item.
     * @param callback The callback
     */
    getDiagnosticsItem(resourceGroupName: string, name: string, diagnosticsName: string, callback: msRest.ServiceCallback<Models.HostingEnvironmentDiagnostics>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param diagnosticsName Name of the diagnostics item.
     * @param options The optional parameters
     * @param callback The callback
     */
    getDiagnosticsItem(resourceGroupName: string, name: string, diagnosticsName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.HostingEnvironmentDiagnostics>): void;
    /**
     * Get the network endpoints of all inbound dependencies of an App Service Environment.
     * @summary Get the network endpoints of all inbound dependencies of an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsResponse>
     */
    getInboundNetworkDependenciesEndpoints(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    getInboundNetworkDependenciesEndpoints(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.InboundEnvironmentEndpointCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    getInboundNetworkDependenciesEndpoints(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.InboundEnvironmentEndpointCollection>): void;
    /**
     * Get global metric definitions of an App Service Environment.
     * @summary Get global metric definitions of an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListMetricDefinitionsResponse>
     */
    listMetricDefinitions(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMetricDefinitionsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    listMetricDefinitions(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.MetricDefinition>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMetricDefinitions(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MetricDefinition>): void;
    /**
     * Get global metrics of an App Service Environment.
     * @summary Get global metrics of an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListMetricsResponse>
     */
    listMetrics(resourceGroupName: string, name: string, options?: Models.AppServiceEnvironmentsListMetricsOptionalParams): Promise<Models.AppServiceEnvironmentsListMetricsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    listMetrics(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMetrics(resourceGroupName: string, name: string, options: Models.AppServiceEnvironmentsListMetricsOptionalParams, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * Get all multi-role pools.
     * @summary Get all multi-role pools.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListMultiRolePoolsResponse>
     */
    listMultiRolePools(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRolePoolsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    listMultiRolePools(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.WorkerPoolCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMultiRolePools(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkerPoolCollection>): void;
    /**
     * Get properties of a multi-role pool.
     * @summary Get properties of a multi-role pool.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsGetMultiRolePoolResponse>
     */
    getMultiRolePool(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsGetMultiRolePoolResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    getMultiRolePool(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.WorkerPoolResource>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    getMultiRolePool(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkerPoolResource>): void;
    /**
     * Create or update a multi-role pool.
     * @summary Create or update a multi-role pool.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param multiRolePoolEnvelope Properties of the multi-role pool.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsCreateOrUpdateMultiRolePoolResponse>
     */
    createOrUpdateMultiRolePool(resourceGroupName: string, name: string, multiRolePoolEnvelope: Models.WorkerPoolResource, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsCreateOrUpdateMultiRolePoolResponse>;
    /**
     * Create or update a multi-role pool.
     * @summary Create or update a multi-role pool.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param multiRolePoolEnvelope Properties of the multi-role pool.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsUpdateMultiRolePoolResponse>
     */
    updateMultiRolePool(resourceGroupName: string, name: string, multiRolePoolEnvelope: Models.WorkerPoolResource, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsUpdateMultiRolePoolResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param multiRolePoolEnvelope Properties of the multi-role pool.
     * @param callback The callback
     */
    updateMultiRolePool(resourceGroupName: string, name: string, multiRolePoolEnvelope: Models.WorkerPoolResource, callback: msRest.ServiceCallback<Models.WorkerPoolResource>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param multiRolePoolEnvelope Properties of the multi-role pool.
     * @param options The optional parameters
     * @param callback The callback
     */
    updateMultiRolePool(resourceGroupName: string, name: string, multiRolePoolEnvelope: Models.WorkerPoolResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkerPoolResource>): void;
    /**
     * Get metric definitions for a specific instance of a multi-role pool of an App Service
     * Environment.
     * @summary Get metric definitions for a specific instance of a multi-role pool of an App Service
     * Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param instance Name of the instance in the multi-role pool.
     * @param [options] The optional parameters
     * @returns
     * Promise<Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsResponse>
     */
    listMultiRolePoolInstanceMetricDefinitions(resourceGroupName: string, name: string, instance: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param instance Name of the instance in the multi-role pool.
     * @param callback The callback
     */
    listMultiRolePoolInstanceMetricDefinitions(resourceGroupName: string, name: string, instance: string, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param instance Name of the instance in the multi-role pool.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMultiRolePoolInstanceMetricDefinitions(resourceGroupName: string, name: string, instance: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
    /**
     * Get metrics for a specific instance of a multi-role pool of an App Service Environment.
     * @summary Get metrics for a specific instance of a multi-role pool of an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param instance Name of the instance in the multi-role pool.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricsResponse>
     */
    listMultiRolePoolInstanceMetrics(resourceGroupName: string, name: string, instance: string, options?: Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricsOptionalParams): Promise<Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param instance Name of the instance in the multi-role pool.
     * @param callback The callback
     */
    listMultiRolePoolInstanceMetrics(resourceGroupName: string, name: string, instance: string, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param instance Name of the instance in the multi-role pool.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMultiRolePoolInstanceMetrics(resourceGroupName: string, name: string, instance: string, options: Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricsOptionalParams, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * Get metric definitions for a multi-role pool of an App Service Environment.
     * @summary Get metric definitions for a multi-role pool of an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListMultiRoleMetricDefinitionsResponse>
     */
    listMultiRoleMetricDefinitions(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRoleMetricDefinitionsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    listMultiRoleMetricDefinitions(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMultiRoleMetricDefinitions(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
    /**
     * Get metrics for a multi-role pool of an App Service Environment.
     * @summary Get metrics for a multi-role pool of an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListMultiRoleMetricsResponse>
     */
    listMultiRoleMetrics(resourceGroupName: string, name: string, options?: Models.AppServiceEnvironmentsListMultiRoleMetricsOptionalParams): Promise<Models.AppServiceEnvironmentsListMultiRoleMetricsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    listMultiRoleMetrics(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMultiRoleMetrics(resourceGroupName: string, name: string, options: Models.AppServiceEnvironmentsListMultiRoleMetricsOptionalParams, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * Get available SKUs for scaling a multi-role pool.
     * @summary Get available SKUs for scaling a multi-role pool.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListMultiRolePoolSkusResponse>
     */
    listMultiRolePoolSkus(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRolePoolSkusResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    listMultiRolePoolSkus(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.SkuInfoCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMultiRolePoolSkus(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SkuInfoCollection>): void;
    /**
     * Get usage metrics for a multi-role pool of an App Service Environment.
     * @summary Get usage metrics for a multi-role pool of an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListMultiRoleUsagesResponse>
     */
    listMultiRoleUsages(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRoleUsagesResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    listMultiRoleUsages(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.UsageCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMultiRoleUsages(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UsageCollection>): void;
    /**
     * List all currently running operations on the App Service Environment.
     * @summary List all currently running operations on the App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListOperationsResponse>
     */
    listOperations(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListOperationsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    listOperations(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.Operation[]>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    listOperations(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Operation[]>): void;
    /**
     * Get the network endpoints of all outbound dependencies of an App Service Environment.
     * @summary Get the network endpoints of all outbound dependencies of an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsResponse>
     */
    getOutboundNetworkDependenciesEndpoints(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    getOutboundNetworkDependenciesEndpoints(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.OutboundEnvironmentEndpointCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    getOutboundNetworkDependenciesEndpoints(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OutboundEnvironmentEndpointCollection>): void;
    /**
     * Reboot all machines in an App Service Environment.
     * @summary Reboot all machines in an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    reboot(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    reboot(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    reboot(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Resume an App Service Environment.
     * @summary Resume an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsResumeResponse>
     */
    resume(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsResumeResponse>;
    /**
     * Get all App Service plans in an App Service Environment.
     * @summary Get all App Service plans in an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListAppServicePlansResponse>
     */
    listAppServicePlans(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListAppServicePlansResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    listAppServicePlans(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.AppServicePlanCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    listAppServicePlans(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServicePlanCollection>): void;
    /**
     * Get all apps in an App Service Environment.
     * @summary Get all apps in an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListWebAppsResponse>
     */
    listWebApps(resourceGroupName: string, name: string, options?: Models.AppServiceEnvironmentsListWebAppsOptionalParams): Promise<Models.AppServiceEnvironmentsListWebAppsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    listWebApps(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.WebAppCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    listWebApps(resourceGroupName: string, name: string, options: Models.AppServiceEnvironmentsListWebAppsOptionalParams, callback: msRest.ServiceCallback<Models.WebAppCollection>): void;
    /**
     * Suspend an App Service Environment.
     * @summary Suspend an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsSuspendResponse>
     */
    suspend(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsSuspendResponse>;
    /**
     * Get global usage metrics of an App Service Environment.
     * @summary Get global usage metrics of an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListUsagesResponse>
     */
    listUsages(resourceGroupName: string, name: string, options?: Models.AppServiceEnvironmentsListUsagesOptionalParams): Promise<Models.AppServiceEnvironmentsListUsagesResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    listUsages(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.CsmUsageQuotaCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    listUsages(resourceGroupName: string, name: string, options: Models.AppServiceEnvironmentsListUsagesOptionalParams, callback: msRest.ServiceCallback<Models.CsmUsageQuotaCollection>): void;
    /**
     * Get all worker pools of an App Service Environment.
     * @summary Get all worker pools of an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListWorkerPoolsResponse>
     */
    listWorkerPools(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWorkerPoolsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param callback The callback
     */
    listWorkerPools(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.WorkerPoolCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param options The optional parameters
     * @param callback The callback
     */
    listWorkerPools(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkerPoolCollection>): void;
    /**
     * Get properties of a worker pool.
     * @summary Get properties of a worker pool.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsGetWorkerPoolResponse>
     */
    getWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsGetWorkerPoolResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param callback The callback
     */
    getWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, callback: msRest.ServiceCallback<Models.WorkerPoolResource>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param options The optional parameters
     * @param callback The callback
     */
    getWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkerPoolResource>): void;
    /**
     * Create or update a worker pool.
     * @summary Create or update a worker pool.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param workerPoolEnvelope Properties of the worker pool.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsCreateOrUpdateWorkerPoolResponse>
     */
    createOrUpdateWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, workerPoolEnvelope: Models.WorkerPoolResource, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsCreateOrUpdateWorkerPoolResponse>;
    /**
     * Create or update a worker pool.
     * @summary Create or update a worker pool.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param workerPoolEnvelope Properties of the worker pool.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsUpdateWorkerPoolResponse>
     */
    updateWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, workerPoolEnvelope: Models.WorkerPoolResource, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsUpdateWorkerPoolResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param workerPoolEnvelope Properties of the worker pool.
     * @param callback The callback
     */
    updateWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, workerPoolEnvelope: Models.WorkerPoolResource, callback: msRest.ServiceCallback<Models.WorkerPoolResource>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param workerPoolEnvelope Properties of the worker pool.
     * @param options The optional parameters
     * @param callback The callback
     */
    updateWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, workerPoolEnvelope: Models.WorkerPoolResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkerPoolResource>): void;
    /**
     * Get metric definitions for a specific instance of a worker pool of an App Service Environment.
     * @summary Get metric definitions for a specific instance of a worker pool of an App Service
     * Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param instance Name of the instance in the worker pool.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsResponse>
     */
    listWorkerPoolInstanceMetricDefinitions(resourceGroupName: string, name: string, workerPoolName: string, instance: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param instance Name of the instance in the worker pool.
     * @param callback The callback
     */
    listWorkerPoolInstanceMetricDefinitions(resourceGroupName: string, name: string, workerPoolName: string, instance: string, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param instance Name of the instance in the worker pool.
     * @param options The optional parameters
     * @param callback The callback
     */
    listWorkerPoolInstanceMetricDefinitions(resourceGroupName: string, name: string, workerPoolName: string, instance: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
    /**
     * Get metrics for a specific instance of a worker pool of an App Service Environment.
     * @summary Get metrics for a specific instance of a worker pool of an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param instance Name of the instance in the worker pool.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricsResponse>
     */
    listWorkerPoolInstanceMetrics(resourceGroupName: string, name: string, workerPoolName: string, instance: string, options?: Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricsOptionalParams): Promise<Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param instance Name of the instance in the worker pool.
     * @param callback The callback
     */
    listWorkerPoolInstanceMetrics(resourceGroupName: string, name: string, workerPoolName: string, instance: string, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param instance Name of the instance in the worker pool.
     * @param options The optional parameters
     * @param callback The callback
     */
    listWorkerPoolInstanceMetrics(resourceGroupName: string, name: string, workerPoolName: string, instance: string, options: Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricsOptionalParams, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * Get metric definitions for a worker pool of an App Service Environment.
     * @summary Get metric definitions for a worker pool of an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListWebWorkerMetricDefinitionsResponse>
     */
    listWebWorkerMetricDefinitions(resourceGroupName: string, name: string, workerPoolName: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWebWorkerMetricDefinitionsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param callback The callback
     */
    listWebWorkerMetricDefinitions(resourceGroupName: string, name: string, workerPoolName: string, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param options The optional parameters
     * @param callback The callback
     */
    listWebWorkerMetricDefinitions(resourceGroupName: string, name: string, workerPoolName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
    /**
     * Get metrics for a worker pool of a AppServiceEnvironment (App Service Environment).
     * @summary Get metrics for a worker pool of a AppServiceEnvironment (App Service Environment).
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of worker pool
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListWebWorkerMetricsResponse>
     */
    listWebWorkerMetrics(resourceGroupName: string, name: string, workerPoolName: string, options?: Models.AppServiceEnvironmentsListWebWorkerMetricsOptionalParams): Promise<Models.AppServiceEnvironmentsListWebWorkerMetricsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of worker pool
     * @param callback The callback
     */
    listWebWorkerMetrics(resourceGroupName: string, name: string, workerPoolName: string, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of worker pool
     * @param options The optional parameters
     * @param callback The callback
     */
    listWebWorkerMetrics(resourceGroupName: string, name: string, workerPoolName: string, options: Models.AppServiceEnvironmentsListWebWorkerMetricsOptionalParams, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * Get available SKUs for scaling a worker pool.
     * @summary Get available SKUs for scaling a worker pool.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListWorkerPoolSkusResponse>
     */
    listWorkerPoolSkus(resourceGroupName: string, name: string, workerPoolName: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWorkerPoolSkusResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param callback The callback
     */
    listWorkerPoolSkus(resourceGroupName: string, name: string, workerPoolName: string, callback: msRest.ServiceCallback<Models.SkuInfoCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param options The optional parameters
     * @param callback The callback
     */
    listWorkerPoolSkus(resourceGroupName: string, name: string, workerPoolName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SkuInfoCollection>): void;
    /**
     * Get usage metrics for a worker pool of an App Service Environment.
     * @summary Get usage metrics for a worker pool of an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListWebWorkerUsagesResponse>
     */
    listWebWorkerUsages(resourceGroupName: string, name: string, workerPoolName: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWebWorkerUsagesResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param callback The callback
     */
    listWebWorkerUsages(resourceGroupName: string, name: string, workerPoolName: string, callback: msRest.ServiceCallback<Models.UsageCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param options The optional parameters
     * @param callback The callback
     */
    listWebWorkerUsages(resourceGroupName: string, name: string, workerPoolName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UsageCollection>): void;
    /**
     * Create or update an App Service Environment.
     * @summary Create or update an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param hostingEnvironmentEnvelope Configuration details of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, name: string, hostingEnvironmentEnvelope: Models.AppServiceEnvironmentResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Delete an App Service Environment.
     * @summary Delete an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, name: string, options?: Models.AppServiceEnvironmentsBeginDeleteMethodOptionalParams): Promise<msRestAzure.LROPoller>;
    /**
     * Move an App Service Environment to a different VNET.
     * @summary Move an App Service Environment to a different VNET.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param vnetInfo Details for the new virtual network.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginChangeVnet(resourceGroupName: string, name: string, vnetInfo: Models.VirtualNetworkProfile, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Create or update a multi-role pool.
     * @summary Create or update a multi-role pool.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param multiRolePoolEnvelope Properties of the multi-role pool.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdateMultiRolePool(resourceGroupName: string, name: string, multiRolePoolEnvelope: Models.WorkerPoolResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Resume an App Service Environment.
     * @summary Resume an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginResume(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Suspend an App Service Environment.
     * @summary Suspend an App Service Environment.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginSuspend(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Create or update a worker pool.
     * @summary Create or update a worker pool.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Name of the App Service Environment.
     * @param workerPoolName Name of the worker pool.
     * @param workerPoolEnvelope Properties of the worker pool.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdateWorkerPool(resourceGroupName: string, name: string, workerPoolName: string, workerPoolEnvelope: Models.WorkerPoolResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Get all App Service Environments for a subscription.
     * @summary Get all App Service Environments for a subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): void;
    /**
     * Get all App Service Environments in a resource group.
     * @summary Get all App Service Environments in a resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServiceEnvironmentCollection>): void;
    /**
     * Get the used, available, and total worker capacity an App Service Environment.
     * @summary Get the used, available, and total worker capacity an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListCapacitiesNextResponse>
     */
    listCapacitiesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListCapacitiesNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listCapacitiesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.StampCapacityCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listCapacitiesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.StampCapacityCollection>): void;
    /**
     * Move an App Service Environment to a different VNET.
     * @summary Move an App Service Environment to a different VNET.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsChangeVnetNextResponse>
     */
    changeVnetNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsChangeVnetNextResponse>;
    /**
     * Get the network endpoints of all inbound dependencies of an App Service Environment.
     * @summary Get the network endpoints of all inbound dependencies of an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns
     * Promise<Models.AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsNextResponse>
     */
    getInboundNetworkDependenciesEndpointsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsGetInboundNetworkDependenciesEndpointsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    getInboundNetworkDependenciesEndpointsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.InboundEnvironmentEndpointCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    getInboundNetworkDependenciesEndpointsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.InboundEnvironmentEndpointCollection>): void;
    /**
     * Get global metrics of an App Service Environment.
     * @summary Get global metrics of an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListMetricsNextResponse>
     */
    listMetricsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMetricsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listMetricsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMetricsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * Get all multi-role pools.
     * @summary Get all multi-role pools.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListMultiRolePoolsNextResponse>
     */
    listMultiRolePoolsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRolePoolsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listMultiRolePoolsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.WorkerPoolCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMultiRolePoolsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkerPoolCollection>): void;
    /**
     * Get metric definitions for a specific instance of a multi-role pool of an App Service
     * Environment.
     * @summary Get metric definitions for a specific instance of a multi-role pool of an App Service
     * Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns
     * Promise<Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsNextResponse>
     */
    listMultiRolePoolInstanceMetricDefinitionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricDefinitionsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listMultiRolePoolInstanceMetricDefinitionsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMultiRolePoolInstanceMetricDefinitionsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
    /**
     * Get metrics for a specific instance of a multi-role pool of an App Service Environment.
     * @summary Get metrics for a specific instance of a multi-role pool of an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricsNextResponse>
     */
    listMultiRolePoolInstanceMetricsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRolePoolInstanceMetricsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listMultiRolePoolInstanceMetricsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMultiRolePoolInstanceMetricsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * Get metric definitions for a multi-role pool of an App Service Environment.
     * @summary Get metric definitions for a multi-role pool of an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListMultiRoleMetricDefinitionsNextResponse>
     */
    listMultiRoleMetricDefinitionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRoleMetricDefinitionsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listMultiRoleMetricDefinitionsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMultiRoleMetricDefinitionsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
    /**
     * Get metrics for a multi-role pool of an App Service Environment.
     * @summary Get metrics for a multi-role pool of an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListMultiRoleMetricsNextResponse>
     */
    listMultiRoleMetricsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRoleMetricsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listMultiRoleMetricsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMultiRoleMetricsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * Get available SKUs for scaling a multi-role pool.
     * @summary Get available SKUs for scaling a multi-role pool.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListMultiRolePoolSkusNextResponse>
     */
    listMultiRolePoolSkusNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRolePoolSkusNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listMultiRolePoolSkusNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SkuInfoCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMultiRolePoolSkusNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SkuInfoCollection>): void;
    /**
     * Get usage metrics for a multi-role pool of an App Service Environment.
     * @summary Get usage metrics for a multi-role pool of an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListMultiRoleUsagesNextResponse>
     */
    listMultiRoleUsagesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListMultiRoleUsagesNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listMultiRoleUsagesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.UsageCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listMultiRoleUsagesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UsageCollection>): void;
    /**
     * Get the network endpoints of all outbound dependencies of an App Service Environment.
     * @summary Get the network endpoints of all outbound dependencies of an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns
     * Promise<Models.AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsNextResponse>
     */
    getOutboundNetworkDependenciesEndpointsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsGetOutboundNetworkDependenciesEndpointsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    getOutboundNetworkDependenciesEndpointsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.OutboundEnvironmentEndpointCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    getOutboundNetworkDependenciesEndpointsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OutboundEnvironmentEndpointCollection>): void;
    /**
     * Resume an App Service Environment.
     * @summary Resume an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsResumeNextResponse>
     */
    resumeNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsResumeNextResponse>;
    /**
     * Get all App Service plans in an App Service Environment.
     * @summary Get all App Service plans in an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListAppServicePlansNextResponse>
     */
    listAppServicePlansNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListAppServicePlansNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listAppServicePlansNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AppServicePlanCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listAppServicePlansNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AppServicePlanCollection>): void;
    /**
     * Get all apps in an App Service Environment.
     * @summary Get all apps in an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListWebAppsNextResponse>
     */
    listWebAppsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWebAppsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listWebAppsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.WebAppCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listWebAppsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WebAppCollection>): void;
    /**
     * Suspend an App Service Environment.
     * @summary Suspend an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsSuspendNextResponse>
     */
    suspendNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsSuspendNextResponse>;
    /**
     * Get global usage metrics of an App Service Environment.
     * @summary Get global usage metrics of an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListUsagesNextResponse>
     */
    listUsagesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListUsagesNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listUsagesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CsmUsageQuotaCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listUsagesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CsmUsageQuotaCollection>): void;
    /**
     * Get all worker pools of an App Service Environment.
     * @summary Get all worker pools of an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListWorkerPoolsNextResponse>
     */
    listWorkerPoolsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWorkerPoolsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listWorkerPoolsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.WorkerPoolCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listWorkerPoolsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.WorkerPoolCollection>): void;
    /**
     * Get metric definitions for a specific instance of a worker pool of an App Service Environment.
     * @summary Get metric definitions for a specific instance of a worker pool of an App Service
     * Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns
     * Promise<Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsNextResponse>
     */
    listWorkerPoolInstanceMetricDefinitionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricDefinitionsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listWorkerPoolInstanceMetricDefinitionsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listWorkerPoolInstanceMetricDefinitionsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
    /**
     * Get metrics for a specific instance of a worker pool of an App Service Environment.
     * @summary Get metrics for a specific instance of a worker pool of an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricsNextResponse>
     */
    listWorkerPoolInstanceMetricsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWorkerPoolInstanceMetricsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listWorkerPoolInstanceMetricsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listWorkerPoolInstanceMetricsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * Get metric definitions for a worker pool of an App Service Environment.
     * @summary Get metric definitions for a worker pool of an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListWebWorkerMetricDefinitionsNextResponse>
     */
    listWebWorkerMetricDefinitionsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWebWorkerMetricDefinitionsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listWebWorkerMetricDefinitionsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listWebWorkerMetricDefinitionsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricDefinitionCollection>): void;
    /**
     * Get metrics for a worker pool of a AppServiceEnvironment (App Service Environment).
     * @summary Get metrics for a worker pool of a AppServiceEnvironment (App Service Environment).
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListWebWorkerMetricsNextResponse>
     */
    listWebWorkerMetricsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWebWorkerMetricsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listWebWorkerMetricsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listWebWorkerMetricsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceMetricCollection>): void;
    /**
     * Get available SKUs for scaling a worker pool.
     * @summary Get available SKUs for scaling a worker pool.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListWorkerPoolSkusNextResponse>
     */
    listWorkerPoolSkusNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWorkerPoolSkusNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listWorkerPoolSkusNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SkuInfoCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listWorkerPoolSkusNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SkuInfoCollection>): void;
    /**
     * Get usage metrics for a worker pool of an App Service Environment.
     * @summary Get usage metrics for a worker pool of an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AppServiceEnvironmentsListWebWorkerUsagesNextResponse>
     */
    listWebWorkerUsagesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AppServiceEnvironmentsListWebWorkerUsagesNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listWebWorkerUsagesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.UsageCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listWebWorkerUsagesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UsageCollection>): void;
    /**
     * Move an App Service Environment to a different VNET.
     * @summary Move an App Service Environment to a different VNET.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginChangeVnetNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Resume an App Service Environment.
     * @summary Resume an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginResumeNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Suspend an App Service Environment.
     * @summary Suspend an App Service Environment.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginSuspendNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
}
//# sourceMappingURL=appServiceEnvironments.d.ts.map