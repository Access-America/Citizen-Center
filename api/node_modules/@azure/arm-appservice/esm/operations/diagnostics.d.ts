import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { WebSiteManagementClientContext } from "../webSiteManagementClientContext";
/** Class representing a Diagnostics. */
export declare class Diagnostics {
    private readonly client;
    /**
     * Create a Diagnostics.
     * @param {WebSiteManagementClientContext} client Reference to the service client.
     */
    constructor(client: WebSiteManagementClientContext);
    /**
     * List Hosting Environment Detector Responses
     * @summary List Hosting Environment Detector Responses
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListHostingEnvironmentDetectorResponsesResponse>
     */
    listHostingEnvironmentDetectorResponses(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListHostingEnvironmentDetectorResponsesResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site Name
     * @param callback The callback
     */
    listHostingEnvironmentDetectorResponses(resourceGroupName: string, name: string, callback: msRest.ServiceCallback<Models.DetectorResponseCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name Site Name
     * @param options The optional parameters
     * @param callback The callback
     */
    listHostingEnvironmentDetectorResponses(resourceGroupName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DetectorResponseCollection>): void;
    /**
     * Get Hosting Environment Detector Response
     * @summary Get Hosting Environment Detector Response
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name App Service Environment Name
     * @param detectorName Detector Resource Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsGetHostingEnvironmentDetectorResponseResponse>
     */
    getHostingEnvironmentDetectorResponse(resourceGroupName: string, name: string, detectorName: string, options?: Models.DiagnosticsGetHostingEnvironmentDetectorResponseOptionalParams): Promise<Models.DiagnosticsGetHostingEnvironmentDetectorResponseResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name App Service Environment Name
     * @param detectorName Detector Resource Name
     * @param callback The callback
     */
    getHostingEnvironmentDetectorResponse(resourceGroupName: string, name: string, detectorName: string, callback: msRest.ServiceCallback<Models.DetectorResponse>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param name App Service Environment Name
     * @param detectorName Detector Resource Name
     * @param options The optional parameters
     * @param callback The callback
     */
    getHostingEnvironmentDetectorResponse(resourceGroupName: string, name: string, detectorName: string, options: Models.DiagnosticsGetHostingEnvironmentDetectorResponseOptionalParams, callback: msRest.ServiceCallback<Models.DetectorResponse>): void;
    /**
     * List Site Detector Responses
     * @summary List Site Detector Responses
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListSiteDetectorResponsesResponse>
     */
    listSiteDetectorResponses(resourceGroupName: string, siteName: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListSiteDetectorResponsesResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param callback The callback
     */
    listSiteDetectorResponses(resourceGroupName: string, siteName: string, callback: msRest.ServiceCallback<Models.DetectorResponseCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param options The optional parameters
     * @param callback The callback
     */
    listSiteDetectorResponses(resourceGroupName: string, siteName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DetectorResponseCollection>): void;
    /**
     * Get site detector response
     * @summary Get site detector response
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param detectorName Detector Resource Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsGetSiteDetectorResponseResponse>
     */
    getSiteDetectorResponse(resourceGroupName: string, siteName: string, detectorName: string, options?: Models.DiagnosticsGetSiteDetectorResponseOptionalParams): Promise<Models.DiagnosticsGetSiteDetectorResponseResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param detectorName Detector Resource Name
     * @param callback The callback
     */
    getSiteDetectorResponse(resourceGroupName: string, siteName: string, detectorName: string, callback: msRest.ServiceCallback<Models.DetectorResponse>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param detectorName Detector Resource Name
     * @param options The optional parameters
     * @param callback The callback
     */
    getSiteDetectorResponse(resourceGroupName: string, siteName: string, detectorName: string, options: Models.DiagnosticsGetSiteDetectorResponseOptionalParams, callback: msRest.ServiceCallback<Models.DetectorResponse>): void;
    /**
     * Get Diagnostics Categories
     * @summary Get Diagnostics Categories
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListSiteDiagnosticCategoriesResponse>
     */
    listSiteDiagnosticCategories(resourceGroupName: string, siteName: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListSiteDiagnosticCategoriesResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param callback The callback
     */
    listSiteDiagnosticCategories(resourceGroupName: string, siteName: string, callback: msRest.ServiceCallback<Models.DiagnosticCategoryCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param options The optional parameters
     * @param callback The callback
     */
    listSiteDiagnosticCategories(resourceGroupName: string, siteName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticCategoryCollection>): void;
    /**
     * Get Diagnostics Category
     * @summary Get Diagnostics Category
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsGetSiteDiagnosticCategoryResponse>
     */
    getSiteDiagnosticCategory(resourceGroupName: string, siteName: string, diagnosticCategory: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsGetSiteDiagnosticCategoryResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param callback The callback
     */
    getSiteDiagnosticCategory(resourceGroupName: string, siteName: string, diagnosticCategory: string, callback: msRest.ServiceCallback<Models.DiagnosticCategory>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param options The optional parameters
     * @param callback The callback
     */
    getSiteDiagnosticCategory(resourceGroupName: string, siteName: string, diagnosticCategory: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticCategory>): void;
    /**
     * Get Site Analyses
     * @summary Get Site Analyses
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListSiteAnalysesResponse>
     */
    listSiteAnalyses(resourceGroupName: string, siteName: string, diagnosticCategory: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListSiteAnalysesResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param callback The callback
     */
    listSiteAnalyses(resourceGroupName: string, siteName: string, diagnosticCategory: string, callback: msRest.ServiceCallback<Models.DiagnosticAnalysisCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param options The optional parameters
     * @param callback The callback
     */
    listSiteAnalyses(resourceGroupName: string, siteName: string, diagnosticCategory: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticAnalysisCollection>): void;
    /**
     * Get Site Analysis
     * @summary Get Site Analysis
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param analysisName Analysis Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsGetSiteAnalysisResponse>
     */
    getSiteAnalysis(resourceGroupName: string, siteName: string, diagnosticCategory: string, analysisName: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsGetSiteAnalysisResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param analysisName Analysis Name
     * @param callback The callback
     */
    getSiteAnalysis(resourceGroupName: string, siteName: string, diagnosticCategory: string, analysisName: string, callback: msRest.ServiceCallback<Models.DiagnosticAnalysis>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param analysisName Analysis Name
     * @param options The optional parameters
     * @param callback The callback
     */
    getSiteAnalysis(resourceGroupName: string, siteName: string, diagnosticCategory: string, analysisName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticAnalysis>): void;
    /**
     * Execute Analysis
     * @summary Execute Analysis
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Category Name
     * @param analysisName Analysis Resource Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsExecuteSiteAnalysisResponse>
     */
    executeSiteAnalysis(resourceGroupName: string, siteName: string, diagnosticCategory: string, analysisName: string, options?: Models.DiagnosticsExecuteSiteAnalysisOptionalParams): Promise<Models.DiagnosticsExecuteSiteAnalysisResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Category Name
     * @param analysisName Analysis Resource Name
     * @param callback The callback
     */
    executeSiteAnalysis(resourceGroupName: string, siteName: string, diagnosticCategory: string, analysisName: string, callback: msRest.ServiceCallback<Models.DiagnosticAnalysis>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Category Name
     * @param analysisName Analysis Resource Name
     * @param options The optional parameters
     * @param callback The callback
     */
    executeSiteAnalysis(resourceGroupName: string, siteName: string, diagnosticCategory: string, analysisName: string, options: Models.DiagnosticsExecuteSiteAnalysisOptionalParams, callback: msRest.ServiceCallback<Models.DiagnosticAnalysis>): void;
    /**
     * Get Detectors
     * @summary Get Detectors
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListSiteDetectorsResponse>
     */
    listSiteDetectors(resourceGroupName: string, siteName: string, diagnosticCategory: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListSiteDetectorsResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param callback The callback
     */
    listSiteDetectors(resourceGroupName: string, siteName: string, diagnosticCategory: string, callback: msRest.ServiceCallback<Models.DiagnosticDetectorCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param options The optional parameters
     * @param callback The callback
     */
    listSiteDetectors(resourceGroupName: string, siteName: string, diagnosticCategory: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticDetectorCollection>): void;
    /**
     * Get Detector
     * @summary Get Detector
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param detectorName Detector Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsGetSiteDetectorResponse>
     */
    getSiteDetector(resourceGroupName: string, siteName: string, diagnosticCategory: string, detectorName: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsGetSiteDetectorResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param detectorName Detector Name
     * @param callback The callback
     */
    getSiteDetector(resourceGroupName: string, siteName: string, diagnosticCategory: string, detectorName: string, callback: msRest.ServiceCallback<Models.DiagnosticDetectorCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param detectorName Detector Name
     * @param options The optional parameters
     * @param callback The callback
     */
    getSiteDetector(resourceGroupName: string, siteName: string, diagnosticCategory: string, detectorName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticDetectorCollection>): void;
    /**
     * Execute Detector
     * @summary Execute Detector
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param detectorName Detector Resource Name
     * @param diagnosticCategory Category Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsExecuteSiteDetectorResponse>
     */
    executeSiteDetector(resourceGroupName: string, siteName: string, detectorName: string, diagnosticCategory: string, options?: Models.DiagnosticsExecuteSiteDetectorOptionalParams): Promise<Models.DiagnosticsExecuteSiteDetectorResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param detectorName Detector Resource Name
     * @param diagnosticCategory Category Name
     * @param callback The callback
     */
    executeSiteDetector(resourceGroupName: string, siteName: string, detectorName: string, diagnosticCategory: string, callback: msRest.ServiceCallback<Models.DiagnosticDetectorResponse>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param detectorName Detector Resource Name
     * @param diagnosticCategory Category Name
     * @param options The optional parameters
     * @param callback The callback
     */
    executeSiteDetector(resourceGroupName: string, siteName: string, detectorName: string, diagnosticCategory: string, options: Models.DiagnosticsExecuteSiteDetectorOptionalParams, callback: msRest.ServiceCallback<Models.DiagnosticDetectorResponse>): void;
    /**
     * List Site Detector Responses
     * @summary List Site Detector Responses
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param slot Slot Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListSiteDetectorResponsesSlotResponse>
     */
    listSiteDetectorResponsesSlot(resourceGroupName: string, siteName: string, slot: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListSiteDetectorResponsesSlotResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param slot Slot Name
     * @param callback The callback
     */
    listSiteDetectorResponsesSlot(resourceGroupName: string, siteName: string, slot: string, callback: msRest.ServiceCallback<Models.DetectorResponseCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param slot Slot Name
     * @param options The optional parameters
     * @param callback The callback
     */
    listSiteDetectorResponsesSlot(resourceGroupName: string, siteName: string, slot: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DetectorResponseCollection>): void;
    /**
     * Get site detector response
     * @summary Get site detector response
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param detectorName Detector Resource Name
     * @param slot Slot Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsGetSiteDetectorResponseSlotResponse>
     */
    getSiteDetectorResponseSlot(resourceGroupName: string, siteName: string, detectorName: string, slot: string, options?: Models.DiagnosticsGetSiteDetectorResponseSlotOptionalParams): Promise<Models.DiagnosticsGetSiteDetectorResponseSlotResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param detectorName Detector Resource Name
     * @param slot Slot Name
     * @param callback The callback
     */
    getSiteDetectorResponseSlot(resourceGroupName: string, siteName: string, detectorName: string, slot: string, callback: msRest.ServiceCallback<Models.DetectorResponse>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param detectorName Detector Resource Name
     * @param slot Slot Name
     * @param options The optional parameters
     * @param callback The callback
     */
    getSiteDetectorResponseSlot(resourceGroupName: string, siteName: string, detectorName: string, slot: string, options: Models.DiagnosticsGetSiteDetectorResponseSlotOptionalParams, callback: msRest.ServiceCallback<Models.DetectorResponse>): void;
    /**
     * Get Diagnostics Categories
     * @summary Get Diagnostics Categories
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param slot Slot Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListSiteDiagnosticCategoriesSlotResponse>
     */
    listSiteDiagnosticCategoriesSlot(resourceGroupName: string, siteName: string, slot: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListSiteDiagnosticCategoriesSlotResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param slot Slot Name
     * @param callback The callback
     */
    listSiteDiagnosticCategoriesSlot(resourceGroupName: string, siteName: string, slot: string, callback: msRest.ServiceCallback<Models.DiagnosticCategoryCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param slot Slot Name
     * @param options The optional parameters
     * @param callback The callback
     */
    listSiteDiagnosticCategoriesSlot(resourceGroupName: string, siteName: string, slot: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticCategoryCollection>): void;
    /**
     * Get Diagnostics Category
     * @summary Get Diagnostics Category
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param slot Slot Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsGetSiteDiagnosticCategorySlotResponse>
     */
    getSiteDiagnosticCategorySlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, slot: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsGetSiteDiagnosticCategorySlotResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param slot Slot Name
     * @param callback The callback
     */
    getSiteDiagnosticCategorySlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, slot: string, callback: msRest.ServiceCallback<Models.DiagnosticCategory>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param slot Slot Name
     * @param options The optional parameters
     * @param callback The callback
     */
    getSiteDiagnosticCategorySlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, slot: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticCategory>): void;
    /**
     * Get Site Analyses
     * @summary Get Site Analyses
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param slot Slot Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListSiteAnalysesSlotResponse>
     */
    listSiteAnalysesSlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, slot: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListSiteAnalysesSlotResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param slot Slot Name
     * @param callback The callback
     */
    listSiteAnalysesSlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, slot: string, callback: msRest.ServiceCallback<Models.DiagnosticAnalysisCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param slot Slot Name
     * @param options The optional parameters
     * @param callback The callback
     */
    listSiteAnalysesSlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, slot: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticAnalysisCollection>): void;
    /**
     * Get Site Analysis
     * @summary Get Site Analysis
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param analysisName Analysis Name
     * @param slot Slot - optional
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsGetSiteAnalysisSlotResponse>
     */
    getSiteAnalysisSlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, analysisName: string, slot: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsGetSiteAnalysisSlotResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param analysisName Analysis Name
     * @param slot Slot - optional
     * @param callback The callback
     */
    getSiteAnalysisSlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, analysisName: string, slot: string, callback: msRest.ServiceCallback<Models.DiagnosticAnalysis>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param analysisName Analysis Name
     * @param slot Slot - optional
     * @param options The optional parameters
     * @param callback The callback
     */
    getSiteAnalysisSlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, analysisName: string, slot: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticAnalysis>): void;
    /**
     * Execute Analysis
     * @summary Execute Analysis
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Category Name
     * @param analysisName Analysis Resource Name
     * @param slot Slot Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsExecuteSiteAnalysisSlotResponse>
     */
    executeSiteAnalysisSlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, analysisName: string, slot: string, options?: Models.DiagnosticsExecuteSiteAnalysisSlotOptionalParams): Promise<Models.DiagnosticsExecuteSiteAnalysisSlotResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Category Name
     * @param analysisName Analysis Resource Name
     * @param slot Slot Name
     * @param callback The callback
     */
    executeSiteAnalysisSlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, analysisName: string, slot: string, callback: msRest.ServiceCallback<Models.DiagnosticAnalysis>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Category Name
     * @param analysisName Analysis Resource Name
     * @param slot Slot Name
     * @param options The optional parameters
     * @param callback The callback
     */
    executeSiteAnalysisSlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, analysisName: string, slot: string, options: Models.DiagnosticsExecuteSiteAnalysisSlotOptionalParams, callback: msRest.ServiceCallback<Models.DiagnosticAnalysis>): void;
    /**
     * Get Detectors
     * @summary Get Detectors
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param slot Slot Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListSiteDetectorsSlotResponse>
     */
    listSiteDetectorsSlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, slot: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListSiteDetectorsSlotResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param slot Slot Name
     * @param callback The callback
     */
    listSiteDetectorsSlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, slot: string, callback: msRest.ServiceCallback<Models.DiagnosticDetectorCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param slot Slot Name
     * @param options The optional parameters
     * @param callback The callback
     */
    listSiteDetectorsSlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, slot: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticDetectorCollection>): void;
    /**
     * Get Detector
     * @summary Get Detector
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param detectorName Detector Name
     * @param slot Slot Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsGetSiteDetectorSlotResponse>
     */
    getSiteDetectorSlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, detectorName: string, slot: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsGetSiteDetectorSlotResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param detectorName Detector Name
     * @param slot Slot Name
     * @param callback The callback
     */
    getSiteDetectorSlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, detectorName: string, slot: string, callback: msRest.ServiceCallback<Models.DiagnosticDetectorCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param diagnosticCategory Diagnostic Category
     * @param detectorName Detector Name
     * @param slot Slot Name
     * @param options The optional parameters
     * @param callback The callback
     */
    getSiteDetectorSlot(resourceGroupName: string, siteName: string, diagnosticCategory: string, detectorName: string, slot: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticDetectorCollection>): void;
    /**
     * Execute Detector
     * @summary Execute Detector
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param detectorName Detector Resource Name
     * @param diagnosticCategory Category Name
     * @param slot Slot Name
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsExecuteSiteDetectorSlotResponse>
     */
    executeSiteDetectorSlot(resourceGroupName: string, siteName: string, detectorName: string, diagnosticCategory: string, slot: string, options?: Models.DiagnosticsExecuteSiteDetectorSlotOptionalParams): Promise<Models.DiagnosticsExecuteSiteDetectorSlotResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param detectorName Detector Resource Name
     * @param diagnosticCategory Category Name
     * @param slot Slot Name
     * @param callback The callback
     */
    executeSiteDetectorSlot(resourceGroupName: string, siteName: string, detectorName: string, diagnosticCategory: string, slot: string, callback: msRest.ServiceCallback<Models.DiagnosticDetectorResponse>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param siteName Site Name
     * @param detectorName Detector Resource Name
     * @param diagnosticCategory Category Name
     * @param slot Slot Name
     * @param options The optional parameters
     * @param callback The callback
     */
    executeSiteDetectorSlot(resourceGroupName: string, siteName: string, detectorName: string, diagnosticCategory: string, slot: string, options: Models.DiagnosticsExecuteSiteDetectorSlotOptionalParams, callback: msRest.ServiceCallback<Models.DiagnosticDetectorResponse>): void;
    /**
     * List Hosting Environment Detector Responses
     * @summary List Hosting Environment Detector Responses
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListHostingEnvironmentDetectorResponsesNextResponse>
     */
    listHostingEnvironmentDetectorResponsesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListHostingEnvironmentDetectorResponsesNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listHostingEnvironmentDetectorResponsesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DetectorResponseCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listHostingEnvironmentDetectorResponsesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DetectorResponseCollection>): void;
    /**
     * List Site Detector Responses
     * @summary List Site Detector Responses
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListSiteDetectorResponsesNextResponse>
     */
    listSiteDetectorResponsesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListSiteDetectorResponsesNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listSiteDetectorResponsesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DetectorResponseCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listSiteDetectorResponsesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DetectorResponseCollection>): void;
    /**
     * Get Diagnostics Categories
     * @summary Get Diagnostics Categories
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListSiteDiagnosticCategoriesNextResponse>
     */
    listSiteDiagnosticCategoriesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListSiteDiagnosticCategoriesNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listSiteDiagnosticCategoriesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DiagnosticCategoryCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listSiteDiagnosticCategoriesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticCategoryCollection>): void;
    /**
     * Get Site Analyses
     * @summary Get Site Analyses
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListSiteAnalysesNextResponse>
     */
    listSiteAnalysesNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListSiteAnalysesNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listSiteAnalysesNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DiagnosticAnalysisCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listSiteAnalysesNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticAnalysisCollection>): void;
    /**
     * Get Detectors
     * @summary Get Detectors
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListSiteDetectorsNextResponse>
     */
    listSiteDetectorsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListSiteDetectorsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listSiteDetectorsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DiagnosticDetectorCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listSiteDetectorsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticDetectorCollection>): void;
    /**
     * Get Detector
     * @summary Get Detector
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsGetSiteDetectorNextResponse>
     */
    getSiteDetectorNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsGetSiteDetectorNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    getSiteDetectorNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DiagnosticDetectorCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    getSiteDetectorNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticDetectorCollection>): void;
    /**
     * List Site Detector Responses
     * @summary List Site Detector Responses
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListSiteDetectorResponsesSlotNextResponse>
     */
    listSiteDetectorResponsesSlotNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListSiteDetectorResponsesSlotNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listSiteDetectorResponsesSlotNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DetectorResponseCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listSiteDetectorResponsesSlotNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DetectorResponseCollection>): void;
    /**
     * Get Diagnostics Categories
     * @summary Get Diagnostics Categories
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListSiteDiagnosticCategoriesSlotNextResponse>
     */
    listSiteDiagnosticCategoriesSlotNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListSiteDiagnosticCategoriesSlotNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listSiteDiagnosticCategoriesSlotNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DiagnosticCategoryCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listSiteDiagnosticCategoriesSlotNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticCategoryCollection>): void;
    /**
     * Get Site Analyses
     * @summary Get Site Analyses
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListSiteAnalysesSlotNextResponse>
     */
    listSiteAnalysesSlotNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListSiteAnalysesSlotNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listSiteAnalysesSlotNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DiagnosticAnalysisCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listSiteAnalysesSlotNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticAnalysisCollection>): void;
    /**
     * Get Detectors
     * @summary Get Detectors
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsListSiteDetectorsSlotNextResponse>
     */
    listSiteDetectorsSlotNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsListSiteDetectorsSlotNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listSiteDetectorsSlotNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DiagnosticDetectorCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listSiteDetectorsSlotNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticDetectorCollection>): void;
    /**
     * Get Detector
     * @summary Get Detector
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DiagnosticsGetSiteDetectorSlotNextResponse>
     */
    getSiteDetectorSlotNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DiagnosticsGetSiteDetectorSlotNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    getSiteDetectorSlotNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DiagnosticDetectorCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    getSiteDetectorSlotNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiagnosticDetectorCollection>): void;
}
//# sourceMappingURL=diagnostics.d.ts.map