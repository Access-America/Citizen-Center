import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { WebSiteManagementClientContext } from "../webSiteManagementClientContext";
/** Class representing a Domains. */
export declare class Domains {
    private readonly client;
    /**
     * Create a Domains.
     * @param {WebSiteManagementClientContext} client Reference to the service client.
     */
    constructor(client: WebSiteManagementClientContext);
    /**
     * Check if a domain is available for registration.
     * @summary Check if a domain is available for registration.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsCheckAvailabilityResponse>
     */
    checkAvailability(options?: Models.DomainsCheckAvailabilityOptionalParams): Promise<Models.DomainsCheckAvailabilityResponse>;
    /**
     * @param callback The callback
     */
    checkAvailability(callback: msRest.ServiceCallback<Models.DomainAvailablilityCheckResult>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    checkAvailability(options: Models.DomainsCheckAvailabilityOptionalParams, callback: msRest.ServiceCallback<Models.DomainAvailablilityCheckResult>): void;
    /**
     * Get all domains in a subscription.
     * @summary Get all domains in a subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsListResponse>
     */
    list(options?: msRest.RequestOptionsBase): Promise<Models.DomainsListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.DomainCollection>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DomainCollection>): void;
    /**
     * Generate a single sign-on request for the domain management portal.
     * @summary Generate a single sign-on request for the domain management portal.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsGetControlCenterSsoRequestResponse>
     */
    getControlCenterSsoRequest(options?: msRest.RequestOptionsBase): Promise<Models.DomainsGetControlCenterSsoRequestResponse>;
    /**
     * @param callback The callback
     */
    getControlCenterSsoRequest(callback: msRest.ServiceCallback<Models.DomainControlCenterSsoRequest>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    getControlCenterSsoRequest(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DomainControlCenterSsoRequest>): void;
    /**
     * Get domain name recommendations based on keywords.
     * @summary Get domain name recommendations based on keywords.
     * @param parameters Search parameters for domain name recommendations.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsListRecommendationsResponse>
     */
    listRecommendations(parameters: Models.DomainRecommendationSearchParameters, options?: msRest.RequestOptionsBase): Promise<Models.DomainsListRecommendationsResponse>;
    /**
     * @param parameters Search parameters for domain name recommendations.
     * @param callback The callback
     */
    listRecommendations(parameters: Models.DomainRecommendationSearchParameters, callback: msRest.ServiceCallback<Models.NameIdentifierCollection>): void;
    /**
     * @param parameters Search parameters for domain name recommendations.
     * @param options The optional parameters
     * @param callback The callback
     */
    listRecommendations(parameters: Models.DomainRecommendationSearchParameters, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.NameIdentifierCollection>): void;
    /**
     * Get all domains in a resource group.
     * @summary Get all domains in a resource group.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.DomainsListByResourceGroupResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.DomainCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DomainCollection>): void;
    /**
     * Get a domain.
     * @summary Get a domain.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of the domain.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsGetResponse>
     */
    get(resourceGroupName: string, domainName: string, options?: msRest.RequestOptionsBase): Promise<Models.DomainsGetResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of the domain.
     * @param callback The callback
     */
    get(resourceGroupName: string, domainName: string, callback: msRest.ServiceCallback<Models.Domain>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of the domain.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, domainName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Domain>): void;
    /**
     * Creates or updates a domain.
     * @summary Creates or updates a domain.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of the domain.
     * @param domain Domain registration information.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, domainName: string, domain: Models.Domain, options?: msRest.RequestOptionsBase): Promise<Models.DomainsCreateOrUpdateResponse>;
    /**
     * Delete a domain.
     * @summary Delete a domain.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of the domain.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, domainName: string, options?: Models.DomainsDeleteMethodOptionalParams): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of the domain.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, domainName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of the domain.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, domainName: string, options: Models.DomainsDeleteMethodOptionalParams, callback: msRest.ServiceCallback<void>): void;
    /**
     * Creates or updates a domain.
     * @summary Creates or updates a domain.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of the domain.
     * @param domain Domain registration information.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsUpdateResponse>
     */
    update(resourceGroupName: string, domainName: string, domain: Models.DomainPatchResource, options?: msRest.RequestOptionsBase): Promise<Models.DomainsUpdateResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of the domain.
     * @param domain Domain registration information.
     * @param callback The callback
     */
    update(resourceGroupName: string, domainName: string, domain: Models.DomainPatchResource, callback: msRest.ServiceCallback<Models.Domain>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of the domain.
     * @param domain Domain registration information.
     * @param options The optional parameters
     * @param callback The callback
     */
    update(resourceGroupName: string, domainName: string, domain: Models.DomainPatchResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Domain>): void;
    /**
     * Lists domain ownership identifiers.
     * @summary Lists domain ownership identifiers.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of domain.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsListOwnershipIdentifiersResponse>
     */
    listOwnershipIdentifiers(resourceGroupName: string, domainName: string, options?: msRest.RequestOptionsBase): Promise<Models.DomainsListOwnershipIdentifiersResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of domain.
     * @param callback The callback
     */
    listOwnershipIdentifiers(resourceGroupName: string, domainName: string, callback: msRest.ServiceCallback<Models.DomainOwnershipIdentifierCollection>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of domain.
     * @param options The optional parameters
     * @param callback The callback
     */
    listOwnershipIdentifiers(resourceGroupName: string, domainName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DomainOwnershipIdentifierCollection>): void;
    /**
     * Get ownership identifier for domain
     * @summary Get ownership identifier for domain
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of domain.
     * @param name Name of identifier.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsGetOwnershipIdentifierResponse>
     */
    getOwnershipIdentifier(resourceGroupName: string, domainName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.DomainsGetOwnershipIdentifierResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of domain.
     * @param name Name of identifier.
     * @param callback The callback
     */
    getOwnershipIdentifier(resourceGroupName: string, domainName: string, name: string, callback: msRest.ServiceCallback<Models.DomainOwnershipIdentifier>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of domain.
     * @param name Name of identifier.
     * @param options The optional parameters
     * @param callback The callback
     */
    getOwnershipIdentifier(resourceGroupName: string, domainName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DomainOwnershipIdentifier>): void;
    /**
     * Creates an ownership identifier for a domain or updates identifier details for an existing
     * identifer
     * @summary Creates an ownership identifier for a domain or updates identifier details for an
     * existing identifer
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of domain.
     * @param name Name of identifier.
     * @param domainOwnershipIdentifier A JSON representation of the domain ownership properties.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsCreateOrUpdateOwnershipIdentifierResponse>
     */
    createOrUpdateOwnershipIdentifier(resourceGroupName: string, domainName: string, name: string, domainOwnershipIdentifier: Models.DomainOwnershipIdentifier, options?: msRest.RequestOptionsBase): Promise<Models.DomainsCreateOrUpdateOwnershipIdentifierResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of domain.
     * @param name Name of identifier.
     * @param domainOwnershipIdentifier A JSON representation of the domain ownership properties.
     * @param callback The callback
     */
    createOrUpdateOwnershipIdentifier(resourceGroupName: string, domainName: string, name: string, domainOwnershipIdentifier: Models.DomainOwnershipIdentifier, callback: msRest.ServiceCallback<Models.DomainOwnershipIdentifier>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of domain.
     * @param name Name of identifier.
     * @param domainOwnershipIdentifier A JSON representation of the domain ownership properties.
     * @param options The optional parameters
     * @param callback The callback
     */
    createOrUpdateOwnershipIdentifier(resourceGroupName: string, domainName: string, name: string, domainOwnershipIdentifier: Models.DomainOwnershipIdentifier, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DomainOwnershipIdentifier>): void;
    /**
     * Delete ownership identifier for domain
     * @summary Delete ownership identifier for domain
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of domain.
     * @param name Name of identifier.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteOwnershipIdentifier(resourceGroupName: string, domainName: string, name: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of domain.
     * @param name Name of identifier.
     * @param callback The callback
     */
    deleteOwnershipIdentifier(resourceGroupName: string, domainName: string, name: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of domain.
     * @param name Name of identifier.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteOwnershipIdentifier(resourceGroupName: string, domainName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Creates an ownership identifier for a domain or updates identifier details for an existing
     * identifer
     * @summary Creates an ownership identifier for a domain or updates identifier details for an
     * existing identifer
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of domain.
     * @param name Name of identifier.
     * @param domainOwnershipIdentifier A JSON representation of the domain ownership properties.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsUpdateOwnershipIdentifierResponse>
     */
    updateOwnershipIdentifier(resourceGroupName: string, domainName: string, name: string, domainOwnershipIdentifier: Models.DomainOwnershipIdentifier, options?: msRest.RequestOptionsBase): Promise<Models.DomainsUpdateOwnershipIdentifierResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of domain.
     * @param name Name of identifier.
     * @param domainOwnershipIdentifier A JSON representation of the domain ownership properties.
     * @param callback The callback
     */
    updateOwnershipIdentifier(resourceGroupName: string, domainName: string, name: string, domainOwnershipIdentifier: Models.DomainOwnershipIdentifier, callback: msRest.ServiceCallback<Models.DomainOwnershipIdentifier>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of domain.
     * @param name Name of identifier.
     * @param domainOwnershipIdentifier A JSON representation of the domain ownership properties.
     * @param options The optional parameters
     * @param callback The callback
     */
    updateOwnershipIdentifier(resourceGroupName: string, domainName: string, name: string, domainOwnershipIdentifier: Models.DomainOwnershipIdentifier, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DomainOwnershipIdentifier>): void;
    /**
     * Renew a domain.
     * @summary Renew a domain.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of the domain.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    renew(resourceGroupName: string, domainName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of the domain.
     * @param callback The callback
     */
    renew(resourceGroupName: string, domainName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of the domain.
     * @param options The optional parameters
     * @param callback The callback
     */
    renew(resourceGroupName: string, domainName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Creates or updates a domain.
     * @summary Creates or updates a domain.
     * @param resourceGroupName Name of the resource group to which the resource belongs.
     * @param domainName Name of the domain.
     * @param domain Domain registration information.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, domainName: string, domain: Models.Domain, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Get all domains in a subscription.
     * @summary Get all domains in a subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DomainsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DomainCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DomainCollection>): void;
    /**
     * Get domain name recommendations based on keywords.
     * @summary Get domain name recommendations based on keywords.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsListRecommendationsNextResponse>
     */
    listRecommendationsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DomainsListRecommendationsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listRecommendationsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.NameIdentifierCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listRecommendationsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.NameIdentifierCollection>): void;
    /**
     * Get all domains in a resource group.
     * @summary Get all domains in a resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DomainsListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DomainCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DomainCollection>): void;
    /**
     * Lists domain ownership identifiers.
     * @summary Lists domain ownership identifiers.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DomainsListOwnershipIdentifiersNextResponse>
     */
    listOwnershipIdentifiersNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DomainsListOwnershipIdentifiersNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listOwnershipIdentifiersNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DomainOwnershipIdentifierCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listOwnershipIdentifiersNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DomainOwnershipIdentifierCollection>): void;
}
//# sourceMappingURL=domains.d.ts.map